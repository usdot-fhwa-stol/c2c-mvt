{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "ngTMDD v1.0 JSON schema",
    "description": "This is JSON schema for Next Generation Traffic Management Data Dictionary (ngTMDD) proposed User Comment Draft (pUCD) standard for the Center to Center (C2C) communications.",
    "properties": {
        "message": {
            "type": "object",
            "oneOf": [
                {"$ref": "#/ActivityLogRequest"},
                {"$ref": "#/ActivityLogResponse"},
                {"$ref": "#/CCTVChangeCancellationRequest"},
                {"$ref": "#/CCTVChangeCancellationResponse"},
                {"$ref": "#/CCTVChangeRequest"},
                {"$ref": "#/CCTVChangeResponse"},
                {"$ref": "#/CCTVChangeStatusRequest"},
                {"$ref": "#/CCTVChangeStatusResponse"},
                {"$ref": "#/CCTVControlCommandRequest"},
                {"$ref": "#/CCTVControlCommandResponse"},
                {"$ref": "#/CCTVImageLinkRequest"},
                {"$ref": "#/CCTVImageLinkRequestResponse"},
                {"$ref": "#/CCTVInventoryInformationRequest"},
                {"$ref": "#/CCTVInventoryInformationResponse"},
                {"$ref": "#/CCTVStatusRequest"},
                {"$ref": "#/CCTVStatusResponse"},
                {"$ref": "#/CenterConnectionRequest"},
                {"$ref": "#/CenterConnectionResponse"},
                {"$ref": "#/ConfirmationReceipts"},
                {"$ref": "#/CurrentlyActiveSubscriptionsRequest"},
                {"$ref": "#/CurrentlyActiveSubscriptionsResponse"},
                {"$ref": "#/DMSChangeCancellationRequest"},
                {"$ref": "#/DMSChangeCancellationResponse"},
                {"$ref": "#/DMSChangeRequest"},
                {"$ref": "#/DMSChangeResponse"},
                {"$ref": "#/DMSChangeStatusRequest"},
                {"$ref": "#/DMSChangeStatusResponse"},
                {"$ref": "#/DMSControlCommandRequest"},
                {"$ref": "#/DMSControlCommandResponse"},
                {"$ref": "#/DMSFontTableRequest"},
                {"$ref": "#/DMSFontTableResponse"},
                {"$ref": "#/DMSGraphicTableRequest"},
                {"$ref": "#/DMSGraphicTableResponse"},
                {"$ref": "#/DMSInventoryRequest"},
                {"$ref": "#/DMSInventoryResponse"},
                {"$ref": "#/DMSMessageAppearanceRequest"},
                {"$ref": "#/DMSMessageAppearanceResponse"},
                {"$ref": "#/DMSMessageTableInventoryResponse"},
                {"$ref": "#/DMSPriorityQueueRequest"},
                {"$ref": "#/DMSPriorityQueueResponse"},
                {"$ref": "#/DMSStatusInformationRequest"},
                {"$ref": "#/DMSStatusInformationResponse"},
                {"$ref": "#/DetectorDataRequest"},
                {"$ref": "#/DetectorDataResponse"},
                {"$ref": "#/DetectorInventoryRequest"},
                {"$ref": "#/DetectorInventoryResponse"},
                {"$ref": "#/DetectorMaintenanceHistoryRequest"},
                {"$ref": "#/DetectorMaintenanceHistoryResponse"},
                {"$ref": "#/DetectorStatusRequest"},
                {"$ref": "#/DetectorStatusResponse"},
                {"$ref": "#/DeviceChangeCancellationResponse"},
                {"$ref": "#/DeviceChangeStatusResponse"},
                {"$ref": "#/DmsMessageTableInventoryRequest"},
                {"$ref": "#/ESSInventoryInformationRequest"},
                {"$ref": "#/ESSInventoryInformationResponse"},
                {"$ref": "#/ESSMetadataRequest"},
                {"$ref": "#/ESSMetadataResponse"},
                {"$ref": "#/ESSObservationDataRequest"},
                {"$ref": "#/ESSStatusRequest"},
                {"$ref": "#/ESSStatusResponse"},
                {"$ref": "#/ESSobservationDataResponse"},
                {"$ref": "#/EventIndexRequest"},
                {"$ref": "#/EventIndexResponse"},
                {"$ref": "#/EventInformationRequest"},
                {"$ref": "#/EventInformationResponse"},
                {"$ref": "#/FleetVehicleInventoryRequest"},
                {"$ref": "#/FleetVehicleInventoryResponse"},
                {"$ref": "#/FleetVehicleRequest"},
                {"$ref": "#/FleetVehicleResponse"},
                {"$ref": "#/GateControlCancellationRequest"},
                {"$ref": "#/GateControlCancellationResponse"},
                {"$ref": "#/GateControlCommandRequest"},
                {"$ref": "#/GateControlCommandResponse"},
                {"$ref": "#/GateControlRequest"},
                {"$ref": "#/GateControlResponse"},
                {"$ref": "#/GateControlStatusRequest"},
                {"$ref": "#/GateControlStatusResponse"},
                {"$ref": "#/GateInventoryRequest"},
                {"$ref": "#/GateInventoryResponse"},
                {"$ref": "#/GateScheduleRequest"},
                {"$ref": "#/GateScheduleResponse"},
                {"$ref": "#/GateStatusRequest"},
                {"$ref": "#/GateStatusResponse"},
                {"$ref": "#/IntersectionStatusRequest"},
                {"$ref": "#/IntersectionStatusResponse"},
                {"$ref": "#/LCSChangeCancellationRequest"},
                {"$ref": "#/LCSChangeCancellationResponse"},
                {"$ref": "#/LCSChangeRequest"},
                {"$ref": "#/LCSChangeResponse"},
                {"$ref": "#/LCSChangeStatusRequest"},
                {"$ref": "#/LCSChangeStatusResponse"},
                {"$ref": "#/LCSControlCommandRequest"},
                {"$ref": "#/LCSControlCommandResponse"},
                {"$ref": "#/LCSInventoryInformationRequest"},
                {"$ref": "#/LCSInventoryInformationResponse"},
                {"$ref": "#/LCSScheduleRequest"},
                {"$ref": "#/LCSScheduleResponse"},
                {"$ref": "#/LCSStatusRequest"},
                {"$ref": "#/LCSStatusResponse"},
                {"$ref": "#/LinkInventoryRequest"},
                {"$ref": "#/LinkInventoryResponse"},
                {"$ref": "#/LinkStatusRequest"},
                {"$ref": "#/LinkStatusResponse"},
                {"$ref": "#/MeteringPlanRequest"},
                {"$ref": "#/MeteringPlanResponse"},
                {"$ref": "#/NodeInventoryInformationResponse"},
                {"$ref": "#/NodeInventoryRequest"},
                {"$ref": "#/NodeStatusRequest"},
                {"$ref": "#/NodeStatusResponse"},
                {"$ref": "#/OrganizationInformationRequest"},
                {"$ref": "#/OrganizationInformationResponse"},
                {"$ref": "#/ProcessingDocMetaDataInfoRequest"},
                {"$ref": "#/ProcessingDocMetaDataInfoResponse"},
                {"$ref": "#/RSUDataRequest"},
                {"$ref": "#/RSUDataResponse"},
                {"$ref": "#/RSUInventoryRequest"},
                {"$ref": "#/RSUInventoryResponse"},
                {"$ref": "#/RSUStatusRequest"},
                {"$ref": "#/RSUStatusResponse"},
                {"$ref": "#/RampMeterChangeCancellationRequest"},
                {"$ref": "#/RampMeterChangeCancellationResponse"},
                {"$ref": "#/RampMeterChangeRequest"},
                {"$ref": "#/RampMeterChangeResponse"},
                {"$ref": "#/RampMeterChangeStatusRequest"},
                {"$ref": "#/RampMeterChangeStatusResponse"},
                {"$ref": "#/RampMeterControlCommandRequest"},
                {"$ref": "#/RampMeterControlCommandResponse"},
                {"$ref": "#/RampMeterInventoryRequest"},
                {"$ref": "#/RampMeterInventoryResponse"},
                {"$ref": "#/RampMeterPriorityQueueRequest"},
                {"$ref": "#/RampMeterPriorityQueueResponse"},
                {"$ref": "#/RampMeterScheduleRequest"},
                {"$ref": "#/RampMeterScheduleResponse"},
                {"$ref": "#/RampMeterStatusRequest"},
                {"$ref": "#/RampMeterStatusResponse"},
                {"$ref": "#/ResponsePlanApprovalRequest"},
                {"$ref": "#/ResponsePlanApprovalResponse"},
                {"$ref": "#/ResponsePlanCancellationRequest"},
                {"$ref": "#/ResponsePlanCancellationResponse"},
                {"$ref": "#/ResponsePlanRequest"},
                {"$ref": "#/ResponsePlanResponse"},
                {"$ref": "#/ResponsePlanStatusRequest"},
                {"$ref": "#/ResponsePlanStatusResponse"},
                {"$ref": "#/RouteInventoryRequest"},
                {"$ref": "#/RouteInventoryResponse"},
                {"$ref": "#/RouteStatusRequest"},
                {"$ref": "#/RouteStatusResponse"},
                {"$ref": "#/SectionChangePriorityQueueRequest"},
                {"$ref": "#/SectionChangePriorityQueueResponse"},
                {"$ref": "#/SectionChangeStatusRequest"},
                {"$ref": "#/SectionChangeStatusResponse"},
                {"$ref": "#/SectionStatusInformationRequest"},
                {"$ref": "#/SectionStatusInformationResponse"},
                {"$ref": "#/SectionTimingPatternInformationRequest"},
                {"$ref": "#/SectionTimingPatternInformationResponse"},
                {"$ref": "#/SectionTimingPatternScheduleRequest"},
                {"$ref": "#/SectionTimingPatternScheduleResponse"},
                {"$ref": "#/SignalChangePriorityQueueRequest"},
                {"$ref": "#/SignalChangePriorityQueueResponse"},
                {"$ref": "#/SignalChangeRequest"},
                {"$ref": "#/SignalChangeResponse"},
                {"$ref": "#/SignalControllerCancellationRequest"},
                {"$ref": "#/SignalControllerCancellationResponse"},
                {"$ref": "#/SignalControllerChangeStatusRequest"},
                {"$ref": "#/SignalControllerChangeStatusResponse"},
                {"$ref": "#/SignalInventoryRequest"},
                {"$ref": "#/SignalInventoryResponse"},
                {"$ref": "#/SignalSectionCancellationRequest"},
                {"$ref": "#/SignalSectionCancellationResponse"},
                {"$ref": "#/SignalSectionChangeRequest"},
                {"$ref": "#/SignalSectionChangeResponse"},
                {"$ref": "#/SignalSectionInventoryRequest"},
                {"$ref": "#/SignalSectionInventoryResponse"},
                {"$ref": "#/SignalTimingPatternRequest"},
                {"$ref": "#/SignalTimingPatternResponse"},
                {"$ref": "#/SignalTimingPatternScheduleRequest"},
                {"$ref": "#/SignalTimingPatternScheduleResponse"},
                {"$ref": "#/SubscriptionInformationRequest"},
                {"$ref": "#/SubscriptionInformationResponse"},
                {"$ref": "#/TrafficMonitoringDataInventoryRequest"},
                {"$ref": "#/TrafficMonitoringDataInventoryResponse"},
                {"$ref": "#/TrafficSignalControllerCommandRequest"},
                {"$ref": "#/TrafficSignalControllerCommandResponse"}
            ]
        }
    },
    "required": [
        "message"
    ],
    "additionalProperties": false,
    "$defs": {
        "ActivityTypes": {
            "type": "string",
            "enum": [
                "system new",
                "system update",
                "system ended",
                "user activity",
                "user pager activity"
            ]
        },
        "AreaLocation": {
            "description": "Optional requirements for event location information when area location is used",
            "type": "object",
            "$reqId": "3.3.3.5.1.3.4.1",
            "properties": {
                "areaIdentifier": {
                    "$reqId": "3.3.3.5.1.3.4.1.1",
                    "description": "Provide unique identifier of the defined area in event location information",
                    "type": "string"
                },
                "nameArea": {
                    "$reqId": "3.3.3.5.1.3.4.1.2",
                    "description": "Provide the name of the area assigned by the owner organization as part of the event location information.",
                    "type": "string"
                },
                "areaLocationRank": {
                    "$reqId": "3.3.3.5.1.3.4.1.3",
                    "description": "Provide the location rank of the area assigned by the owner organization as part of the event location information.",
                    "type": "number"
                },
                "secondaryAreaLocationReference": {
                    "$reqId": "3.3.3.5.1.3.4.1.4",
                    "description": "Provide secondary identifier for event location information",
                    "type": "string"
                }
            }
        },
        "AuthHeader": {
            "type": "object",
            "$comment": "Reference: https://www.w3.org/Protocols/HTTP/HTRQ_Headers.html#z9",
            "properties": {
                "Authorization": {
                    "type": "string",
                    "pattern": "Bearer\\s+([A-Za-z0-9-_=.]+)",
                    "description": "OAuth 2.0 Bearer Token"
                }
            },
            "required": [
                "Authorization"
            ]
        },
        "CCTVEnvironmentalFeatures": {
            "type": "object",
            "properties": {
                "cameraPower": {
                    "$ref": "#/$defs/CameraFeatureStatus"
                },
                "heaterPower": {
                    "$ref": "#/$defs/CameraFeatureStatus"
                },
                "wiper": {
                    "$ref": "#/$defs/CameraFeatureStatus"
                },
                "washer": {
                    "$ref": "#/$defs/CameraFeatureStatus"
                },
                "blower": {
                    "$ref": "#/$defs/CameraFeatureStatus"
                }
            },
            "required": [
                "cameraPower",
                "heaterPower",
                "wiper",
                "washer",
                "blower"
            ]
        },
        "CameraFeatureStatus": {
            "type": "string",
            "enum": [
                "on",
                "off",
                "unknown"
            ]
        },
        "ClimateRecordInformation": {
            "description": "Include climate record metadata information in ESS metadata sent to external center if available",
            "type": "object",
            "$reqId": "3.3.5.5.4.3.7",
            "properties": {
                "minObservedValue": {
                    "$reqId": "3.3.5.5.4.3.7.a",
                    "description": "Minimum observed value for this observation type for the month",
                    "type": "string"
                },
                "maxObservedValue": {
                    "$reqId": "3.3.5.5.4.3.7.b",
                    "description": "Maximum observed value for this observation type this month",
                    "type": "string"
                },
                "month": {
                    "$reqId": "3.3.5.5.4.3.7.c",
                    "description": "Month to which the climate record applies",
                    "type": "string"
                }
            }
        },
        "CollectorConfigurationContent": {
            "description": "Requirements for an owner center to send collector configuration metadata information to an external center",
            "type": "object",
            "$reqId": "3.3.5.5.4.3.2.2",
            "properties": {
                "headerIndex": {
                    "$reqId": "3.3.5.5.4.3.2.2.1.a",
                    "description": "Index indicating the order of observation type in collected observations",
                    "type": "string"
                },
                "columnLabel": {
                    "$reqId": "3.3.5.5.4.3.2.2.1.b",
                    "description": "Column label name for collected observation data",
                    "type": "string"
                },
                "collectionUnitType": {
                    "$reqId": "3.3.5.5.4.3.2.2.1.c",
                    "description": "Type of collection units used by the collector",
                    "type": "string"
                },
                "scaleFactor": {
                    "$reqId": "3.3.5.5.4.3.2.2.1.d",
                    "description": "Unit's multiplier or scale factor for adjusting decimal position of observations",
                    "type": "string"
                },
                "observationType": {
                    "$reqId": "3.3.5.5.4.3.2.2.2",
                    "description": "Provide the observation type being collected as part of the collector configuration information",
                    "type": "string"
                },
                "nullValue": {
                    "$reqId": "3.3.5.5.4.3.2.2.3",
                    "description": "Indicate the value for error or missing value in collector configuration information",
                    "type": "string"
                }
            },
            "required": [
                "headerIndex",
                "columnLabel",
                "collectionUnitType",
                "scaleFactor"
            ]
        },
        "DMSMessageCRC": {
            "type": "object",
            "properties": {
                "messageNumber": {
                    "type": "number"
                },
                "memoryType": {
                    "type": "string"
                }
            },
            "required": [
                "messageNumber",
                "memoryType"
            ]
        },
        "DataCollectorInformation": {
            "description": "Include requirements for data collector and image information in ESS metadata sent to external center",
            "type": "object",
            "$reqId": "3.3.5.5.4.3.8",
            "properties": {
                "dataCollectorDescription": {
                    "$reqId": "3.3.5.5.4.3.8.a",
                    "description": "Description of the provided image",
                    "type": "string"
                },
                "stationInstallationDate": {
                    "$reqId": "3.3.5.5.4.3.8.b",
                    "description": "URL for access to CCTV images associated with the sensor",
                    "type": "string"
                },
                "stationManufacturer": {
                    "$reqId": "3.3.5.5.4.3.8.c",
                    "description": "Name of the manufacturer",
                    "type": "string"
                },
                "productName": {
                    "$reqId": "3.3.5.5.4.3.8.d",
                    "description": "Name of the product",
                    "type": "string"
                },
                "collectorModelNumber": {
                    "$reqId": "3.3.5.5.4.3.8.e",
                    "description": "Model number or software version of the collector",
                    "type": "string"
                }
            }
        },
        "DateTime": {
            "type": "string",
            "format": "date-time",
            "$comment": "json-schema spec describes date-time format as: YYYY-MM-DDThh:mm:ssZ in UTC time. For example, 2025-03-31T11:00:00Z"
        },
        "DateTimeRange": {
            "type": "object",
            "properties": {
                "start": {
                    "$ref": "#/$defs/DateTime"
                },
                "end": {
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "start",
                "end"
            ]
        },
        "Detour": {
            "description": "Send detour type information as part of event description",
            "$reqId": "3.3.3.5.1.3.3.2",
            "type": "string",
            "enum": [
                "proposed alternate route",
                "confirmed alternate route",
                "required detour",
                "alternate route for destination",
                "alternate destination",
                "no recommended detour"
            ]
        },
        "Device": {
            "type": "object",
            "$reqId": "3.3.5.1.1.2",
            "properties": {
                "deviceId": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.1.b"
                },
                "geoLocation": {
                    "$reqId": "3.3.5.1.1.2.1.c",
                    "$ref": "#/$defs/GeoLocation"
                },
                "deviceName": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.1.d"
                },
                "userDeviceDescription": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.2.1"
                },
                "deviceControlType": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.2.2",
                    "enum": [
                        "status only",
                        "command only",
                        "status and command",
                        "not specified"
                    ]
                },
                "systemDescription": {
                    "$reqId": "3.3.5.1.1.2.2.3",
                    "$ref": "#/$defs/SystemDescription"
                },
                "roadwayNetworkId": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.2.4"
                },
                "nodeId": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.2.5"
                },
                "nodeName": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.2.6"
                },
                "linkId": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.2.7"
                },
                "linkName": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.2.8"
                },
                "linkDirection": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.2.9",
                    "enum": [
                        "northbound",
                        "northeast bound",
                        "eastbound",
                        "southeast bound",
                        "southbound",
                        "southwest bound",
                        "westbound",
                        "northwest bound",
                        "not directional",
                        "positive direction",
                        "negative direction",
                        "both directions",
                        "other"
                    ]
                },
                "linearReference": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.2.10"
                },
                "linearReferenceVersion": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.2.11"
                },
                "routeDesignator": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.2.12"
                },
                "deviceUrl": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.2.13"
                },
                "deviceUrlReferenceMedium": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.2.2.14"
                },
                "lastChangedInformation": {
                    "$reqId": "3.3.5.1.1.2.2.15",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "deviceId",
                "geoLocation",
                "deviceName"
            ]
        },
        "DeviceChangeCancellationRequest": {
            "description": "Requirements for device change cancellation request from external center to owner center",
            "type": "object",
            "$reqId": "3.3.5.1.2.4.2",
            "properties": {
                "requestHeader": {
                    "$reqId": "3.3.5.1.2.4.2.1.a",
                    "description": "Authorization information for external centers",
                    "$ref": "#/$defs/AuthHeader"
                },
                "requestingOrganizationId": {
                    "$reqId": "3.3.5.1.2.4.2.1.b",
                    "description": "Requesting organization information",
                    "type": "string"
                },
                "deviceType": {
                    "$reqId": "3.3.5.1.2.4.2.1.c",
                    "description": "Type of device, such as CCTV camera, dynamic message sign, gate, lane control signal, ramp meter, signal controller, or signal section.",
                    "$ref": "#/$defs/DeviceTypes"
                },
                "deviceId": {
                    "$reqId": "3.3.5.1.2.4.2.1.d",
                    "description": "Unique identifier for the device",
                    "type": "string"
                },
                "requestId": {
                    "$reqId": "3.3.5.1.2.4.2.1.e",
                    "description": "Unique sequence number identifying the control request to be canceled within the requesting center.",
                    "type": "string"
                },
                "operatorId": {
                    "$reqId": "3.3.5.1.2.4.2.2.1",
                    "description": "Requirements for the operator identifier making device change cancellation request",
                    "type": "string"
                }
            },
            "required": [
                "requestHeader",
                "requestingOrganizationId",
                "deviceType",
                "deviceId",
                "requestId"
            ]
        },
        "DeviceChangeRequestHeader": {
            "description": "Contents of device change requests from external centers to owner centers",
            "type": "object",
            "$reqId": "3.3.5.1.2.1",
            "properties": {
                "requestHeader": {
                    "$reqId": "3.3.5.1.2.1.1.a",
                    "description": "Authorization information for external centers",
                    "$ref": "#/$defs/AuthHeader"
                },
                "requestingOrganizationId": {
                    "$reqId": "3.3.5.1.2.1.1.b",
                    "description": "Requesting organization information",
                    "type": "string"
                },
                "deviceType": {
                    "$reqId": "3.3.5.1.2.1.1.c",
                    "description": "Type of device such as CCTV camera, dynamic message sign, gate, lane control signal, ramp meter, signal controller, or signal section.",
                    "$ref": "#/$defs/DeviceTypes"
                },
                "deviceId": {
                    "$reqId": "3.3.5.1.2.1.1.d",
                    "description": "Unique identifier for the device",
                    "type": "string"
                },
                "requestId": {
                    "$reqId": "3.3.5.1.2.1.1.e",
                    "description": "Unique sequence number identifying the control request",
                    "type": "string"
                },
                "requestPriority": {
                    "$reqId": "3.3.5.1.2.1.1.f",
                    "description": "Provide priority level for device change request where 1 = Lowest Priority, 10 = Highest Priority, Default = 0 (not queued).",
                    "$ref": "#/$defs/Rank"
                },
                "operatorId": {
                    "$reqId": "3.3.5.1.2.1.2.1",
                    "description": "Requirements for operator identifier in device change request",
                    "type": "string"
                },
                "eventId": {
                    "$reqId": "3.3.5.1.2.1.2.2",
                    "description": "Provide unique identifier of the event for device change request",
                    "type": "string"
                },
                "changeRequestStartDateTime": {
                    "$reqId": "3.3.5.1.2.1.2.4",
                    "description": "Provide the date and time for the device change request",
                    "$ref": "#/$defs/DateTime"
                },
                "changeRequestExpirationDateTime": {
                    "$reqId": "3.3.5.1.2.1.2.5",
                    "description": "Provide expiration date and time for the device change request",
                    "$ref": "#/$defs/DateTime"
                },
                "changeRequestDateTimeInformation": {
                    "$reqId": "3.3.5.1.2.1.2.6",
                    "description": "Provide the current date and time in the device change request",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "requestHeader",
                "requestingOrganizationId",
                "deviceType",
                "deviceId",
                "requestId",
                "requestPriority"
            ]
        },
        "DeviceChangeResponseHeader": {
            "description": "Requirements for owner center response to device change request from external center",
            "type": "object",
            "$reqId": "3.3.5.1.2.2",
            "properties": {
                "ownerOrganization": {
                    "$reqId": "3.3.5.1.2.2.1.a",
                    "description": "Information about the owner organization",
                    "$ref": "#/$defs/OrganizationInformation"
                },
                "deviceType": {
                    "$reqId": "3.3.5.1.2.2.1.b",
                    "description": "Type of device (e.g., CCTV camera, dynamic message sign, gate, lane control signal, ramp meter, signal controller, signal section)",
                    "$ref": "#/$defs/DeviceTypes"
                },
                "deviceId": {
                    "$reqId": "3.3.5.1.2.2.1.c",
                    "description": "Unique identifier for the device",
                    "type": "string"
                },
                "requestId": {
                    "$reqId": "3.3.5.1.2.2.1.d",
                    "description": "Unique sequence number identifying the control request",
                    "type": "string"
                },
                "requestStatus": {
                    "$reqId": "3.3.5.1.2.2.1.e",
                    "description": "Status of the request including completed, received, various rejection reasons, cancelled, or unknown.",
                    "type": "string",
                    "enum": [
                        "completed",
                        "received",
                        "rejected - insufficient privileges",
                        "rejected - device is locked",
                        "rejected - read-only parameter",
                        "rejected - bad value",
                        "rejected - other",
                        "cancelled",
                        "unknown"
                    ]
                },
                "operatorId": {
                    "$reqId": "3.3.5.1.2.2.2.1",
                    "description": "Requirements for operator identifier during device change request acknowledgment",
                    "type": "string"
                },
                "operatorLockId": {
                    "$reqId": "3.3.5.1.2.2.2.2",
                    "description": "Provide unique identifier of the owner operator who locked the device in the device change request response.",
                    "type": "string"
                },
                "operatorLastRevisedDeviceStatus": {
                    "$reqId": "3.3.5.1.2.2.2.3",
                    "description": "Provide the date and time of the last status revision in the device change request response",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "ownerOrganization",
                "deviceType",
                "deviceId",
                "requestId",
                "requestStatus"
            ]
        },
        "DeviceChangeStatusRequest": {
            "description": "Include device change status request details from external center to owner center",
            "type": "object",
            "$reqId": "3.3.5.1.2.3.2",
            "properties": {
                "requestHeader": {
                    "$reqId": "3.3.5.1.2.3.2.a",
                    "description": "Authorization information for external centers",
                    "$ref": "#/$defs/AuthHeader"
                },
                "requestingOrganizationId": {
                    "$reqId": "3.3.5.1.2.3.2.b",
                    "description": "Information about the requesting organization",
                    "type": "string"
                },
                "deviceType": {
                    "$reqId": "3.3.5.1.2.3.2.c",
                    "description": "Type of device including CCTV camera, dynamic message sign, gate, lane control signal, ramp meter, signal controller, and signal section.",
                    "$ref": "#/$defs/DeviceTypes"
                },
                "deviceId": {
                    "$reqId": "3.3.5.1.2.3.2.d",
                    "description": "Unique identifier for the device",
                    "type": "string"
                },
                "requestId": {
                    "$reqId": "3.3.5.1.2.3.2.e",
                    "description": "Unique sequence number for identifying the control request",
                    "type": "string"
                }
            },
            "required": [
                "requestHeader",
                "requestingOrganizationId",
                "deviceType",
                "deviceId",
                "requestId"
            ]
        },
        "DeviceControlCommandTypes": {
            "type": "string",
            "enum": [
                "preset",
                "jog positioning",
                "direction",
                "focus",
                "manual iris",
                "environmental on/off",
                "lock-for-the-camera",
                "pan",
                "tilt",
                "zoom",
                "text overlay"
            ]
        },
        "DeviceFilter": {
            "type": "object",
            "$reqId": "3.3.5.1.1.1.2",
            "properties": {
                "deviceIds": {
                    "$reqId": "3.3.5.1.1.1.2.1",
                    "description": "Include a list of unique identifiers for devices in the device information request",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roadwayNetworkIds": {
                    "$reqId": "3.3.5.1.1.1.2.2",
                    "description": "Include a list of unique identifiers for roadway networks in the device information request",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "linkIds": {
                    "$reqId": "3.3.5.1.1.1.2.3",
                    "description": "Include a list of unique identifiers for links in the device information request",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "routeDesignators": {
                    "$reqId": "3.3.5.1.1.1.2.4",
                    "description": "Include a list of route designators in the device information request",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "linearReferenceFilter": {
                    "$reqId": "3.3.5.1.1.1.2.5",
                    "description": "Include a range between two linear reference locations in the device information request",
                    "$ref": "#/$defs/LinearReferenceRange"
                },
                "sectionIds": {
                    "$reqId": "3.3.5.1.1.1.2.6",
                    "description": "Include a list of unique identifiers for sections in the device information request",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "centerIds": {
                    "$reqId": "3.3.5.1.1.1.2.7",
                    "description": "Include a list of unique identifiers for centers in the device information request",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timeRangeFilter": {
                    "$reqId": "3.3.5.1.1.1.2.8",
                    "description": "Include a valid time period in the device information request",
                    "$ref": "#/$defs/DateTimeRange"
                }
            }
        },
        "DeviceInformationRequest": {
            "description": "Requirements for the Device Information Request from an external center to an owner center.",
            "type": "object",
            "$reqId": "3.3.5.1.1.1",
            "properties": {
                "ownerOrganization": {
                    "$reqId": "3.3.5.1.1.1.1.a",
                    "description": "Information regarding the owner organization",
                    "$ref": "#/$defs/OrganizationInformation"
                },
                "deviceType": {
                    "$reqId": "3.3.5.1.1.1.1.b",
                    "description": "Identification of various device types such as detector, CCTV camera, dynamic message sign, environmental sensor station, gate, lane control signal, ramp meter, signal controller, and signal section.",
                    "$ref": "#/$defs/DeviceTypes"
                },
                "deviceInformationType": {
                    "$reqId": "3.3.5.1.1.1.1.c",
                    "description": "Types of device information including inventory, status, schedule, plan, maintenance history, data, metadata, message appearance, font table, and graphic table.",
                    "$ref": "#/$defs/DeviceInformationTypes"
                },
                "deviceFilter": {
                    "$reqId": "3.3.5.1.1.1.2",
                    "description": "Filter for device information requests",
                    "$ref": "#/$defs/DeviceFilter"
                },
                "requestHeader": {
                    "$reqId": "3.3.5.1.1.1.3.1",
                    "description": "Requirements for authorization information in device information requests",
                    "$ref": "#/$defs/AuthHeader"
                },
                "operatorId": {
                    "$reqId": "3.3.5.1.1.1.3.2",
                    "description": "Requirements for the operator identifier in device information requests",
                    "type": "string"
                }
            },
            "required": [
                "ownerOrganization",
                "deviceType",
                "deviceInformationType"
            ]
        },
        "DeviceInformationTypes": {
            "$reqId": "3.3.5.1.1.1.1.c",
            "description": "Types of device information including inventory, status, schedule, plan, maintenance history, data, metadata, message appearance, font table, and graphic table.",
            "type": "string",
            "enum": [
                "device inventory",
                "device status",
                "device schedule",
                "device plan",
                "device maintenance history",
                "device data",
                "device metadata",
                "message appearance",
                "device font table",
                "device graphic table",
                "image link"
            ]
        },
        "DeviceInventoryResponseHeader": {
            "description": "Requirements for owner center response header to external center request for device information",
            "type": "object",
            "$reqId": "3.3.5.1.1.2",
            "properties": {
                "ownerOrganization": {
                    "$reqId": "3.3.5.1.1.2.1.a",
                    "description": "Information regarding the owner organization",
                    "$ref": "#/$defs/OrganizationInformation"
                },
                "devices": {
                    "$reqId": "3.3.5.1.1.2.1.b",
                    "description": "Information for each device",
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/Device"
                    }
                }
            },
            "required": [
                "ownerOrganization",
                "devices"
            ]
        },
        "DeviceOperationalModes": {
            "description": "Requested operational mode for device (dark, restInGreen, fixedRate, trafficResponsive, emergencyGreen, holdMeter, holdnonMeter, holdRestInGreen).",
            "type": "string",
            "enum": [
                "dark",
                "restInGreen",
                "fixedRate",
                "trafficResponsive",
                "emergencyGreen",
                "holdMeter",
                "holdnonMeter",
                "holdRestInGreen"
            ]
        },
        "DevicePriorityQueueRequest": {
            "description": "Requirements for an external center's request to view the device request queue",
            "type": "object",
            "$reqId": "3.3.5.1.2.5.1",
            "properties": {
                "deviceType": {
                    "$reqId": "3.3.5.1.2.5.1.1.a",
                    "description": "Device type for each priority queue including CCTV camera, dynamic message sign, gate, ramp meter, signal controller, signal section",
                    "type": "string",
                    "enum": [
                        "cctv camera",
                        "dynamic message sign",
                        "gate",
                        "ramp meter",
                        "signal controller",
                        "signal section"
                    ]
                },
                "requestingOrganizationId": {
                    "$reqId": "3.3.5.1.2.5.1.1.b",
                    "description": "Unique identifier for the requesting organization",
                    "type": "string"
                },
                "deviceIds": {
                    "$reqId": "3.3.5.1.2.5.1.1.c",
                    "description": "Unique identifier for each device",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requestHeader": {
                    "$reqId": "3.3.5.1.2.5.1.2.1",
                    "description": "Requirements for authorization information in device priority queue request",
                    "$ref": "#/$defs/AuthHeader"
                }
            },
            "required": [
                "deviceType",
                "requestingOrganizationId",
                "deviceIds"
            ]
        },
        "DevicePriorityQueueResponse": {
            "type": "object",
            "$reqId": "3.3.5.1.2.5.2",
            "properties": {
                "deviceType": {
                    "type": "string",
                    "$reqId": "3.3.5.1.2.5.2.1.a",
                    "enum": [
                        "cctv camera",
                        "dynamic message sign",
                        "gate",
                        "ramp meter",
                        "signal controller",
                        "signal section"
                    ]
                },
                "deviceId": {
                    "type": "string"
                },
                "currentPriority": {
                    "type": "number"
                },
                "controlRequests": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "requestingOrganization": {
                                "type": "string"
                            },
                            "queueStatus": {
                                "type": "string",
                                "enum": [
                                    "command request priority",
                                    "no queue"
                                ]
                            },
                            "operatorId": {
                                "type": "string",
                                "$reqId": "3.3.5.1.2.5.2.2.1"
                            },
                            "uniqueSequenceNumber": {
                                "type": "number",
                                "$reqId": "3.3.5.1.2.5.2.2.2"
                            },
                            "eventId": {
                                "type": "string",
                                "$reqId": "3.3.5.1.2.5.2.2.3"
                            },
                            "eventResponsePlan": {
                                "type": "number",
                                "$reqId": "3.3.5.1.2.5.2.2.4"
                            },
                            "requestStartDateTime": {
                                "$reqId": "3.3.5.1.2.5.2.2.5",
                                "$ref": "#/$defs/DateTime"
                            },
                            "requestExpirationDateTime": {
                                "$reqId": "3.3.5.1.2.5.2.2.6",
                                "$ref": "#/$defs/DateTime"
                            }
                        },
                        "required": [
                            "requestingOrganization",
                            "queueStatus"
                        ]
                    }
                }
            },
            "required": [
                "deviceType",
                "deviceId",
                "currentPriority",
                "controlRequests"
            ]
        },
        "DeviceSchedule": {
            "type": "object",
            "properties": {
                "deviceId": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.4.1.b"
                },
                "timeBaseScheduleNumber": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.4.1.c"
                },
                "timeBaseScheduleMonth": {
                    "type": "number",
                    "$reqId": "3.3.5.1.1.4.1.d"
                },
                "timeBaseScheduleDayofWeek": {
                    "type": "number",
                    "$reqId": "3.3.5.1.1.4.1.e"
                },
                "timeBaseScheduleDate": {
                    "type": "number",
                    "$reqId": "3.3.5.1.1.4.1.f"
                },
                "timeBaseScheduleDayPlan": {
                    "type": "number",
                    "$reqId": "3.3.5.1.1.4.1.g"
                },
                "timeBaseScheduleDayPlanHour": {
                    "type": "number",
                    "$reqId": "3.3.5.1.1.4.1.h"
                },
                "timeBaseScheduleDayPlanMinute": {
                    "type": "number",
                    "$reqId": "3.3.5.1.1.4.1.i"
                },
                "dateandTimeLastChangeTimeBaseSchedule": {
                    "$reqId": "3.3.5.1.1.4.1.j",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "deviceId",
                "timeBaseScheduleNumber",
                "timeBaseScheduleMonth",
                "timeBaseScheduleDayofWeek",
                "timeBaseScheduleDate",
                "timeBaseScheduleDayPlan",
                "timeBaseScheduleDayPlanHour",
                "timeBaseScheduleDayPlanMinute",
                "dateandTimeLastChangeTimeBaseSchedule"
            ]
        },
        "DeviceScheduleInformation": {
            "description": "Include unique identifier of each device in the device schedule information",
            "type": "object",
            "$reqId": "3.3.5.1.1.4.1",
            "properties": {
                "ownerOrganization": {
                    "$reqId": "3.3.5.1.1.4.1.a",
                    "description": "Unique identifier for the owner organization",
                    "$ref": "#/$defs/OrganizationInformation"
                },
                "deviceSchedules": {
                    "$reqId": "3.3.5.1.1.4.1.b",
                    "description": "Unique identifier for each device",
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/DeviceSchedule"
                    }
                }
            },
            "required": [
                "ownerOrganization",
                "deviceSchedules"
            ]
        },
        "DeviceStatus": {
            "type": "object",
            "properties": {
                "deviceType": {
                    "$reqId": "3.3.5.1.1.3.1.b",
                    "$ref": "#/$defs/DeviceTypes"
                },
                "deviceId": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.3.1.c"
                },
                "operationalStatus": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.3.1.d",
                    "enum": [
                        "on",
                        "off",
                        "out-of-service",
                        "unavailable",
                        "unknown",
                        "marginal",
                        "failed"
                    ]
                },
                "controllingCenterId": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.3.2.1"
                },
                "deviceCommunicationsStatus": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.3.2.2",
                    "enum": [
                        "operational",
                        "offline",
                        "failed",
                        "unknown"
                    ]
                },
                "operatorId": {
                    "type": "string",
                    "$reqId": "3.3.5.1.1.3.2.3"
                },
                "deviceStatusLastChanged": {
                    "$reqId": "3.3.5.1.1.3.2.4",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "deviceType",
                "deviceId",
                "operationalStatus"
            ]
        },
        "DeviceStatusHeader": {
            "description": "Requirements for exchanging device status information between centers",
            "type": "object",
            "$reqId": "3.3.5.1.1.3",
            "properties": {
                "ownerOrganization": {
                    "$reqId": "3.3.5.1.1.3.1.a",
                    "description": "Information regarding the owner organization",
                    "$ref": "#/$defs/OrganizationInformation"
                },
                "deviceStatuses": {
                    "$reqId": "3.3.5.1.1.3.1.b",
                    "description": "Types of devices including detector, detector station, CCTV camera, dynamic message sign, environmental sensor station, gate, lane control signal, ramp meter, signal controller, and signal section.",
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/DeviceStatus"
                    }
                }
            },
            "required": [
                "ownerOrganization",
                "deviceStatuses"
            ]
        },
        "DeviceTypes": {
            "type": "string",
            "enum": [
                "detector",
                "detector station",
                "cctv camera",
                "dynamic message sign",
                "environmental sensor station",
                "gate",
                "lane control signal",
                "ramp meter",
                "signal controller",
                "signal section",
                "roadside unit"
            ]
        },
        "DialogNames": {
            "type": "string",
            "enum": [
                "request-response",
                "subscription",
                "publication"
            ]
        },
        "Directions": {
            "type": "string",
            "enum": [
                "northbound",
                "northeast bound",
                "eastbound",
                "southeast bound",
                "southbound",
                "southwest bound",
                "westbound",
                "northwest bound",
                "not directional",
                "positive direction",
                "negative direction",
                "both directions",
                "any other"
            ]
        },
        "ErrorIdentifiers": {
            "type": "string",
            "enum": [
                "Unknown processing error",
                "the receiving center does not support processing of the sending center’s message",
                "the message from the sending center is incomplete or information is missing that prevents the message from being processed",
                "message is not well formed or cannot be parsed",
                "message is not valid - out of range values",
                "authorization permission not granted for this request",
                "authorization not recognized",
                "message is valid but no valid data is available"
            ]
        },
        "ErrorReport": {
            "description": "Report errors in messages received from a sending center",
            "type": "object",
            "$reqId": "3.3.1.7.1",
            "properties": {
                "receivingOrganization": {
                    "$reqId": "3.3.1.7.1.1.a",
                    "description": "Information about the receiving organization",
                    "$ref": "#/$defs/OrganizationInformation"
                },
                "sendingOrganization": {
                    "$reqId": "3.3.1.7.1.1.b",
                    "description": "Information about the sending organization",
                    "$ref": "#/$defs/OrganizationInformation"
                },
                "uniqueErrorIdentifier": {
                    "$reqId": "3.3.1.7.1.1.c",
                    "description": "Unique error identifier for processing issues in message transmission",
                    "$ref": "#/$defs/ErrorIdentifiers"
                },
                "errorText": {
                    "$reqId": "3.3.1.7.1.1.d",
                    "description": "Description of the error text",
                    "type": "string"
                },
                "restrictions": {
                    "$reqId": "3.3.1.7.1.2.1",
                    "description": "Provide restrictions on dissemination of information in error report to external center",
                    "$ref": "#/$defs/Restrictions"
                }
            },
            "required": [
                "receivingOrganization",
                "sendingOrganization",
                "uniqueErrorIdentifier",
                "errorText"
            ]
        },
        "EvaluationCycle": {
            "type": "object",
            "$reqId": "3.3.3.8.5.3",
            "properties": {
                "evaluationCycleId": {
                    "$reqId": "3.3.3.8.5.3.1.a",
                    "description": "Unique identifier for the evaluation cycle",
                    "type": "string"
                },
                "evaluationCycleReason": {
                    "$reqId": "3.3.3.8.5.3.1.b",
                    "description": "Reason for the evaluation cycle",
                    "type": "string"
                },
                "startTime": {
                    "$reqId": "3.3.3.8.5.3.1.c",
                    "description": "Start time for the evaluation process",
                    "$ref": "#/$defs/DateTime"
                },
                "cycleDuration": {
                    "$reqId": "3.3.3.8.5.3.1.d",
                    "description": "Duration of the evaluation cycle",
                    "$ref": "#/$defs/DateTime"
                },
                "planCount": {
                    "$reqId": "3.3.3.8.5.3.1.e",
                    "description": "Count of ranked response plans",
                    "type": "number"
                },
                "submittedPlanCount": {
                    "$reqId": "3.3.3.8.5.3.1.f",
                    "description": "Count of submitted response plans",
                    "type": "number"
                },
                "eventId": {
                    "$reqId": "3.3.3.8.5.3.1.g",
                    "description": "Unique identifier for the event",
                    "type": "string"
                },
                "linkState": {
                    "$reqId": "3.3.3.8.5.3.2.1",
                    "description": "Include link state information in the evaluation cycle content sent from an owner center to an external center",
                    "$ref": "#/LinkStatusResponse"
                },
                "planList": {
                    "$reqId": "3.3.3.8.5.3.2.2",
                    "description": "Include a list of active response plans in the evaluation cycle content",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "evaluationCycleId",
                "evaluationCycleReason",
                "startTime",
                "cycleDuration",
                "planCount",
                "submittedPlanCount",
                "eventId"
            ]
        },
        "EventAccessLevels": {
            "description": "Include event access level information in event element details sent to an external center",
            "type": "string",
            "enum": [
                "public domain",
                "all agencies",
                "selected agencies",
                "originating agency",
                "originating users only"
            ]
        },
        "EventComments": {
            "description": "Include event comments information in the event information sent to an external center",
            "type": "object",
            "$reqId": "3.3.3.6.4",
            "properties": {
                "commentTimestamp": {
                    "$reqId": "3.3.3.6.4.1.a",
                    "description": "Timestamp for the comment",
                    "$ref": "#/$defs/DateTime"
                },
                "operatorId": {
                    "$reqId": "3.3.3.6.4.1.b",
                    "description": "Unique identifier for the operator",
                    "type": "string"
                },
                "commentText": {
                    "$reqId": "3.3.3.6.4.1.c",
                    "description": "Additional internal notes for roadway event description, not to be shared publicly",
                    "type": "string"
                }
            },
            "required": [
                "commentTimestamp",
                "operatorId",
                "commentText"
            ]
        },
        "EventDescription": {
            "description": "Include event description information in the event details sent from owner center to external center",
            "type": "array",
            "$reqId": "3.3.3.5.1.3.3",
            "items": {
                "type": "object",
                "properties": {
                    "eventPhrase": {
                        "$reqId": "3.3.3.5.1.3.3.a",
                        "description": "Information related to various traffic and environmental events, including conditions, incidents, closures, and weather.",
                        "type": "string",
                        "enum": [
                            "traffic conditions",
                            "accidents and incidents",
                            "closures",
                            "roadwork",
                            "obstruction",
                            "delaystatus cancellation",
                            "unusual driving",
                            "mobile situation",
                            "device status",
                            "restriction class",
                            "incidentresponse status",
                            "disasters",
                            "disturbances",
                            "sporting events",
                            "special events",
                            "parking information",
                            "system information",
                            "weather conditions",
                            "precipitation",
                            "winds",
                            "visibility and air quality",
                            "temperature",
                            "pavement conditions",
                            "winter driving restrictions",
                            "winter driving index"
                        ]
                    },
                    "eventCause": {
                        "$reqId": "3.3.3.5.1.3.3.b",
                        "description": "Information related to various event causes impacting traffic conditions",
                        "type": "string",
                        "enum": [
                            "traffic conditions",
                            "accidents and incidents",
                            "closures",
                            "roadwork",
                            "obstruction",
                            "delaystatus cancellation",
                            "unusual driving",
                            "mobile situation",
                            "device status",
                            "restriction class",
                            "incidentresponse status",
                            "disasters",
                            "disturbances",
                            "sporting events",
                            "special events",
                            "parking information",
                            "system information",
                            "weather conditions",
                            "precipitation",
                            "winds",
                            "visibility and air quality",
                            "temperature",
                            "pavement conditions",
                            "winter driving restrictions",
                            "winter driving index"
                        ]
                    },
                    "eventAdvice": {
                        "$reqId": "3.3.3.5.1.3.3.c",
                        "description": "Event advice including suggestions, warnings, recommendations, mandatory instructions, and alternate route guidance.",
                        "type": "string",
                        "enum": [
                            "suggestion",
                            "warning",
                            "instructions-recommendations",
                            "instructions-mandatory",
                            "alternate-route"
                        ]
                    },
                    "eventQualifer": {
                        "$reqId": "3.3.3.5.1.3.3.d",
                        "description": "Identifiers for various event qualifiers related to incidents, including location, lane, vehicle, traveler and responder groups, equipment, transit locations, and response status.",
                        "type": "string",
                        "enum": [
                            "qualifier-generic",
                            "location-generic",
                            "lane roadway",
                            "transit mode",
                            "vehicle groupaffected",
                            "traveler group affected",
                            "responder group affected",
                            "incident response equipment",
                            "transitlocations",
                            "incident response status"
                        ]
                    },
                    "eventQuantity": {
                        "$reqId": "3.3.3.5.1.3.3.e",
                        "description": "Specify the event quantity",
                        "$ref": "#/$defs/EventQuantity"
                    },
                    "eventLocation": {
                        "$reqId": "3.3.3.5.1.3.3.f",
                        "description": "Location of the event",
                        "$ref": "#/$defs/EventLocation"
                    },
                    "detour": {
                        "$reqId": "3.3.3.5.1.3.3.g",
                        "description": "Indicate a detour reference information",
                        "$ref": "#/$defs/Detour"
                    },
                    "additionalEventDescription": {
                        "$reqId": "3.3.3.5.1.3.3.h",
                        "description": "Additional text to complement the event description",
                        "type": "string"
                    },
                    "qualifierTime": {
                        "$reqId": "3.3.3.5.1.3.3.i",
                        "description": "Time qualifier for data or information",
                        "$ref": "#/$defs/DateTime"
                    }
                },
                "required": []
            }
        },
        "EventDescriptionConfidenceLevels": {
            "description": "Include event description confidence level information in event element details",
            "type": "string",
            "enum": [
                "unconfirmed report",
                "two unconfirmed reports",
                "three unconfirmed reports",
                "four or more unconfirmed reports",
                "provisional plan",
                "firm plan",
                "official report from scene",
                "detailed official report from scene",
                "detailed official reports covering whole area",
                "legally enforced decision"
            ]
        },
        "EventElementDetails": {
            "description": "Requirements for the contents of the event element details information sent to an external center, with multiple instances possible; optional if the message closes an open event.",
            "type": "object",
            "$reqId": "3.3.3.5.1.3",
            "properties": {
                "eventTime": {
                    "$reqId": "3.3.3.5.1.3.1",
                    "$ref": "#/$defs/EventTime"
                },
                "eventSource": {
                    "$reqId": "3.3.3.5.1.3.2",
                    "$ref": "#/$defs/EventSource"
                },
                "eventDescription": {
                    "$reqId": "3.3.3.5.1.3.3",
                    "$ref": "#/$defs/EventDescription"
                },
                "eventLocation": {
                    "$reqId": "3.3.3.5.1.3.4",
                    "$ref": "#/$defs/EventLocation"
                },
                "eventName": {
                    "$reqId": "3.3.3.5.1.3.5",
                    "description": "Provide short description of the event",
                    "type": "string"
                },
                "eventLane": {
                    "$reqId": "3.3.3.5.1.3.6",
                    "description": "Provide lane number for the event",
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/EventLane"
                    }
                },
                "eventDescriptionConfidenceLevel": {
                    "$reqId": "3.3.3.5.1.3.7",
                    "$ref": "#/$defs/EventDescriptionConfidenceLevels"
                },
                "eventAccessLevel": {
                    "$reqId": "3.3.3.5.1.3.8",
                    "$ref": "#/$defs/EventAccessLevels"
                },
                "eventHazardousMaterialCode": {
                    "$reqId": "3.3.3.5.1.3.9",
                    "$ref": "#/$defs/EventHazardousMaterialCode"
                }
            }
        },
        "EventHazardousMaterialCode": {
            "description": "Send hazardous material information as part of event details if applicable",
            "type": "object",
            "$reqId": "3.3.3.5.1.3.9",
            "properties": {
                "eventHazmatCode": {
                    "$reqId": "3.3.3.5.1.3.9.1",
                    "description": "Provide identification of observed hazardous material using CFR Title 49 codes for accidents and incidents",
                    "type": "string"
                },
                "eventHazmatPlacardCode": {
                    "$reqId": "3.3.3.5.1.3.9.2",
                    "description": "Provide identification of observed hazardous material using placard codes for accidents and incidents.",
                    "type": "string"
                }
            }
        },
        "EventIndicator": {
            "description": "Include event indicator information in the event information sent to an external center",
            "type": "object",
            "$reqId": "3.3.3.6.2",
            "properties": {
                "eventStatus": {
                    "$reqId": "3.3.3.6.2.1",
                    "description": "Provide incident status as part of the event indicator information with supported values.",
                    "type": "string",
                    "enum": [
                        "planned",
                        "forecast",
                        "contingency plan",
                        "response plan activated",
                        "reported",
                        "confirmed",
                        "closed",
                        "responding",
                        "current",
                        "updated",
                        "clearing",
                        "ended",
                        "delete",
                        "cancelled",
                        "postponed",
                        "reopened"
                    ]
                },
                "eventDurationExceededFlag": {
                    "$reqId": "3.3.3.6.2.2",
                    "description": "Indicate when event duration or expected end date/time is exceeded as part of event indicator information",
                    "type": "string"
                },
                "eventImpactLevel": {
                    "$reqId": "3.3.3.6.2.3",
                    "description": "Provide the impact of an event on the roadway as part of the event indicator information, using a scale from 1 to 10.",
                    "$ref": "#/$defs/Rank"
                },
                "eventActiveFlag": {
                    "$reqId": "3.3.3.6.2.4",
                    "description": "Indicate if the event represents an active schedule in the event indicator information",
                    "type": "string"
                },
                "eventClass": {
                    "$reqId": "3.3.3.6.2.5",
                    "description": "Provide event class as part of event indicator information for planned events",
                    "type": "string",
                    "enum": [
                        "incident",
                        "construction",
                        "special event"
                    ]
                }
            }
        },
        "EventLane": {
            "description": "Include event lane information in event details sent from owner center to external center",
            "type": "object",
            "properties": {
                "eventLaneInformation": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "laneType": {
                    "$reqId": "3.3.3.5.1.3.6.1.1",
                    "description": "Provide the type of lane as part of the event lane information",
                    "type": "string",
                    "enum": [
                        "accelerationLane",
                        "auxiliaryLane",
                        "bikeLane",
                        "busLane",
                        "busOnlyLane",
                        "busOnShoulderLane",
                        "collectorDistributorLane",
                        "contraflowLane",
                        "decelerationLane",
                        "dynamicPartTimeShoulderUse",
                        "expressTollLane",
                        "frontageServiceRoadLane",
                        "highOccupancyVehicleLane",
                        "leftTurnLane",
                        "managedLane",
                        "medianLane",
                        "nonTollExpressLane",
                        "parkingLane",
                        "ramp",
                        "reversibleLane",
                        "rightTurnLane",
                        "seperatedBikeway",
                        "shoulder",
                        "speedChangeLane",
                        "staticPartTimeShoulderUse",
                        "throughMainline",
                        "truckOnlyLane",
                        "twoWayLeftTurnLane",
                        "uTurnLane",
                        "expresswayLane",
                        "scenicRouteLane",
                        "alternateLane",
                        "bypassLane",
                        "connectorLane",
                        "businessLane",
                        "spurLane",
                        "loopLane"
                    ]
                },
                "directionTravel": {
                    "$reqId": "3.3.3.5.1.3.6.1.2",
                    "description": "Provide direction of travel on the link as part of event lane information",
                    "$ref": "#/$defs/Directions"
                },
                "totalNumberLanes": {
                    "$reqId": "3.3.3.5.1.3.6.1.3",
                    "description": "Provide total number of lanes at the event location as part of event lane information",
                    "type": "number"
                },
                "lanesAffected": {
                    "$reqId": "3.3.3.5.1.3.6.1.4",
                    "description": "Provide the total number of lanes affected by the event as part of the event lane information.",
                    "type": "number"
                },
                "laneNumberAffected": {
                    "$reqId": "3.3.3.5.1.3.6.1.5",
                    "description": "Provide lane number for each lane affected by the event in event lane information",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "laneStatus": {
                    "$reqId": "3.3.3.5.1.3.6.1.6",
                    "description": "Describe the status of the lane affected by the event in event lane information",
                    "type": "string"
                }
            },
            "required": [
                "eventLaneInformation"
            ]
        },
        "EventLocation": {
            "description": "Include event location information in event element details; multiple instances may be sent.",
            "type": "array",
            "$reqId": "3.3.3.5.1.3.4",
            "items": {
                "type": "object",
                "properties": {
                    "areaLocation": {
                        "$reqId": "3.3.3.5.1.3.4.a",
                        "description": "Geographical area identification",
                        "$ref": "#/$defs/AreaLocation"
                    },
                    "linkLocation": {
                        "$reqId": "3.3.3.5.1.3.4.b",
                        "description": "Location of the link",
                        "$ref": "#/$defs/LinkLocation"
                    },
                    "landmarkLocation": {
                        "$reqId": "3.3.3.5.1.3.4.c",
                        "description": "Location of a landmark",
                        "$ref": "#/$defs/LandmarkLocationInformation"
                    },
                    "geoLocation": {
                        "$reqId": "3.3.3.5.1.3.4.d",
                        "description": "Coordinates of the geographic location (longitude and latitude)",
                        "$ref": "#/$defs/GeoLocation"
                    }
                }
            }
        },
        "EventMessageHeader": {
            "description": "Requirements for event message header information from owner center to external center.",
            "type": "object",
            "$reqId": "3.3.3.5.1.1",
            "properties": {
                "organization": {
                    "$reqId": "3.3.3.5.1.1.1.a",
                    "description": "Organization information of the event originator",
                    "$ref": "#/$defs/OrganizationInformation"
                },
                "eventMsgTypeVersion": {
                    "$reqId": "3.3.3.5.1.1.1.b",
                    "description": "Version of the event message type",
                    "type": "number"
                },
                "eventMsgNum": {
                    "$reqId": "3.3.3.5.1.1.1.c",
                    "description": "Unique identifier for the event message",
                    "type": "number"
                },
                "messageSentAt": {
                    "$reqId": "3.3.3.5.1.1.1.d",
                    "description": "Date and time the message was sent",
                    "$ref": "#/$defs/DateTime"
                },
                "requestingOrganization": {
                    "$reqId": "3.3.3.5.1.1.2.1",
                    "description": "Provide organization information in the event message header",
                    "$ref": "#/$defs/OrganizationInformation"
                },
                "msgExpiryTime": {
                    "$reqId": "3.3.3.5.1.1.2.2",
                    "description": "Provide the date and time for message invalidation in the event message header",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "organization",
                "eventMsgTypeVersion",
                "eventMsgNum",
                "messageSentAt"
            ]
        },
        "EventQuantity": {
            "description": "Describe event quantity information sent from owner center to external center",
            "type": "object",
            "$reqId": "3.3.3.5.1.3.3.1",
            "properties": {
                "extent": {
                    "$reqId": "3.3.3.5.1.3.3.1.a",
                    "description": "Specify extent affecting length, proportion, and altitude",
                    "type": "string",
                    "enum": [
                        "length affected",
                        "proportion affected",
                        "above altitude",
                        "below altitude"
                    ]
                },
                "linkState": {
                    "$reqId": "3.3.3.5.1.3.3.1.b",
                    "description": "Link state attributes including delay, peak-delay, alternate route delay, detour-peak-delay, headway, travel time, existing capacity, travel time increase, average speed, estimated vehicle speed, description time, density, occupancy, and volume.",
                    "type": "string",
                    "enum": [
                        "delay",
                        "peak-delay",
                        "alternate route delay",
                        "detour-peak-delay",
                        "headway",
                        "travel time",
                        "existing capacity",
                        "travel time increase",
                        "average speed",
                        "estimated vehicle speed",
                        "description time",
                        "density",
                        "occupancy",
                        "volume"
                    ]
                },
                "linkLaneState": {
                    "$reqId": "3.3.3.5.1.3.3.1.c",
                    "description": "States of Link Lane (open, closed, shift-left, shift-right, merge-left, merge-right, alternating-flow)",
                    "type": "string",
                    "enum": [
                        "open",
                        "closed",
                        "shift-left",
                        "shift-right",
                        "merge-left",
                        "merge-right",
                        "alternating-flow"
                    ]
                },
                "incidentDetails": {
                    "$reqId": "3.3.3.5.1.3.3.1.d",
                    "description": "Details of incident including count of vehicles, cars, trucks, buses, human fatalities, injuries, major injuries, and minor injuries.",
                    "type": "string",
                    "enum": [
                        "vehicles involved count",
                        "cars involved count",
                        "trucks involved count",
                        "buses involved count",
                        "human fatalities count",
                        "human injuries count",
                        "human major injuries count",
                        "human minor injuries count"
                    ]
                },
                "roadWeather": {
                    "$reqId": "3.3.3.5.1.3.3.1.e",
                    "description": "Information on road weather conditions including wind direction, wind speed, air temperature, dew point temperature, humidity, atmospheric pressure, precipitation rates, snowfall accumulation, visibility, and UV index.",
                    "type": "string",
                    "enum": [
                        "average wind direction",
                        "average wind speed",
                        "average gust wind speed",
                        "air temperature",
                        "dew point temperature",
                        "maximum temperature",
                        "minimum temperature",
                        "relative humidity",
                        "atmospheric pressure",
                        "precipitation rate",
                        "snowfall accumulation rate",
                        "visibility",
                        "uv-index",
                        "probability"
                    ]
                },
                "surfaceConditions": {
                    "$reqId": "3.3.3.5.1.3.3.1.f",
                    "description": "Conditions of the surface including water depth, snow depth, ice thickness, temperature, salinity, and friction.",
                    "type": "string",
                    "enum": [
                        "water depth",
                        "adjacent snow depth",
                        "roadway snow depth",
                        "roadway snow pack depth",
                        "ice thickness",
                        "surface temperature",
                        "pavement temperature",
                        "surface water depth",
                        "surface salinity",
                        "surface freeze point",
                        "mobile friction"
                    ]
                },
                "linkRestrictions": {
                    "$reqId": "3.3.3.5.1.3.3.1.g",
                    "description": "Regulations related to various vehicle limitations including speed and size restrictions",
                    "type": "string",
                    "enum": [
                        "advisory speed limit",
                        "speed limit",
                        "truck speed limit",
                        "vehicle length restriction",
                        "vehicle height restriction",
                        "vehicle width restriction",
                        "vehicle weight restriction",
                        "vehicle axle weight restriction",
                        "vehicle axle count restriction"
                    ]
                }
            }
        },
        "EventReference": {
            "description": "Requirements for contents of event reference information sent to an external center",
            "type": "object",
            "$reqId": "3.3.3.5.1.2",
            "properties": {
                "eventId": {
                    "$reqId": "3.3.3.5.1.2.1.a",
                    "description": "Unique identifier for the event",
                    "type": "string"
                },
                "eventUpdateNumber": {
                    "$reqId": "3.3.3.5.1.2.1.b",
                    "description": "Unique identifier for event updates",
                    "type": "number"
                },
                "msgUpdatedAt": {
                    "$reqId": "3.3.3.5.1.2.1.c",
                    "description": "Date and time of message update",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "eventId",
                "eventUpdateNumber",
                "msgUpdatedAt"
            ]
        },
        "EventSource": {
            "description": "Include event source information in the elements details sent to an external center.",
            "type": "object",
            "$reqId": "3.3.3.5.1.3.2",
            "properties": {
                "organization": {
                    "$reqId": "3.3.3.5.1.3.2.1",
                    "description": "Provide information on the organization that is the source of the event information as part of the event source information.",
                    "$ref": "#/$defs/OrganizationInformation"
                },
                "eventDetectionMethod": {
                    "$reqId": "3.3.3.5.1.3.2.2",
                    "description": "Indicate how the event was detected as part of the event source information",
                    "type": "string"
                }
            }
        },
        "EventTime": {
            "description": "Include event time information in the event details sent from owner center to external center",
            "type": "object",
            "$reqId": "3.3.3.5.1.3.1",
            "properties": {
                "eventUpdatedDateTime": {
                    "$reqId": "3.3.3.5.1.3.1.1",
                    "description": "Include the date and time the event was updated in the event time information",
                    "$ref": "#/$defs/DateTime"
                },
                "eventValidPeriod": {
                    "$ref": "#/$defs/EventValidPeriod"
                },
                "effectivePeriodQualifer": {
                    "$reqId": "3.3.3.5.1.3.1.2.2",
                    "description": "Indicate effective period qualifiers as part of the effective period information",
                    "type": "string",
                    "enum": [
                        "not-specified",
                        "morning",
                        "afternoon",
                        "evening",
                        "night",
                        "daytime",
                        "off peak periods",
                        "at peak periods",
                        "until further notice",
                        "morning peak",
                        "afternoon peak",
                        "midday periods"
                    ]
                },
                "eventNotInEffectDays": {
                    "$reqId": "3.3.3.5.1.3.1.2.3",
                    "description": "Provide each day of the month a holiday falls on when the event is not in effect as part of effective period information.",
                    "type": "string"
                },
                "plannedEventScheduleElementId": {
                    "$reqId": "3.3.3.5.1.3.1.2.4",
                    "description": "Provide event schedule element identifier for planned event category type",
                    "type": "string"
                },
                "sequenceDateTime": {
                    "$reqId": "3.3.3.5.1.3.1.2.5",
                    "description": "Provide date and time for each element in the event sequence as part of the event time information.",
                    "$ref": "#/$defs/DateTime"
                },
                "eventStartDateTime": {
                    "$reqId": "3.3.3.5.1.3.1.2.6",
                    "description": "Provide the date and time the event started for current event categories as part of event time information.",
                    "$ref": "#/$defs/DateTime"
                },
                "expectedStartDateTime": {
                    "$reqId": "3.3.3.5.1.3.1.2.7",
                    "description": "Provide expected start date and time for planned event",
                    "$ref": "#/$defs/DateTime"
                },
                "expectedEndDateTime": {
                    "$reqId": "3.3.3.5.1.3.1.2.8",
                    "description": "Provide the expected end date and time for planned events as part of the event time information.",
                    "$ref": "#/$defs/DateTime"
                },
                "recurrentTimesEventEffect": {
                    "$reqId": "3.3.3.5.1.3.1.2.9",
                    "description": "Provide recurrent times for events as part of effective period information",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "plannedEventContinuousFlag": {
                    "$reqId": "3.3.3.5.1.3.1.2.10",
                    "description": "Indicate if the schedule is continuous for planned events between expected start and end date/time",
                    "type": "boolean"
                },
                "roadwayClearanceTime": {
                    "$reqId": "3.3.3.5.1.3.1.2.11",
                    "description": "Provide the date and time the event ended for current event categories",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "eventUpdatedDateTime"
            ]
        },
        "EventValidPeriod": {
            "description": "Include event valid period information in requests from owner center to external center",
            "type": "object",
            "$reqId": "3.3.3.5.1.3.1.2.1",
            "properties": {
                "expectedEndTime": {
                    "$reqId": "3.3.3.5.1.3.1.2.1.a",
                    "description": "Expected end date and time of the event",
                    "$ref": "#/$defs/DateTime"
                },
                "eventRemainingDuration": {
                    "$reqId": "3.3.3.5.1.3.1.2.1.b",
                    "description": "Estimated remaining duration of event (minutes) for category 'current', measured from the last update time",
                    "type": "string"
                },
                "effectivePeriod": {
                    "$reqId": "3.3.3.5.1.3.1.2.1.c",
                    "description": "Effective periods indicating valid days of the week for the event.",
                    "type": "number"
                }
            }
        },
        "ExternalDeviceControlCommandResponse": {
            "description": "Include device type and unique identifier in device control command response",
            "type": "object",
            "$reqId": "3.3.5.1.3.3",
            "properties": {
                "organization": {
                    "$reqId": "3.3.5.1.3.3.a",
                    "description": "Information regarding the owner organization",
                    "$ref": "#/$defs/OrganizationInformation"
                },
                "deviceType": {
                    "$reqId": "3.3.5.1.3.3.b",
                    "description": "Type of device (e.g., CCTV camera, dynamic message sign, gate, lane control signal, ramp meter, signal controller)",
                    "type": "string",
                    "enum": [
                        "cctv camera",
                        "dynamic message sign",
                        "gate",
                        "lane control signal",
                        "ramp meter",
                        "signal controller"
                    ]
                },
                "deviceId": {
                    "$reqId": "3.3.5.1.3.3.c",
                    "description": "Unique identifier for the device",
                    "type": "string"
                },
                "requestId": {
                    "$reqId": "3.3.5.1.3.3.d",
                    "description": "Unique sequence number identifying the control request from the requesting center",
                    "type": "string"
                },
                "commandStatus": {
                    "$reqId": "3.3.5.1.3.3.e",
                    "description": "Status of the command indicating completion, progress, or various rejection reasons",
                    "type": "string",
                    "enum": [
                        "completed",
                        "in progress",
                        "rejected - insufficient privileges",
                        "rejected - device is locked",
                        "rejected - read-only parameter",
                        "rejected - bad value",
                        "rejected - other",
                        "unknown"
                    ]
                }
            },
            "required": [
                "organization",
                "deviceType",
                "deviceId",
                "requestId",
                "commandStatus"
            ]
        },
        "ExternalDeviceControlRequest": {
            "description": "Include remote device control command details in external center communication",
            "type": "object",
            "$reqId": "3.3.5.1.3.2.1",
            "properties": {
                "authorizationHeader": {
                    "$reqId": "3.3.5.1.3.2.1.a",
                    "description": "Information regarding authorization for external centers",
                    "$ref": "#/$defs/AuthHeader"
                },
                "organization": {
                    "$reqId": "3.3.5.1.3.2.1.b",
                    "description": "Requesting organization information",
                    "$ref": "#/$defs/OrganizationInformation"
                },
                "deviceType": {
                    "$reqId": "3.3.5.1.3.2.1.c",
                    "description": "Type of device (e.g., CCTV camera, dynamic message sign, gate, lane control signal, ramp meter, signal controller)",
                    "type": "string",
                    "enum": [
                        "cctv camera",
                        "dynamic message sign",
                        "gate",
                        "lane control signal",
                        "ramp meter",
                        "signal controller"
                    ]
                },
                "deviceId": {
                    "$reqId": "3.3.5.1.3.2.1.d",
                    "description": "Unique identifier for the device",
                    "type": "string"
                },
                "requestId": {
                    "$reqId": "3.3.5.1.3.2.1.e",
                    "description": "Unique sequence number identifying the control request",
                    "type": "string"
                },
                "operatorId": {
                    "$reqId": "3.3.5.1.3.2.2.1",
                    "description": "Requirements for the operator identifier in remote device command requests",
                    "type": "string"
                }
            },
            "required": [
                "authorizationHeader",
                "organization",
                "deviceType",
                "deviceId",
                "requestId"
            ]
        },
        "GeoLocation": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            },
            "required": [
                "latitude",
                "longitude"
            ]
        },
        "ImageInformation": {
            "type": "object",
            "$reqId": "3.3.5.5.4.3.9",
            "properties": {
                "imageDescription": {
                    "$reqId": "3.3.5.5.4.3.9.a",
                    "type": "string"
                },
                "imageURL": {
                    "$reqId": "3.3.5.5.4.3.9.b",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "imageDescription",
                "imageURL"
            ]
        },
        "IntersectionSignalSequenceData": {
            "type": "object",
            "properties": {
                "ringId": {
                    "type": "string"
                },
                "sequenceData": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            },
            "required": [
                "ringId",
                "sequenceData"
            ]
        },
        "IntersectionSignalTPInventoryPhase": {
            "type": "object",
            "properties": {
                "phaseId": {
                    "type": "number"
                },
                "coordinatedPhase": {
                    "type": "number"
                },
                "splitMode": {
                    "type": "string",
                    "enum": [
                        "other",
                        "none",
                        "minimumVehicleRecall",
                        "maximumVehicleRecall",
                        "pedestrianRecall",
                        "maximumVehicleAndPedestrianRecall",
                        "phaseOmitted"
                    ]
                },
                "phaseSplit": {
                    "type": "number"
                },
                "maximumGreenDuration": {
                    "type": "number"
                },
                "minimumGreenDuration": {
                    "type": "number"
                },
                "vehicleClearanceDuration": {
                    "type": "number"
                },
                "vehicleRedDuration": {
                    "type": "number"
                },
                "minimumWalkDuration": {
                    "type": "number"
                },
                "pedestrianClearanceDuration": {
                    "type": "number"
                },
                "steadyDontWalkDuration": {
                    "type": "number"
                }
            },
            "required": [
                "phaseId",
                "coordinatedPhase",
                "splitMode",
                "phaseSplit"
            ]
        },
        "LandmarkLocationInformation": {
            "description": "Include landmark location information in the event location description sent from owner center to external center.",
            "type": "object",
            "$reqId": "3.3.3.5.1.3.4.6",
            "properties": {
                "landmarkType": {
                    "$reqId": "3.3.3.5.1.3.4.6.a",
                    "description": "Type of location for a landmark",
                    "type": "string"
                },
                "landmarkName": {
                    "$reqId": "3.3.3.5.1.3.4.6.b",
                    "description": "Name of the landmark",
                    "type": "string"
                },
                "landmarkPointName": {
                    "$reqId": "3.3.3.5.1.3.4.7.1",
                    "description": "Provide the name of a point within a landmark as part of event location information",
                    "type": "string"
                },
                "landmarkLocationRank": {
                    "$reqId": "3.3.3.5.1.3.4.7.2",
                    "description": "Provide the location rank of the landmark in event location information as assigned by the owner organization.",
                    "type": "number"
                },
                "landmarkLocation": {
                    "$reqId": "3.3.3.5.1.3.4.7.3",
                    "description": "Provide geographic location (longitude, latitude) of the landmark as part of event location information.",
                    "$ref": "#/$defs/GeoLocation"
                },
                "secondaryLandmarkLocation": {
                    "$reqId": "3.3.3.5.1.3.4.7.4",
                    "description": "Provide secondary landmark location as part of event location information",
                    "$ref": "#/$defs/GeoLocation"
                }
            },
            "required": [
                "landmarkType",
                "landmarkName"
            ]
        },
        "LevelServices": {
            "type": "string",
            "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
            ]
        },
        "LinearReference": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "number"
                },
                "location": {
                    "type": "object",
                    "$ref": "#/$defs/GeoLocation"
                }
            },
            "required": [
                "name",
                "version",
                "location"
            ]
        },
        "LinearReferenceRange": {
            "type": "object",
            "properties": {
                "start": {
                    "$ref": "#/$defs/LinearReference"
                },
                "end": {
                    "$ref": "#/$defs/LinearReference"
                }
            },
            "required": [
                "start",
                "end"
            ]
        },
        "Link": {
            "type": "object",
            "properties": {
                "linkId": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.1.c"
                },
                "linkType": {
                    "$reqId": "3.3.4.3.1.5.1.d",
                    "$ref": "#/$defs/LinkTypes"
                },
                "beginningNode": {
                    "$reqId": "3.3.4.3.1.5.1.e",
                    "$ref": "#/$defs/Node"
                },
                "endingNode": {
                    "$reqId": "3.3.4.3.1.5.1.g",
                    "$ref": "#/$defs/Node"
                },
                "roadwayNetworkName": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.2.2"
                },
                "linkName": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.2.3"
                },
                "alternateNames": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.2.4"
                },
                "routeDesignator": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.2.5"
                },
                "secondaryRouteDesignator": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.2.6"
                },
                "linearReference": {
                    "$reqId": "3.3.4.3.1.5.2.7",
                    "$ref": "#/$defs/LinearReference"
                },
                "linkLength": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.2.8"
                },
                "linkCapacity": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.2.9"
                },
                "linkLaneInformation": {
                    "type": "array",
                    "$reqId": "3.3.4.3.1.5.2.10",
                    "items": {
                        "$ref": "#/$defs/LinkLane"
                    }
                },
                "linkSpeedLimit": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.2.11"
                },
                "linkTruckSpeedLimit": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.2.12"
                },
                "speedLimitUnits": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.2.13"
                },
                "linkLawEnforcementJurisdiction": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.2.14"
                },
                "designatedOwner": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.2.15"
                },
                "leftShoulderWidth": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.2.16"
                },
                "rightShoulderWidth": {
                    "type": "string",
                    "$reqId": "3.3.4.3.1.5.2.17"
                },
                "medianType": {
                    "$reqId": "3.3.4.3.1.5.2.18",
                    "$ref": "#/$defs/MedianTypes"
                },
                "dateTimeChangeInformation": {
                    "$reqId": "3.3.4.3.1.5.2.19",
                    "$ref": "#/$defs/DateTime"
                },
                "nextLink": {
                    "$reqId": "3.3.4.3.1.5.2.20",
                    "$ref": "#/$defs/Link"
                },
                "previousLink": {
                    "$reqId": "3.3.4.3.1.5.2.21",
                    "$ref": "#/$defs/Link"
                }
            },
            "required": [
                "linkId",
                "linkType",
                "beginningNode",
                "endingNode"
            ]
        },
        "LinkLane": {
            "type": "object",
            "properties": {
                "laneId": {
                    "type": "integer"
                },
                "laneOrder": {
                    "type": "integer"
                },
                "laneType": {
                    "type": "string"
                }
            },
            "required": [
                "laneId",
                "laneOrder",
                "laneType"
            ]
        },
        "LinkLocation": {
            "description": "Include a primary Point on a Link Location in event location information",
            "type": "object",
            "$reqId": "3.3.3.5.1.3.4.2",
            "properties": {
                "pointOnALinkLocation": {
                    "$reqId": "3.3.3.5.1.3.4.2.1",
                    "$ref": "#/$defs/PointOnALinkLocation"
                },
                "linkOwnership": {
                    "$reqId": "3.3.3.5.1.3.4.3.1",
                    "description": "Indicate the name of the organization that owns the link in event location information.",
                    "type": "string"
                },
                "routeDesignator": {
                    "$reqId": "3.3.3.5.1.3.4.3.2",
                    "description": "Provide route designator information as part of event location information.",
                    "type": "string"
                },
                "secondRouteDesignator": {
                    "$reqId": "3.3.3.5.1.3.4.3.3",
                    "description": "Provide second route designator information as part of event location information",
                    "type": "string"
                },
                "linkIdentifier": {
                    "$reqId": "3.3.3.5.1.3.4.3.4",
                    "description": "Provide the unique identifier of the link in the event location information.",
                    "type": "string"
                },
                "linkName": {
                    "$reqId": "3.3.3.5.1.3.4.3.5",
                    "description": "Provide the name of the link assigned by the owner organization in the event location information.",
                    "type": "string"
                },
                "linkLane": {
                    "$reqId": "3.3.3.5.1.3.4.3.6",
                    "description": "Provide the lane number where the event occurred as part of the event location information.",
                    "type": "number"
                },
                "secondaryPoint": {
                    "$reqId": "3.3.3.5.1.3.4.3.7",
                    "description": "Provide secondary point on a link location information as part of the event location information",
                    "$ref": "#/$defs/PointOnALinkLocation"
                },
                "linkDirection": {
                    "$reqId": "3.3.3.5.1.3.4.3.8",
                    "description": "Provide direction of travel on the link as part of event location information",
                    "$ref": "#/$defs/Directions"
                },
                "linkAlignment": {
                    "$reqId": "3.3.3.5.1.3.4.3.9",
                    "description": "Provide link alignment information as part of event location information with supported values including northbound, eastbound, southbound, westbound, inner loop, and outer loop.",
                    "type": "string",
                    "enum": [
                        "northbound",
                        "eastbound",
                        "southbound",
                        "westbound",
                        "inner loop",
                        "outer loop"
                    ]
                },
                "linearReferenceVersionEvents": {
                    "$reqId": "3.3.3.5.1.3.4.3.10",
                    "description": "Provide linear reference version information as part of event location information",
                    "type": "string"
                },
                "alternateLinkLocation": {
                    "$reqId": "3.3.3.5.1.3.4.3.11",
                    "description": "Provide alternate link location information as part of the event location information",
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/LinkLocation"
                    }
                }
            },
            "required": [
                "pointOnALinkLocation"
            ]
        },
        "LinkStatus": {
            "type": "object",
            "$reqId": "3.3.4.3.2.5",
            "properties": {
                "linkId": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.1.c"
                },
                "linkState": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.1.d",
                    "enum": [
                        "no determination",
                        "open",
                        "restricted",
                        "closed"
                    ]
                },
                "linkName": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.2.2"
                },
                "linkDirection": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.2.3",
                    "enum": [
                        "northbound",
                        "northeast bound",
                        "eastbound",
                        "southeast bound",
                        "southbound",
                        "southwest bound",
                        "westbound",
                        "northwest bound",
                        "not directional",
                        "positive direction",
                        "negative direction",
                        "both directions",
                        "any other"
                    ]
                },
                "lanesOpen": {
                    "type": "number",
                    "$reqId": "3.3.4.3.2.5.2.4"
                },
                "linkPriority": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.2.5",
                    "enum": [
                        "special events",
                        "snow ice clearance",
                        "weather evacuation",
                        "defense movements",
                        "hazmat",
                        "agricultural access",
                        "none"
                    ]
                },
                "linkRestrictionsAxles": {
                    "type": "number",
                    "$reqId": "3.3.4.3.2.5.2.6"
                },
                "linkRestrictionsHeight": {
                    "type": "number",
                    "description": "The units for the vehicle height restrictions are in centimeters.",
                    "$reqId": "3.3.4.3.2.5.2.7"
                },
                "linkRestrictionsLength": {
                    "type": "number",
                    "description": "The units for the vehicle length restrictions are in centimeters.",
                    "$reqId": "3.3.4.3.2.5.2.8"
                },
                "linkRestrictionsWeight": {
                    "type": "number",
                    "description": "The units for the vehicle weight restrictions are in kilograms.",
                    "$reqId": "3.3.4.3.2.5.2.9"
                },
                "linkRestrictionsWidth": {
                    "type": "number",
                    "description": "The units for the vehicle width restrictions are in centimeters.",
                    "$reqId": "3.3.4.3.2.5.2.10"
                },
                "linkRestrictionsAxleWeight": {
                    "type": "number",
                    "description": "The units for the vehicle axle weight restrictions are in kilograms.",
                    "$reqId": "3.3.4.3.2.5.2.11"
                },
                "linkRestrictionsUnits": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.2.12",
                    "enum": [
                        "centimeters",
                        "inches"
                    ]
                },
                "linkSurfaceConditions": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.2.13",
                    "enum": [
                        "dry",
                        "wet",
                        "snow or slush",
                        "ice",
                        "oil",
                        "debris",
                        "rocks",
                        "salted",
                        "broken pavement",
                        "power lines down",
                        "material spill",
                        "chemical spill",
                        "none"
                    ]
                },
                "linkSaturation": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.2.14",
                    "enum": [
                        "not oversaturated",
                        "oversaturated"
                    ]
                },
                "linkSaturationThresholdPercentage": {
                    "type": "number",
                    "$reqId": "3.3.4.3.2.5.2.15"
                },
                "linkLevelService": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.2.16",
                    "enum": [
                        "A",
                        "B",
                        "C",
                        "D",
                        "E",
                        "F"
                    ]
                },
                "laneNumbers": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.2.17"
                },
                "linkDataStoredType": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.2.18",
                    "enum": [
                        "current link volume",
                        "current occupancy",
                        "current average speed",
                        "current delay time",
                        "current travel time",
                        "roadway status",
                        "daily peak volume",
                        "hour of peak volume"
                    ]
                },
                "roadwayEventSource": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.2.19",
                    "enum": [
                        "transit agency",
                        "traffic agency",
                        "commercial traffic service",
                        "unknown motorist observer",
                        "commercial fleet operator",
                        "DOT",
                        "automobile club patrol",
                        "spotter aircraft",
                        "private breakdown service",
                        "camera observation",
                        "non-police emergency service patrol",
                        "inductive loop monitoring station",
                        "microwave monitoring station",
                        "mobile platform measurement",
                        "mobile telephone caller previously unknown",
                        "police patrol",
                        "public and private utilities",
                        "road condition model",
                        "registered motorist observer",
                        "roadside telephone caller",
                        "snowplow report",
                        "traffic monitoring station",
                        "video processing monitoring station",
                        "vehicle probe measurement",
                        "weather mode"
                    ]
                },
                "trafficDataType": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.2.20",
                    "enum": [
                        "actual",
                        "reconstructed",
                        "historical",
                        "predicted",
                        "smoothed",
                        "averaged",
                        "estimated"
                    ]
                },
                "linkStops": {
                    "type": "number",
                    "$reqId": "3.3.4.3.2.5.2.21"
                },
                "linkDelayTimeInSeconds": {
                    "type": "number",
                    "$reqId": "3.3.4.3.2.5.2.22"
                },
                "linkDelayTimeInSecondsAlternateRoute": {
                    "type": "number",
                    "$reqId": "3.3.4.3.2.5.2.23"
                },
                "linkHeadway": {
                    "type": "number",
                    "$reqId": "3.3.4.3.2.5.2.24"
                },
                "linkTravelTime": {
                    "type": "number",
                    "$reqId": "3.3.4.3.2.5.2.25"
                },
                "linkExistingCapacity": {
                    "type": "number",
                    "$reqId": "3.3.4.3.2.5.2.26"
                },
                "linkTravelTimeIncrease": {
                    "type": "number",
                    "$reqId": "3.3.4.3.2.5.2.27"
                },
                "linkAverageSpeed": {
                    "type": "number",
                    "description": "The units for the speed is in kilometers per hour.",
                    "$reqId": "3.3.4.3.2.5.2.28"
                },
                "linkEstimatedSpeed": {
                    "type": "number",
                    "description": "The units for the speed is in kilometers per hour.",
                    "$reqId": "3.3.4.3.2.5.2.29"
                },
                "linkSpeedLimit": {
                    "type": "number",
                    "description": "The units for the speed is in kilometers per hour.",
                    "$reqId": "3.3.4.3.2.5.2.30"
                },
                "linkCurrentAdvisorySpeed": {
                    "type": "number",
                    "description": "The units for the speed is in kilometers per hour.",
                    "$reqId": "3.3.4.3.2.5.2.31"
                },
                "linkTruckSpeedLimit": {
                    "type": "number",
                    "description": "The units for the speed is in kilometers per hour.",
                    "$reqId": "3.3.4.3.2.5.2.32"
                },
                "speedLimitUnits": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.2.33",
                    "enum": [
                        "kilometers per hour",
                        "miles per hour"
                    ]
                },
                "linkDensity": {
                    "type": "number",
                    "description": "The units for this property is in vehicles per kilometer.",
                    "$reqId": "3.3.4.3.2.5.2.34"
                },
                "linkOccupancy": {
                    "type": "number",
                    "$reqId": "3.3.4.3.2.5.2.35"
                },
                "linkVolume": {
                    "type": "string",
                    "description": "The units for this property is in vehicles per hour.",
                    "$reqId": "3.3.4.3.2.5.2.36"
                },
                "eventDescriptionTime": {
                    "$ref": "#/$defs/DateTime",
                    "$reqId": "3.3.4.3.2.5.2.37"
                },
                "linkLaneStatus": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.2.38"
                },
                "linkLaneDirectionStatus": {
                    "type": "string",
                    "$reqId": "3.3.4.3.2.5.2.39",
                    "enum": [
                        "normal",
                        "contraflow"
                    ]
                },
                "lastChangedInformation": {
                    "$reqId": "3.3.4.3.2.5.2.40",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "linkId",
                "linkState"
            ]
        },
        "LinkTypes": {
            "type": "string",
            "enum": [
                "freeway",
                "arterial",
                "collector",
                "local",
                "service road",
                "tunnel",
                "detour",
                "dedicated link",
                "military road",
                "railroad link",
                "air link",
                "ferry",
                "on ramp",
                "off ramp",
                "dedicated HOV lane",
                "toll road",
                "unknown",
                "other"
            ]
        },
        "ListCurrentlyFailedSubscriptionsContent": {
            "description": "Include content of currently filed subscriptions list",
            "type": "object",
            "$reqId": "3.3.1.5.5.3",
            "properties": {
                "subscriptionRequestDialog": {
                    "$reqId": "3.3.1.5.5.3.a",
                    "description": "Dialog for subscription request",
                    "type": "string"
                },
                "dataUpdateDialog": {
                    "$reqId": "3.3.1.5.5.3.b",
                    "description": "Dialog for updating data",
                    "type": "string"
                },
                "dataType": {
                    "$reqId": "3.3.1.5.5.3.c",
                    "description": "Data type included in the update",
                    "type": "string"
                },
                "subscriptionType": {
                    "$reqId": "3.3.1.5.5.3.d",
                    "description": "Type of subscription offered",
                    "type": "string"
                },
                "subscriptionParameters": {
                    "$reqId": "3.3.1.5.5.3.e",
                    "description": "List of parameters for subscription",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subscriptionId": {
                    "$reqId": "3.3.1.5.5.3.f",
                    "description": "Unique identifier for the subscription",
                    "type": "string"
                },
                "failureDateTime": {
                    "$reqId": "3.3.1.5.5.3.g",
                    "description": "Date and time of the failure",
                    "$ref": "#/$defs/DateTime"
                },
                "failureReason": {
                    "$reqId": "3.3.1.5.5.3.h",
                    "description": "Code or reason for failure",
                    "type": "string"
                },
                "failureDescription": {
                    "$reqId": "3.3.1.5.5.3.i",
                    "description": "Description of the failure",
                    "type": "string"
                },
                "flag": {
                    "$reqId": "3.3.1.5.5.3.j",
                    "description": "Indicator for receiving or sending status.",
                    "type": "string"
                },
                "subscriptionUpdateSourceEndpoint": {
                    "$reqId": "3.3.1.5.5.4.1",
                    "description": "Send the subscription update source endpoint to the receiving center",
                    "type": "string"
                },
                "ownerCenterSubscriptionRequestEndpoint": {
                    "$reqId": "3.3.1.5.5.4.2",
                    "description": "Send the subscription request endpoint to the receiving center.",
                    "type": "string"
                },
                "subscriptionUpdateTargetEndpoint": {
                    "$reqId": "3.3.1.5.5.4.3",
                    "description": "Send the subscription update target endpoint to the receiving center",
                    "type": "string"
                }
            },
            "required": [
                "subscriptionRequestDialog",
                "dataUpdateDialog",
                "dataType",
                "subscriptionType",
                "subscriptionParameters",
                "subscriptionId",
                "failureDateTime",
                "failureReason",
                "failureDescription",
                "flag"
            ]
        },
        "MedianTypes": {
            "type": "string",
            "enum": [
                "curbed",
                "concrete barrier",
                "concrete barrier with visibility screen",
                "guard rail",
                "open grass",
                "open sand",
                "painted median no access",
                "separated roadways",
                "unprotected"
            ]
        },
        "MeteredLaneActionControl": {
            "type": "string"
        },
        "NetworkInformationTypes": {
            "type": "string",
            "enum": [
                "network inventory",
                "node inventory",
                "node status",
                "link inventory",
                "link status",
                "route inventory",
                "route status",
                "fleet vehicle inventory",
                "fleet vehicle data"
            ]
        },
        "Node": {
            "type": "object",
            "properties": {
                "nodeId": {
                    "type": "string",
                    "$reqId": "3.3.4.2.1.5.1.c"
                },
                "nodeLocation": {
                    "$reqId": "3.3.4.2.1.5.1.d",
                    "$ref": "#/$defs/GeoLocation"
                },
                "roadwayNetworkName": {
                    "type": "string",
                    "$reqId": "3.3.4.2.1.5.2.2"
                },
                "nodeName": {
                    "type": "string",
                    "$reqId": "3.3.4.2.1.5.2.3"
                },
                "nodeDescription": {
                    "type": "string",
                    "$reqId": "3.3.4.2.1.5.2.4"
                },
                "routeDesignator": {
                    "type": "string",
                    "$reqId": "3.3.4.2.1.5.2.5"
                },
                "nodeDirection": {
                    "type": "string",
                    "$reqId": "3.3.4.2.1.5.2.6",
                    "enum": [
                        "northbound",
                        "northeast bound",
                        "eastbound",
                        "southeast bound",
                        "southbound",
                        "southwest bound",
                        "westbound",
                        "northwest bound",
                        "not directional",
                        "positive direction",
                        "negative direction",
                        "both directions",
                        "any other"
                    ]
                },
                "linearReference": {
                    "type": "object",
                    "$reqId": "3.3.4.2.1.5.2.7",
                    "$ref": "#/$defs/LinearReference"
                },
                "nodeType": {
                    "type": "string",
                    "$reqId": "3.3.4.2.1.5.2.8",
                    "enum": [
                        "freeway interchange",
                        "arterial with secondary cross street",
                        "arterial with crossing arterial",
                        "frontage road with arterial",
                        "railroad crossing",
                        "transit crossing",
                        "bus route node",
                        "train route node",
                        "wharf ferry node",
                        "transfer point",
                        "pedestrian crossing"
                    ]
                },
                "numberOfLinks": {
                    "type": "number",
                    "$reqId": "3.3.4.2.1.5.2.9"
                },
                "nodeLastChangedInformation": {
                    "type": "object",
                    "$reqId": "3.3.4.2.1.5.2.10",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "nodeId",
                "nodeLocation"
            ]
        },
        "NodeStatus": {
            "type": "object",
            "$reqId": "3.3.4.2.2.5",
            "properties": {
                "nodeId": {
                    "type": "string",
                    "$reqId": "3.3.4.2.2.5.1.c"
                },
                "nodeState": {
                    "type": "string",
                    "$reqId": "3.3.4.2.2.5.1.d",
                    "enum": [
                        "no determination",
                        "open",
                        "restricted",
                        "closed"
                    ]
                },
                "roadwayNetworkName": {
                    "type": "string",
                    "$reqId": "3.3.4.2.2.5.2.2"
                },
                "nodeName": {
                    "type": "string",
                    "$reqId": "3.3.4.2.2.5.2.3"
                },
                "lastChangedInformation": {
                    "type": "object",
                    "$reqId": "3.3.4.2.2.5.2.4",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "nodeId",
                "nodeState"
            ]
        },
        "NodeStatusTypes": {
            "type": "string",
            "enum": [
                "no determination",
                "open",
                "restricted",
                "closed"
            ]
        },
        "NodeTypes": {
            "type": "string",
            "enum": [
                "freeway interchange",
                "arterial with secondary cross street",
                "arterial with crossing arterial",
                "frontage road with arterial",
                "railroad crossing",
                "transit crossing",
                "bus route node",
                "train route node",
                "wharf ferry node",
                "transfer point",
                "pedestrian crossing"
            ]
        },
        "OrganizationCenter": {
            "description": "Provide information about centers owned or operated by the organization in the organization information sent to a receiving center.",
            "type": "object",
            "$reqId": "3.3.2.5.2.4",
            "properties": {
                "organizationCenterId": {
                    "$reqId": "3.3.2.5.2.4.1",
                    "description": "Provide unique identifier of center owned or operated by the organization as part of the organization center information",
                    "type": "string"
                },
                "organizationCenterName": {
                    "$reqId": "3.3.2.5.2.4.2.1",
                    "description": "Provide the name of the center in organization center information",
                    "type": "string"
                },
                "organizationCenterLocation": {
                    "$reqId": "3.3.2.5.2.4.2.2",
                    "description": "Indicate geographic location (longitude, latitude) of the sending center in organization center information",
                    "$ref": "#/$defs/GeoLocation"
                },
                "organizationCenterDescription": {
                    "$reqId": "3.3.2.5.2.4.2.3",
                    "description": "Provide a textual description of the center as part of organization center information.",
                    "type": "string"
                },
                "organizationCenterType": {
                    "$reqId": "3.3.2.5.2.4.2.4",
                    "description": "Indicate if the center is a 'fixed' or 'mobile' center in organization center information",
                    "type": "string",
                    "enum": [
                        "fixed",
                        "mobile"
                    ]
                },
                "organizationCenterContactInformation": {
                    "$reqId": "3.3.2.5.2.4.2.5",
                    "description": "Provide unique identifier of the default contact person for the organization center",
                    "type": "string"
                }
            },
            "required": [
                "organizationCenterId"
            ]
        },
        "OrganizationContactInformation": {
            "type": "object",
            "description": "Provide default contact person information for the organization",
            "properties": {
                "contactGroupId": {
                    "$reqId": "3.3.2.5.2.3.1",
                    "description": "Provide the unique identifier of the default contact person as part of the organization contact information",
                    "type": "string"
                },
                "contactGroupName": {
                    "$reqId": "3.3.2.5.2.3.2.1",
                    "description": "Provide the name of the contact person for the organization in the information sent to the receiving center",
                    "type": "string"
                },
                "contactGroupRole": {
                    "$reqId": "3.3.2.5.2.3.2.2",
                    "description": "Provide a description of the contact person's job or role in the organization as part of the organization information",
                    "type": "string"
                },
                "workPhoneNumber": {
                    "$reqId": "3.3.2.5.2.3.2.3",
                    "description": "Provide the work telephone number of the contact person in organization information",
                    "type": "string"
                },
                "alternatePhoneNumber": {
                    "$reqId": "3.3.2.5.2.3.2.4",
                    "description": "Provide an alternate phone number for the contact person in organization information",
                    "type": "string"
                }
            },
            "required": [
                "contactGroupId"
            ]
        },
        "OrganizationInformation": {
            "type": "object",
            "properties": {
                "organizationId": {
                    "$reqId": "3.3.2.5.1",
                    "description": "Include the unique identifier of the organization in the information sent from the sending center to the receiving center.",
                    "type": "string"
                },
                "organizationName": {
                    "$reqId": "3.3.2.5.2.1",
                    "description": "Provide organization name in the organization information sent to the receiving center.",
                    "type": "string"
                },
                "organizationLocation": {
                    "$reqId": "3.3.2.5.2.2",
                    "description": "Provide the location of the organization in the organization information sent to the receiving center.",
                    "$ref": "#/$defs/GeoLocation"
                },
                "OrganizationContactInformation": {
                    "$ref": "#/$defs/OrganizationContactInformation"
                },
                "OrganizationCenter": {
                    "$ref": "#/$defs/OrganizationCenter"
                },
                "orgInformationLastUpdated": {
                    "$reqId": "3.3.2.5.2.5",
                    "description": "Provide the date and time of the last change to organization information in the data sent to a receiving center.",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "organizationId"
            ]
        },
        "OrganizationTypes": {
            "type": "string",
            "enum": [
                "organization",
                "center"
            ]
        },
        "OtherReferences": {
            "description": "Associate one event with another event for comprehensive situational awareness",
            "type": "object",
            "$reqId": "3.3.3.6.3",
            "properties": {
                "tripReference": {
                    "$reqId": "3.3.3.6.3.1",
                    "description": "Provide trip reference information related to the event in the event information sent to an external center.",
                    "type": "string"
                },
                "responsibleReference": {
                    "$reqId": "3.3.3.6.3.2",
                    "description": "Provide event reference information as part of the event information sent to an external center.",
                    "type": "string"
                },
                "relatedEvent": {
                    "$reqId": "3.3.3.6.3.3",
                    "description": "Provide event reference information of a related event in the event information sent to an external center.",
                    "type": "string"
                },
                "previousEvent": {
                    "$reqId": "3.3.3.6.3.4",
                    "description": "Provide event reference information of a previous event in the event information sent to an external center.",
                    "type": "string"
                },
                "splitEvent": {
                    "$reqId": "3.3.3.6.3.5",
                    "description": "Provide event reference information of a split event in event information sent to an external center",
                    "type": "string"
                },
                "mergedEvent": {
                    "$reqId": "3.3.3.6.3.6",
                    "description": "Provide event reference information of a merged event in the event information sent to an external center",
                    "type": "string"
                },
                "siblingEvent": {
                    "$reqId": "3.3.3.6.3.7",
                    "description": "Provide event reference information of a sibling event in event information sent to an external center.",
                    "type": "string"
                },
                "associatedDevice": {
                    "$reqId": "3.3.3.6.3.8",
                    "description": "Provide device reference information related to the event in the event information sent to an external center.",
                    "type": "string"
                },
                "associatedUrl": {
                    "$reqId": "3.3.3.6.3.9",
                    "description": "Provide a URL as part of event information sent to an external center for additional event details",
                    "type": "string"
                }
            }
        },
        "PointOnALinkLocation": {
            "description": "Include geographic location (longitude, latitude) for event location information",
            "type": "object",
            "$reqId": "3.3.3.5.1.3.4.4",
            "properties": {
                "linearReferenceLocation": {
                    "$reqId": "3.3.3.5.1.3.4.5.1",
                    "description": "Provide linear reference location in event location information",
                    "type": "string"
                },
                "linkNameEventPoint": {
                    "$reqId": "3.3.3.5.1.3.4.5.2",
                    "description": "Provide the name of the roadway for event location information",
                    "type": "string"
                },
                "pointName": {
                    "$reqId": "3.3.3.5.1.3.4.5.3",
                    "description": "Provide the name of a point along the roadway as part of the event location information.",
                    "type": "string"
                },
                "crossStreetIdentifier": {
                    "$reqId": "3.3.3.5.1.3.4.5.4",
                    "description": "Provide unique identifier of each cross street in event location information",
                    "type": "string"
                },
                "crossStreetName": {
                    "$reqId": "3.3.3.5.1.3.4.5.5",
                    "description": "Provide unique names of each cross street as part of event location information",
                    "type": "string"
                },
                "signedDestination": {
                    "$reqId": "3.3.3.5.1.3.4.5.6",
                    "description": "Provide signed destination information as part of the event location information",
                    "type": "string"
                },
                "pointLocationRank": {
                    "$reqId": "3.3.3.5.1.3.4.5.7",
                    "description": "Include location rank from 0 to 10 in event location information, indicating relative importance.",
                    "$ref": "#/$defs/Rank"
                },
                "landmarkType": {
                    "$reqId": "3.3.3.5.1.3.4.5.8",
                    "description": "Include landmark type information as part of event location information",
                    "type": "string"
                },
                "secondaryLinkLocation": {
                    "$reqId": "3.3.3.5.1.3.4.5.9",
                    "description": "Provide secondary link location as part of event location information",
                    "type": "string"
                }
            }
        },
        "RSUMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "$reqId": "3.3.5.10.3.5.1.b",
                    "description": "The message payload received or broadcast by the RSU",
                    "type": "string"
                },
                "messageNumber": {
                    "$reqId": "3.3.5.10.3.5.1.c",
                    "description": "The message number received or broadcast by the RSU",
                    "type": "number"
                },
                "messageType": {
                    "$reqId": "3.3.5.10.3.5.1.d",
                    "description": "The V2X message type of message received or broadcast by the RSU",
                    "type": "string",
                    "enum": [
                        "TIM",
                        "RSM",
                        "SPaT",
                        "MAP",
                        "SRM",
                        "SSM",
                        "BSM",
                        "RTCM",
                        "other"
                    ]
                },
                "messageSource": {
                    "$reqId": "3.3.5.10.3.5.1.e",
                    "description": "The message source of message received or broadcast by the RSU",
                    "type": "string",
                    "enum": [
                        "v2sConnected",
                        "storedMessage",
                        "managementStation",
                        "gnss",
                        "ca",
                        "other"
                    ]
                },
                "activeMessage": {
                    "$reqId": "3.3.5.10.3.5.1.f",
                    "description": "The active message type of message received or broadcast by the RSU",
                    "type": "string",
                    "enum": [
                        "storeAndRepeatMessage",
                        "immediateForwardMessage",
                        "receivedMessagesForwardedFromV2XInterface",
                        "transmittedMessagesForwardedOverV2XInterface",
                        "waveServiceAdvertisements"
                    ]
                }
            },
            "required": [
                "message",
                "messageNumber"
            ]
        },
        "Rank": {
            "type": "number",
            "minimum": 0,
            "maximum": 10
        },
        "RequestFilterLimit": {
            "type": "object",
            "properties": {
                "requestFilterLimit": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "specific events",
                            "specific response plans",
                            "all current events",
                            "all event updates",
                            "all response plans",
                            "no filtering"
                        ]
                    }
                },
                "eventIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if 'specific events' is selected.",
                    "minItems": 1
                },
                "responsePlanIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Required if 'specific response plans' is selected.",
                    "minItems": 1
                }
            },
            "required": [
                "requestFilterLimit"
            ],
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "requestFilterLimit": {
                                "contains": {
                                    "const": "specific events"
                                }
                            }
                        }
                    },
                    "then": {
                        "required": [
                            "eventIds"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "requestFilterLimit": {
                                "contains": {
                                    "const": "specific response plans"
                                }
                            }
                        }
                    },
                    "then": {
                        "required": [
                            "responsePlanIds"
                        ]
                    }
                }
            ]
        },
        "ResponsePlanActivityLogContent": {
            "description": "Send response plan log details to the external center",
            "type": "object",
            "$reqId": "3.3.3.9.5.4",
            "properties": {
                "deviceType": {
                    "$reqId": "3.3.3.9.5.4.1.a",
                    "description": "Device type involved in the response plan",
                    "type": "string"
                },
                "deviceId": {
                    "$reqId": "3.3.3.9.5.4.1.b",
                    "description": "Unique identifier for the device involved in the response plan",
                    "type": "string"
                },
                "commandSent": {
                    "$reqId": "3.3.3.9.5.4.1.c",
                    "description": "Command sent to the device in the response plan",
                    "type": "string"
                },
                "commandStatus": {
                    "$reqId": "3.3.3.9.5.4.1.d",
                    "description": "Response plan command status for each sent command",
                    "type": "string"
                },
                "acknowledgement": {
                    "$reqId": "3.3.3.9.5.4.1.e",
                    "description": "Text of any acknowledgement sent in response to a command",
                    "type": "string"
                },
                "commandSendTime": {
                    "$reqId": "3.3.3.9.5.4.2.1",
                    "description": "Contain command send time and command acknowledgement received time in the response plan activity log details.",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "deviceType",
                "deviceId",
                "commandSent",
                "commandStatus",
                "acknowledgement"
            ]
        },
        "ResponsePlanApprovalDecision": {
            "description": "Send response approval decision to external center regarding response plan activities",
            "type": "object",
            "$reqId": "3.3.3.8.7.5.2",
            "properties": {
                "organization": {
                    "$reqId": "3.3.3.8.7.5.2.1.a",
                    "description": "Identifier for the organization providing the decision",
                    "$ref": "#/$defs/OrganizationInformation"
                },
                "decision": {
                    "$reqId": "3.3.3.8.7.5.2.1.b",
                    "description": "Outcome of the decision-making process",
                    "type": "string"
                },
                "approvalMethod": {
                    "$reqId": "3.3.3.8.7.5.2.1.c",
                    "description": "Indication of the method of approval (automated, manual)",
                    "type": "string",
                    "enum": [
                        "automated",
                        "manual"
                    ]
                },
                "decisionTime": {
                    "$reqId": "3.3.3.8.7.5.2.2.1",
                    "description": "Include the time of the approval decision in the response plan approval notification to the external center.",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "organization",
                "decision",
                "approvalMethod"
            ]
        },
        "ResponsePlanDetails": {
            "type": "object",
            "$reqId": "3.3.3.8.5.4",
            "properties": {
                "startTime": {
                    "$reqId": "3.3.3.8.5.4.1.a",
                    "description": "Time when the activity begins",
                    "$ref": "#/$defs/DateTime"
                },
                "projectedEndTime": {
                    "$reqId": "3.3.3.8.5.4.1.b",
                    "description": "Estimated time the projected activity will conclude",
                    "$ref": "#/$defs/DateTime"
                },
                "participatingAgencies": {
                    "$reqId": "3.3.3.8.5.4.1.c",
                    "description": "List of agencies involved in response plan activities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "detourList": {
                    "$reqId": "3.3.3.8.5.4.2.1",
                    "description": "Send the list of detours as part of the response plan to the external center.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rampMeterActions": {
                    "$reqId": "3.3.3.8.5.4.2.2",
                    "description": "Send a list of ramp meter control actions included in the response plan to the external center.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "intersectionSignalControlActions": {
                    "$reqId": "3.3.3.8.5.4.2.3",
                    "description": "Send a list of intersection signal control actions in the response plan to the external center",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dmsControlActions": {
                    "$reqId": "3.3.3.8.5.4.2.4",
                    "description": "Send a list of DMS control actions within the response plan to the external center",
                    "type": "array",
                    "items": {
                        "$ref": "#/DMSControlCommandResponse"
                    }
                },
                "harMessageControlActions": {
                    "$reqId": "3.3.3.8.5.4.2.5",
                    "description": "Send a list of HAR message control actions in the response plan to the external center",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "otherMessages": {
                    "$reqId": "3.3.3.8.5.4.2.6",
                    "description": "Send a list of informational messages included in the response plan to the external center",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lcsScheduleChanges": {
                    "$reqId": "3.3.3.8.5.4.2.7",
                    "description": "Send a list of LCS schedule cancellations in the response plan to the external center",
                    "type": "array",
                    "items": {
                        "$ref": "#/LCSScheduleResponse"
                    }
                },
                "speedRestrictions": {
                    "$reqId": "3.3.3.8.5.4.2.8",
                    "description": "Send speed reduction actions included in the response plan to the external center",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roadClosureActions": {
                    "$reqId": "3.3.3.8.5.4.2.9",
                    "description": "Send road closure actions included in the response plan to the external center",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "personnelDeploymentActions": {
                    "$reqId": "3.3.3.8.5.4.2.10",
                    "description": "Send a list of personnel deployment actions in the response plan to the external center",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deviceControlActions": {
                    "$reqId": "3.3.3.8.5.4.2.11",
                    "description": "Send a list of device control cancellations within the response plan to the external center",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "aggregateApprovalDecisions": {
                    "$reqId": "3.3.3.8.5.4.2.12",
                    "description": "Send aggregate approval decision for response plan to external center",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "individualApprovalDecisions": {
                    "$reqId": "3.3.3.8.5.4.2.13",
                    "description": "Send a list of individual approval decisions from all participating agencies to the external center",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "startTime",
                "projectedEndTime",
                "participatingAgencies"
            ]
        },
        "ResponsePlanFilter": {
            "description": "Include a response plan filter in the response plan information request based on specified criteria",
            "type": "object",
            "$reqId": "3.3.3.8.4.2.4",
            "properties": {
                "eventId": {
                    "$reqId": "3.3.3.8.4.2.4.a",
                    "description": "Unique identifier for the event",
                    "type": "string"
                },
                "evaluationCycles": {
                    "$reqId": "3.3.3.8.4.2.4.b",
                    "description": "List of evaluation cycles",
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/EvaluationCycle"
                    }
                },
                "responsePlanRanks": {
                    "$reqId": "3.3.3.8.4.2.4.c",
                    "description": "Rank list of response plans",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "responsePlanIds": {
                    "$reqId": "3.3.3.8.4.2.4.d",
                    "description": "List of response plan identifiers",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "planType": {
                    "$reqId": "3.3.3.8.4.2.4.e",
                    "description": "Type of plan classification",
                    "type": "string"
                },
                "responsePlanStatuses": {
                    "$reqId": "3.3.3.8.4.2.4.f",
                    "description": "List of statuses for response plans",
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/ResponsePlanStatusEnum"
                    }
                }
            }
        },
        "ResponsePlanHeader": {
            "description": "Send the response plan header to an external center",
            "type": "object",
            "$reqId": "3.3.3.8.5.2",
            "properties": {
                "eventId": {
                    "$reqId": "3.3.3.8.5.2.1.a",
                    "description": "Unique identifier for the event",
                    "type": "string"
                },
                "planId": {
                    "$reqId": "3.3.3.8.5.2.1.b",
                    "description": "Unique identifier for the response plan",
                    "type": "string"
                },
                "planType": {
                    "$reqId": "3.3.3.8.5.2.1.c",
                    "description": "Type of plan being referenced",
                    "type": "string"
                },
                "responsePlanRanking": {
                    "$reqId": "3.3.3.8.5.2.2.1",
                    "description": "Include a ranking of the response plan in the response plan header",
                    "$ref": "#/$defs/Rank"
                },
                "submissionTime": {
                    "$reqId": "3.3.3.8.5.2.2.2",
                    "description": "Include submission time of response plan for approval in the header",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "eventId",
                "planId",
                "planType"
            ]
        },
        "ResponsePlanStatusEnum": {
            "type": "string",
            "enum": [
                "generated",
                "submitted-for-approval",
                "being implemented",
                "implemented",
                "completed",
                "rejected"
            ]
        },
        "RestrictionTypes": {
            "type": "string",
            "enum": [
                "Unrestricted",
                "Not to Public",
                "Restricted to Law Enforcement",
                "Restricted to Recipient Organization Only"
            ]
        },
        "Restrictions": {
            "description": "Provide restrictions on information dissemination in the response message to external centers",
            "$reqId": "3.3.1.9.1",
            "$ref": "#/$defs/RestrictionTypes"
        },
        "Route": {
            "type": "object",
            "properties": {
                "routeId": {
                    "type": "string",
                    "$reqId": "3.3.4.4.1.5.1.c"
                },
                "linkIds": {
                    "type": "array",
                    "$reqId": "3.3.4.4.1.5.1.d",
                    "items": {
                        "type": "string"
                    }
                },
                "routeType": {
                    "type": "string",
                    "$reqId": "3.3.4.4.1.5.1.e",
                    "enum": [
                        "ravel",
                        "transit",
                        "detour",
                        "alternate",
                        "evacuation",
                        "snow",
                        "emergency vehicles",
                        "managed lanes",
                        "flood",
                        "scenic",
                        "hazmat",
                        "truck",
                        "bicycle",
                        "walking"
                    ]
                },
                "roadwayNetworkName": {
                    "type": "string",
                    "$reqId": "3.3.4.4.1.5.2.2"
                },
                "routeName": {
                    "type": "string",
                    "$reqId": "3.3.4.4.1.5.2.3"
                },
                "alternateRouteNames": {
                    "type": "string",
                    "$reqId": "3.3.4.4.1.5.2.4"
                },
                "routeLength": {
                    "type": "number",
                    "$reqId": "3.3.4.4.1.5.2.5"
                },
                "nodesIdList": {
                    "type": "array",
                    "$reqId": "3.3.4.4.1.5.2.6",
                    "items": {
                        "type": "string"
                    }
                },
                "routeImageUrl": {
                    "type": "string",
                    "$reqId": "3.3.4.4.1.5.2.7"
                },
                "routeImageUrlReferenceMedium": {
                    "type": "string",
                    "$reqId": "3.3.4.4.1.5.2.8"
                },
                "lastChangedInformation": {
                    "$reqId": "3.3.4.4.1.5.2.9",
                    "$ref": "#/$defs/DateTime"
                }
            },
            "required": [
                "routeId",
                "linkId",
                "routeType"
            ]
        },
        "RouteStatus": {
            "type": "object",
            "properties": {
                "routeId": {
                    "type": "string",
                    "$reqId": "3.3.4.4.2.5.1.c"
                },
                "routeState": {
                    "type": "string",
                    "$reqId": "3.3.4.4.2.5.1.d",
                    "enum": [
                        "no determination",
                        "open",
                        "restricted",
                        "closed"
                    ]
                },
                "routeName": {
                    "type": "string",
                    "$reqId": "3.3.4.4.2.5.2.2"
                },
                "routeDetourStatusFlag": {
                    "type": "boolean",
                    "$reqId": "3.3.4.4.2.5.2.3"
                },
                "routeSurfaceConditions": {
                    "type": "string",
                    "$reqId": "3.3.4.4.2.5.2.4",
                    "enum": [
                        "dry",
                        "wet",
                        "snow or slush",
                        "ice",
                        "oil",
                        "debris",
                        "rocks",
                        "salted",
                        "broken pavement",
                        "power lines down",
                        "material spill",
                        "chemical spill",
                        "none"
                    ]
                },
                "routeExistingCapacityPercentage": {
                    "type": "number",
                    "$reqId": "3.3.4.4.2.5.2.5"
                },
                "routeLevelService": {
                    "type": "string",
                    "$reqId": "3.3.4.4.2.5.2.6",
                    "enum": [
                        "A",
                        "B",
                        "C",
                        "D",
                        "E",
                        "F"
                    ]
                },
                "routeSaturation": {
                    "type": "string",
                    "$reqId": "3.3.4.4.2.5.2.7",
                    "enum": [
                        "not oversaturated",
                        "oversaturated"
                    ]
                },
                "routeDataStoredType": {
                    "type": "string",
                    "$reqId": "3.3.4.4.2.5.2.8",
                    "enum": [
                        "current route volume",
                        "current occupancy",
                        "current average speed",
                        "current delay time",
                        "current travel time",
                        "roadway status"
                    ]
                },
                "routeTrafficAlgorithmDataType": {
                    "type": "string",
                    "$reqId": "3.3.4.4.2.5.2.9",
                    "enum": [
                        "actual",
                        "reconstructed",
                        "historical",
                        "predicted",
                        "smoothed",
                        "averaged"
                    ]
                },
                "routeDelayTime": {
                    "type": "number",
                    "$reqId": "3.3.4.4.2.5.2.10"
                },
                "routeDelayTimeAlternateRoute": {
                    "type": "number",
                    "$reqId": "3.3.4.4.2.5.2.11"
                },
                "routeHeadway": {
                    "type": "number",
                    "$reqId": "3.3.4.4.2.5.2.12"
                },
                "routeTravelTime": {
                    "type": "number",
                    "$reqId": "3.3.4.4.2.5.2.13"
                },
                "routeTravelTimeIncreasePercentage": {
                    "type": "number",
                    "$reqId": "3.3.4.4.2.5.2.14"
                },
                "routeVolume": {
                    "type": "number",
                    "$description": "expressed in vehicles per hour",
                    "$reqId": "3.3.4.4.2.5.2.15"
                },
                "routeAverageSpeed": {
                    "type": "number",
                    "$description": "expressed in kilometers per hour",
                    "$reqId": "3.3.4.4.2.5.2.16"
                },
                "routeDensity": {
                    "type": "number",
                    "$description": "expressed in vehicles per kilometer",
                    "$reqId": "3.3.4.4.2.5.2.17"
                },
                "routeOccupancyPercentage": {
                    "type": "number",
                    "$reqId": "3.3.4.4.2.5.2.18"
                },
                "routeCurrentAdvisorySpeed": {
                    "type": "string",
                    "$description": "expressed in kilometers per hour",
                    "$reqId": "3.3.4.4.2.5.2.19"
                },
                "speedLimitUnitsRouteStatus": {
                    "type": "string",
                    "$reqId": "3.3.4.4.2.5.2.20",
                    "enum": [
                        "kilometers per hour",
                        "miles per hour"
                    ]
                },
                "eventDescriptionTimeRouteStatus": {
                    "$ref": "#/$defs/DateTime",
                    "$reqId": "3.3.4.4.2.5.2.21"
                },
                "lastChangedInformation": {
                    "$ref": "#/$defs/DateTime",
                    "$reqId": "3.3.4.4.2.5.2.22"
                }
            },
            "required": [
                "routeId",
                "routeStatus"
            ]
        },
        "Saturations": {
            "type": "string",
            "enum": [
                "not oversaturated",
                "oversaturated"
            ]
        },
        "SectionTimingPattern": {
            "type": "object",
            "properties": {
                "intersectionId": {
                    "type": "string"
                },
                "cycleLength": {
                    "type": "number"
                },
                "offsetTime": {
                    "type": "number"
                },
                "phaseTPList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/IntersectionSignalTPInventoryPhase"
                    }
                },
                "sequenceInformation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/IntersectionSignalSequenceData"
                    }
                }
            },
            "required": [
                "intersectionId",
                "cycleLength",
                "offsetTime",
                "phaseTPList"
            ]
        },
        "SensorSpecificInformation": {
            "description": "Requirements for sensor specific metadata information that may be included in ESS metadata information",
            "type": "object",
            "$reqId": "3.3.5.5.4.3.4",
            "properties": {
                "stationId": {
                    "$reqId": "3.3.5.5.4.3.4.1.a",
                    "description": "Unique identifier for the ESS station",
                    "type": "string"
                },
                "essSensorId": {
                    "$reqId": "3.3.5.5.4.3.4.1.b",
                    "description": "Unique identifier for the ESS sensor",
                    "type": "string"
                },
                "sensorInformationDistributionGroup": {
                    "$reqId": "3.3.5.5.4.3.4.1.c",
                    "description": "Distribution group for sensor information",
                    "type": "string"
                },
                "observationType": {
                    "$reqId": "3.3.5.5.4.3.4.1.d",
                    "description": "Type of observation collected by the sensor based on NTCIP 1204 types",
                    "type": "string"
                },
                "sensorManufacturer": {
                    "$reqId": "3.3.5.5.4.3.4.1.e",
                    "description": "Manufacturer identification for the sensor",
                    "type": "string"
                },
                "manufacturerModelNumber": {
                    "$reqId": "3.3.5.5.4.3.4.1.f",
                    "description": "Manufacturer's model number for the sensor",
                    "type": "string"
                },
                "sensorIndex": {
                    "$reqId": "3.3.5.5.4.3.4.1.g",
                    "description": "Order index for similar sensors",
                    "type": "string"
                },
                "sensorDescription": {
                    "$reqId": "3.3.5.5.4.3.4.2.1",
                    "description": "Provide a description of the sensor as part of sensor-specific metadata information",
                    "type": "string"
                },
                "minimumValueSensorRange": {
                    "$reqId": "3.3.5.5.4.3.4.2.2",
                    "description": "Provide the minimum value of the sensor range if different from manufacturer specifications as part of sensor metadata",
                    "type": "string"
                },
                "maximumValueSensorRange": {
                    "$reqId": "3.3.5.5.4.3.4.2.3",
                    "description": "Provide maximum value of sensor range if different from manufacturer's specifications as part of sensor metadata.",
                    "type": "string"
                },
                "maximumPositiveRateChange": {
                    "$reqId": "3.3.5.5.4.3.4.2.4",
                    "description": "Provide the maximum positive rate of change during the defined rate interval as part of the sensor specific metadata",
                    "type": "string"
                },
                "maximumNegativeRateChange": {
                    "$reqId": "3.3.5.5.4.3.4.2.5",
                    "description": "Provide maximum negative rate of change as part of sensor specific metadata information",
                    "type": "string"
                },
                "rateInterval": {
                    "$reqId": "3.3.5.5.4.3.4.2.6",
                    "description": "Provide the rate interval (in seconds) for maximum rates in sensor metadata if a custom value is desired.",
                    "type": "string"
                },
                "persistenceInterval": {
                    "$reqId": "3.3.5.5.4.3.4.2.7",
                    "description": "Provide the duration in seconds for which observed values can remain constant in sensor metadata information",
                    "type": "string"
                },
                "persistenceThreshold": {
                    "$reqId": "3.3.5.5.4.3.4.2.8",
                    "description": "Provide the smallest amount of change allowed between observations for custom value in sensor metadata",
                    "type": "string"
                },
                "likeInstrumentThreshold": {
                    "$reqId": "3.3.5.5.4.3.4.2.9",
                    "description": "Provide the largest observed difference permitted among like instruments as part of sensor specific metadata information if a custom value is desired.",
                    "type": "string"
                },
                "dateCalibration": {
                    "$reqId": "3.3.5.5.4.3.4.2.10",
                    "description": "Provide the last date the sensor was calibrated in sensor metadata information",
                    "type": "string"
                },
                "dateLastMaintenance": {
                    "$reqId": "3.3.5.5.4.3.4.2.11",
                    "description": "Provide the last date maintenance was performed on the sensor as part of sensor specific metadata information",
                    "type": "string"
                },
                "serialNumber": {
                    "$reqId": "3.3.5.5.4.3.4.2.12",
                    "description": "Provide the manufacturer's serial number for the sensor in the sensor specific metadata information",
                    "type": "string"
                },
                "sensorResolution": {
                    "$reqId": "3.3.5.5.4.3.4.2.13",
                    "description": "Provide smallest increment or measurement from the sensor in metadata information",
                    "type": "string"
                },
                "sensorAccuracy": {
                    "$reqId": "3.3.5.5.4.3.4.2.14",
                    "description": "Provide known potential variation of observation (accuracy) for the sensor in sensor-specific metadata information",
                    "type": "string"
                },
                "minimumValueOutput": {
                    "$reqId": "3.3.5.5.4.3.4.2.15",
                    "description": "Provide the minimum sensor output value in the sensor metadata information",
                    "type": "string"
                },
                "maximumValueOutput": {
                    "$reqId": "3.3.5.5.4.3.4.2.16",
                    "description": "Provide the maximum sensor output value in sensor specific metadata information",
                    "type": "string"
                },
                "sensorStationNorthSouthOffset": {
                    "$reqId": "3.3.5.5.4.3.4.2.17",
                    "description": "Provide north/south distance in meters of the sensor from the station reference location in sensor specific metadata",
                    "type": "string"
                },
                "sensorStationEastWestOffset": {
                    "$reqId": "3.3.5.5.4.3.4.2.18",
                    "description": "Provide east/west distance of the sensor from the station reference location in meters as part of sensor metadata",
                    "type": "string"
                },
                "sensorStationElevationOffset": {
                    "$reqId": "3.3.5.5.4.3.4.2.19",
                    "description": "Provide the vertical distance of the sensor from the station reference location in the sensor specific metadata information",
                    "type": "string"
                },
                "sensorSurfaceOffset": {
                    "$reqId": "3.3.5.5.4.3.4.2.20",
                    "description": "Provide vertical distance from pavement surface as part of the sensor specific metadata information",
                    "type": "string"
                },
                "embeddedMaterialDescription": {
                    "$reqId": "3.3.5.5.4.3.4.2.21",
                    "description": "Provide a description of the material of the embedded sensor in sensor metadata information",
                    "type": "string"
                },
                "outputAverageInterval": {
                    "$reqId": "3.3.5.5.4.3.4.2.22",
                    "description": "Provide average interval in milliseconds for sensor observations as part of sensor specific metadata information",
                    "type": "string"
                },
                "outputInternalUnits": {
                    "$reqId": "3.3.5.5.4.3.4.2.23",
                    "description": "Provide internal units of measurement reported by the sensor in the metadata information sent to an external center",
                    "type": "string"
                },
                "initialInstallationDateEssSensor": {
                    "$reqId": "3.3.5.5.4.3.4.2.24",
                    "description": "Provide the installation date of the sensor as part of the sensor metadata information",
                    "type": "string"
                },
                "beginDatetimeOutServicePeriod": {
                    "$reqId": "3.3.5.5.4.3.4.2.25",
                    "description": "Provide date and time the sensor was taken out of service as part of the sensor metadata information",
                    "type": "string"
                },
                "endDatetimeOutServicePeriod": {
                    "$reqId": "3.3.5.5.4.3.4.2.26",
                    "description": "Provide the date and time the sensor was put back into service as part of the sensor metadata information",
                    "type": "string"
                },
                "samplingInterval": {
                    "$reqId": "3.3.5.5.4.3.4.2.27",
                    "description": "Provide interval time in seconds between consecutive sensor readings in sensor specific metadata information",
                    "type": "string"
                }
            },
            "required": [
                "stationId",
                "essSensorId",
                "sensorInformationDistributionGroup",
                "observationType",
                "sensorManufacturer",
                "manufacturerModelNumber",
                "sensorIndex"
            ]
        },
        "SiteSpecificInformation": {
            "description": "Requirements for site specific metadata information that may be included in ESS metadata sent to an external center.",
            "type": "object",
            "$reqId": "3.3.5.5.4.3.5",
            "properties": {
                "siteSpecificMetadataInformation": {
                    "$reqId": "3.3.5.5.4.3.5.1",
                    "description": "Include a description of the site in ESS metadata information sent to an external center.",
                    "type": "string"
                },
                "roadwayName": {
                    "$reqId": "3.3.5.5.4.3.5.2",
                    "description": "Provide the name or number of the nearest highway as part of site-specific metadata information",
                    "type": "string"
                },
                "linearReferenceEssMetadata": {
                    "$reqId": "3.3.5.5.4.3.5.3",
                    "description": "Provide linear reference location and version information in site-specific metadata for external center",
                    "type": "string"
                },
                "linearReferenceUnits": {
                    "$reqId": "3.3.5.5.4.3.5.4",
                    "description": "Provide units reported for the roadway marker as part of site-specific metadata information",
                    "type": "string"
                },
                "distanceRoadway": {
                    "$reqId": "3.3.5.5.4.3.5.5",
                    "description": "Provide distance in meters from the closest point on the roadway surface to the site reference point as part of site-specific metadata.",
                    "type": "string"
                },
                "elevationRoadway": {
                    "$reqId": "3.3.5.5.4.3.5.6",
                    "description": "Provide the difference in elevation between the center surface of the roadway and the site reference point in site-specific metadata information.",
                    "type": "string"
                },
                "jurisdiction": {
                    "$reqId": "3.3.5.5.4.3.5.7",
                    "description": "Provide the county or jurisdictional name of the site location in the site-specific metadata information",
                    "type": "string"
                },
                "state": {
                    "$reqId": "3.3.5.5.4.3.5.8",
                    "description": "Provide the state (2 letter postal ID) as part of site-specific metadata information",
                    "type": "string"
                },
                "country": {
                    "$reqId": "3.3.5.5.4.3.5.9",
                    "description": "Provide the country the site is located in as part of the site-specific metadata information",
                    "type": "string"
                },
                "accessDirections": {
                    "$reqId": "3.3.5.5.4.3.5.10",
                    "description": "Provide directions to access the site from a major roadway in site-specific metadata information",
                    "type": "string"
                },
                "siteRepresentativeness": {
                    "$reqId": "3.3.5.5.4.3.5.11",
                    "description": "Provide description of unique meteorological or topographical features as part of site-specific metadata",
                    "type": "string"
                },
                "siteObstructions": {
                    "$reqId": "3.3.5.5.4.3.5.12",
                    "description": "Provide description of physical properties affecting observation accuracy in site-specific metadata",
                    "type": "string"
                },
                "siteLandscape": {
                    "$reqId": "3.3.5.5.4.3.5.13",
                    "description": "Provide description of the landscape surrounding the site as part of site-specific metadata",
                    "type": "string"
                },
                "siteAccessControl": {
                    "$reqId": "3.3.5.5.4.3.5.14",
                    "description": "Indicate if access to the site is controlled in site-specific metadata information",
                    "type": "string"
                },
                "siteSlope": {
                    "$reqId": "3.3.5.5.4.3.5.15",
                    "description": "Provide the grade of the landscape surrounding the site as part of the site-specific metadata information",
                    "type": "string"
                },
                "siteGradeDirection": {
                    "$reqId": "3.3.5.5.4.3.5.16",
                    "description": "Provide the direction of the landscape grade in degrees from North as part of site-specific metadata.",
                    "type": "string"
                },
                "siteWindRoughness": {
                    "$reqId": "3.3.5.5.4.3.5.17",
                    "description": "Provide roughness of the wind in four directions as part of site-specific metadata",
                    "type": "string"
                },
                "siteSoilType": {
                    "$reqId": "3.3.5.5.4.3.5.18",
                    "description": "Provide type of soil as part of site-specific metadata information",
                    "type": "string"
                },
                "uniqueSiteIdentifier": {
                    "$reqId": "3.3.5.5.4.3.5.19",
                    "description": "Provide unique identifier of the site as part of site-specific metadata information",
                    "type": "string"
                }
            },
            "required": [
                "siteSpecificMetadataInformation"
            ]
        },
        "StationSpecificInformation": {
            "description": "Requirements for station specific metadata information in ESS metadata",
            "type": "object",
            "$reqId": "3.3.5.5.4.3.6",
            "properties": {
                "stationCategory": {
                    "$reqId": "3.3.5.5.4.3.6.1.a",
                    "description": "Category of the station (permanent, transportable, mobile, other)",
                    "type": "string",
                    "enum": [
                        "permanent",
                        "transportable",
                        "mobile",
                        "other"
                    ]
                },
                "stationId": {
                    "$reqId": "3.3.5.5.4.3.6.1.b",
                    "description": "Unique identifier for the station assigned by the owner organization",
                    "type": "string"
                },
                "geoLocation": {
                    "$reqId": "3.3.5.5.4.3.6.1.c",
                    "description": "Geographic coordinates of the station (longitude and latitude)",
                    "$ref": "#/$defs/GeoLocation"
                },
                "stationElevation": {
                    "$reqId": "3.3.5.5.4.3.6.1.d",
                    "description": "Elevation of the station base from mean sea level (meters)",
                    "type": "number"
                },
                "stationDescription": {
                    "$reqId": "3.3.5.5.4.3.6.2.1",
                    "description": "Provide a description of the station in station specific metadata information",
                    "type": "string"
                },
                "stationOperationType": {
                    "$reqId": "3.3.5.5.4.3.6.2.2",
                    "description": "Provide operation type of the station in station specific metadata information",
                    "type": "string"
                },
                "stationGeoCordinateReferencingModel": {
                    "$reqId": "3.3.5.5.4.3.6.2.3",
                    "description": "Provide the datum geocoordinate referencing model as part of station specific metadata information.",
                    "type": "string"
                },
                "stationPowerSource": {
                    "$reqId": "3.3.5.5.4.3.6.2.4",
                    "description": "Indicate the power source for the station as part of the station specific metadata information.",
                    "type": "string"
                },
                "doorStatus": {
                    "$reqId": "3.3.5.5.4.3.6.2.5",
                    "description": "Indicate if any doors attached to the station are open in the station specific metadata",
                    "type": "string"
                },
                "batteryStatus": {
                    "$reqId": "3.3.5.5.4.3.6.2.6",
                    "description": "Provide battery percentage as part of station specific metadata information",
                    "type": "string"
                },
                "lineVolts": {
                    "$reqId": "3.3.5.5.4.3.6.2.7",
                    "description": "Provide typical voltage for the power source in station specific metadata information",
                    "type": "string"
                },
                "stationMaintenanceGroupName": {
                    "$reqId": "3.3.5.5.4.3.6.2.8",
                    "description": "Provide a description of the maintenance group for the station in the station specific metadata information.",
                    "type": "string"
                },
                "preventiveMaintenanceInterval": {
                    "$reqId": "3.3.5.5.4.3.6.2.9",
                    "description": "Provide preventive maintenance frequency in days for the station as part of station specific metadata",
                    "type": "string"
                },
                "maintenanceCalibrationInterval": {
                    "$reqId": "3.3.5.5.4.3.6.2.10",
                    "description": "Provide calibration maintenance frequency description for the station in metadata information",
                    "type": "string"
                },
                "maintenanceStatus": {
                    "$reqId": "3.3.5.5.4.3.6.2.11",
                    "description": "Indicate the maintenance status of the station in station specific metadata information",
                    "type": "string"
                },
                "initialInstallationDate": {
                    "$reqId": "3.3.5.5.4.3.6.2.12",
                    "description": "Provide the date the station was initially installed as part of the station specific metadata information",
                    "$ref": "#/$defs/DateTime"
                },
                "numberDevices": {
                    "$reqId": "3.3.5.5.4.3.6.2.13",
                    "description": "Provide number of sensor interface devices supported by the station in station specific metadata information",
                    "type": "string"
                },
                "communicationsMethod": {
                    "$reqId": "3.3.5.5.4.3.6.2.14",
                    "description": "Provide method of communications to the station in station-specific metadata",
                    "type": "string"
                },
                "stationPhoneNumber": {
                    "$reqId": "3.3.5.5.4.3.6.2.15",
                    "description": "Provide telephone number for station contact in station specific metadata",
                    "type": "string"
                },
                "stationIpAddress": {
                    "$reqId": "3.3.5.5.4.3.6.2.16",
                    "description": "Provide IP address of the station in station specific metadata information",
                    "type": "string"
                },
                "stationManufacturer": {
                    "$reqId": "3.3.5.5.4.3.6.2.17",
                    "description": "Provide manufacturer information as part of station specific metadata for external center",
                    "type": "string"
                },
                "observationCollectionInterval": {
                    "$reqId": "3.3.5.5.4.3.6.2.18",
                    "description": "Provide frequency in minutes between collection cycles in station specific metadata information",
                    "type": "string"
                },
                "observationCollectionOffset": {
                    "$reqId": "3.3.5.5.4.3.6.2.19",
                    "description": "Provide the number of minutes after UTC midnight for the first collection in station specific metadata",
                    "type": "string"
                },
                "transmissionInterval": {
                    "$reqId": "3.3.5.5.4.3.6.2.20",
                    "description": "Provide transmission cycle frequency in minutes as part of station specific metadata information",
                    "type": "string"
                },
                "transmissionOffset": {
                    "$reqId": "3.3.5.5.4.3.6.2.21",
                    "description": "Provide the number of minutes after UTC midnight for the first transmission in station specific metadata",
                    "type": "string"
                },
                "transmissionFormat": {
                    "$reqId": "3.3.5.5.4.3.6.2.22",
                    "description": "Provide description of the transmission format from station to network data logger in station specific metadata information",
                    "type": "string"
                },
                "stationMaintenanceContactInformation": {
                    "$reqId": "3.3.5.5.4.3.6.2.23",
                    "description": "Provide the unique identifier of the default contact person as part of station specific metadata information.",
                    "type": "string"
                }
            },
            "required": [
                "stationCategory",
                "stationId",
                "geoLocation",
                "stationElevation"
            ]
        },
        "SubscriptionTypes": {
            "type": "string",
            "enum": [
                "one-time",
                "periodic",
                "on-change"
            ]
        },
        "SystemDescription": {
            "type": "object",
            "properties": {
                "manufacturer": {
                    "type": "string"
                },
                "modelNumber": {
                    "type": "number"
                },
                "firmware": {
                    "type": "string"
                },
                "firmwareVersion": {
                    "type": "string"
                }
            },
            "required": [
                "manufacturer",
                "modelNumber",
                "firmware",
                "firmwareVersion"
            ]
        },
        "TrafficNetworkInformationRequest": {
            "description": "Send a traffic network information request to the owner center",
            "type": "object",
            "$reqId": "3.3.4.1.1",
            "properties": {
                "requestingOrganizationId": {
                    "$reqId": "3.3.4.1.1.1.a",
                    "description": "Requesting organization information",
                    "type": "string"
                },
                "networkInformationType": {
                    "$reqId": "3.3.4.1.1.1.b",
                    "description": "Type of network information requested (inventory, status, data)",
                    "$ref": "#/$defs/NetworkInformationTypes"
                },
                "requestHeader": {
                    "$reqId": "3.3.4.1.1.2.1",
                    "description": "Optional requirements for authorization information in traffic network information requests",
                    "$ref": "#/$defs/AuthHeader"
                },
                "operatorId": {
                    "$reqId": "3.3.4.1.1.2.1.1",
                    "description": "Requirements for operator identifier from external center to owner center",
                    "type": "string"
                },
                "roadwayNetworkId": {
                    "$reqId": "3.3.4.1.1.2.2",
                    "description": "Provide unique identifiers for each roadway network in the traffic network information request",
                    "type": "string"
                },
                "trafficNetworkId": {
                    "$reqId": "3.3.4.1.1.2.3",
                    "description": "Provide a list of identifiers for traffic network information requests",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "requestingOrganizationId",
                "networkInformationType"
            ]
        },
        "VehicleInformation": {
            "type": "object",
            "properties": {
                "location": {
                    "$ref": "#/$defs/GeoLocation"
                },
                "speed": {
                    "type": "number"
                }
            },
            "required": [
                "location",
                "speed"
            ]
        },
        "VersionIdentifiers": {
            "type": "string",
            "enum": [
                "ngTMDD V1.0",
                "ngTMDD V1.1"
            ]
        }
    },
    "ActivityLogRequest": {
        "description": "Send an activity log request to an owner center",
        "type": "object",
        "$reqId": "3.3.3.9.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ActivityLogRequest"
            },
            "ownerOrganizationId": {
                "$reqId": "3.3.3.9.4.1.a",
                "description": "Information about owner organization",
                "type": "string"
            },
            "externalOrganizationId": {
                "$reqId": "3.3.3.9.4.1.b",
                "description": "Information about external organizations",
                "type": "string"
            },
            "requestId": {
                "$reqId": "3.3.3.9.4.1.c",
                "description": "Unique identifier for the request",
                "type": "string"
            },
            "authorizationInformation": {
                "$reqId": "3.3.3.9.4.2.1",
                "description": "Requirements for authorization information in activity log request",
                "$ref": "#/$defs/AuthHeader"
            },
            "requestTime": {
                "$reqId": "3.3.3.9.4.2.2",
                "description": "Include the time of the request in the activity log request",
                "$ref": "#/$defs/DateTime"
            }
        },
        "required": [
            "messageType",
            "ownerOrganizationId",
            "externalOrganizationId",
            "requestId"
        ]
    },
    "ActivityLogResponse": {
        "description": "Send activity logs to an external center containing events and event response information.",
        "type": "object",
        "$reqId": "3.3.3.9.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ActivityLogResponse"
            },
            "eventId": {
                "$reqId": "3.3.3.9.5.1.a",
                "description": "Unique identifier for the event",
                "type": "string"
            },
            "logId": {
                "$reqId": "3.3.3.9.5.1.b",
                "description": "Unique identifier for the activity log element",
                "type": "string"
            },
            "timestamp": {
                "$reqId": "3.3.3.9.5.1.c",
                "description": "Date and time identification",
                "$ref": "#/$defs/DateTime"
            },
            "activityType": {
                "$reqId": "3.3.3.9.5.1.d",
                "description": "Classification of activities such as system new, system update, system ended, user activity, and user pager activity.",
                "$ref": "#/$defs/ActivityTypes"
            },
            "changeDescription": {
                "$reqId": "3.3.3.9.5.1.e",
                "description": "Details regarding the modifications made",
                "type": "string"
            },
            "restrictions": {
                "$reqId": "3.3.3.9.5.2.1",
                "description": "Provide restrictions on the dissemination of information in the activity log",
                "$ref": "#/$defs/RestrictionTypes"
            },
            "responsePlanHeader": {
                "$reqId": "3.3.3.9.5.3.1.a",
                "description": "Header for the response plan",
                "$ref": "#/$defs/ResponsePlanHeader"
            },
            "responsePlanLogDetails": {
                "$reqId": "3.3.3.9.5.3.1.b",
                "description": "List of response plan activity log details",
                "$ref": "#/$defs/ResponsePlanActivityLogContent"
            }
        },
        "required": [
            "messageType",
            "eventId",
            "logId",
            "timestamp",
            "activityType",
            "changeDescription",
            "responsePlanHeader",
            "responsePlanLogDetails"
        ]
    },
    "CCTVChangeCancellationRequest": {
        "description": "CCTV change cancellation request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.3.5.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CCTVChangeCancellationRequest"
            },
            "deviceChangeRequestHeader": {
                "$reqId": "3.3.5.3.5.2.a",
                "description": "Generic cancel request for device change with device type set to 'cctv camera'",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeRequestHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "cctv camera"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeRequestHeader"
        ]
    },
    "CCTVChangeCancellationResponse": {
        "description": "Response to CCTV change cancellation request from external center shall include relevant information",
        "type": "object",
        "$reqId": "3.3.5.3.5.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CCTVChangeCancellationResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.3.5.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "cctv camera"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "CCTVChangeRequest": {
        "description": "Include type of request and requested value in CCTV change request",
        "type": "object",
        "$reqId": "3.3.5.3.3.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CCTVChangeRequest"
            },
            "deviceChangeRequest": {
                "$reqId": "3.3.5.3.3.2.a",
                "description": "Generic device change request header information for CCTV camera",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeRequestHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "cctv camera"
                            }
                        }
                    }
                ]
            },
            "requestType": {
                "$reqId": "3.3.5.3.3.2.b",
                "description": "Type of request for camera functions (preset, jog positioning, direction, focus, manual iris, environmental on/off, lock-for-the-camera, pan, tilt, zoom, text overlay)",
                "type": "string",
                "enum": [
                    "preset",
                    "jog positioning",
                    "direction",
                    "focus",
                    "manual iris",
                    "environmental on/off",
                    "lock-for-the-camera",
                    "pan",
                    "tilt",
                    "zoom",
                    "text overlay"
                ]
            },
            "requestValue": {
                "$reqId": "3.3.5.3.3.2.c",
                "description": "Value that is being requested",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "deviceChangeRequest",
            "requestType",
            "requestValue"
        ]
    },
    "CCTVChangeResponse": {
        "description": "Include details in the owner center response to CCTV change request from an external center",
        "type": "object",
        "$reqId": "3.3.5.3.3.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CCTVChangeResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.3.3.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "cctv camera"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "CCTVChangeStatusRequest": {
        "description": "Include CCTV change status request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.3.4.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CCTVChangeStatusRequest"
            },
            "deviceChangeStatusRequest": {
                "$reqId": "3.3.5.3.4.2.a",
                "description": "Generic device change status request for CCTV camera",
                "$ref": "#/$defs/DeviceChangeStatusRequest"
            }
        },
        "required": [
            "messageType",
            "deviceChangeStatusRequest"
        ]
    },
    "CCTVChangeStatusResponse": {
        "description": "Include response details for CCTV change status request",
        "type": "object",
        "$reqId": "3.3.5.3.4.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CCTVChangeStatusResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.3.4.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "cctv camera"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "CCTVControlCommandRequest": {
        "description": "Include type of command and control command value in CCTV control command",
        "type": "object",
        "$reqId": "3.3.5.3.7.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CCTVControlCommandRequest"
            },
            "deviceControlCommand": {
                "$reqId": "3.3.5.3.7.2.a",
                "description": "Generic device control command information for CCTV camera",
                "allOf": [
                    {
                        "$ref": "#/$defs/ExternalDeviceControlRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "cctv camera"
                            }
                        }
                    }
                ]
            },
            "commandType": {
                "$reqId": "3.3.5.3.7.2.b",
                "description": "Various command types for camera operation and control",
                "$ref": "#/$defs/DeviceControlCommandTypes"
            },
            "controlCommandValue": {
                "$reqId": "3.3.5.3.7.2.c",
                "description": "Value representing a control command",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "deviceControlCommand",
            "commandType",
            "controlCommandValue"
        ]
    },
    "CCTVControlCommandResponse": {
        "description": "Response to CCTV control command from external center",
        "type": "object",
        "$reqId": "3.3.5.3.7.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CCTVControlCommandResponse"
            },
            "deviceControlResponse": {
                "$reqId": "3.3.5.3.7.3.a",
                "description": "Response information for generic device control commands",
                "$ref": "#/$defs/ExternalDeviceControlCommandResponse"
            }
        },
        "required": [
            "messageType",
            "deviceControlResponse"
        ]
    },
    "CCTVImageLinkRequest": {
        "description": "Include CCTV device identifier and type of image requested in CCTV request from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.3.6.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CCTVImageLinkRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.3.6.4.a",
                "description": "Generic device information request for CCTV camera with image link type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "cctv camera"
                            },
                            "deviceInformationType": {
                                "const": "image link"
                            }
                        }
                    }
                ]
            },
            "cctvId": {
                "$reqId": "3.3.5.3.6.4.b",
                "description": "Unique identifier for the CCTV device",
                "type": "string"
            },
            "imageType": {
                "$reqId": "3.3.5.3.6.4.c",
                "description": "Type of image requested (snapshot, suppressed stream, unsuppressed stream)",
                "type": "string",
                "enum": [
                    "snapshot",
                    "suppressed stream",
                    "unsuppressed stream"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest",
            "cctvId",
            "imageType"
        ]
    },
    "CCTVImageLinkRequestResponse": {
        "description": "Include type of image and URL in CCTV inventory information",
        "type": "object",
        "$reqId": "3.3.5.3.6.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CCTVImageLinkRequestResponse"
            },
            "deviceInventoryHeader": {
                "$reqId": "3.3.5.3.6.5.a",
                "description": "Generic device inventory header information",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "imageType": {
                "$reqId": "3.3.5.3.6.5.b",
                "description": "Type of image provided (snapshot, suppressed stream, unsuppressed stream)",
                "type": "string",
                "enum": [
                    "snapshot",
                    "suppressed stream",
                    "unsuppressed stream"
                ]
            },
            "imageURL": {
                "$reqId": "3.3.5.3.6.5.c",
                "description": "URL to the provided image",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "deviceInventoryHeader",
            "imageType",
            "imageURL"
        ]
    },
    "CCTVInventoryInformationRequest": {
        "description": "Include CCTV inventory information request details in communication from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.3.1.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CCTVInventoryInformationRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.3.1.4.a",
                "description": "Generic device information request for CCTV camera with device inventory type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "cctv camera"
                            },
                            "deviceInformationType": {
                                "const": "device inventory"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "CCTVInventoryInformationResponse": {
        "description": "CCTV inventory information for the owner center to send to an external center",
        "type": "object",
        "$reqId": "3.3.5.3.1.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CCTVInventoryInformationResponse"
            },
            "deviceInventoryHeader": {
                "$reqId": "3.3.5.3.1.5.1.a",
                "description": "Generic device inventory header information",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "cctvRequestsSupportedList": {
                "$reqId": "3.3.5.3.1.5.1.b",
                "description": "Types of requests supported for CCTV devices",
                "type": "string",
                "enum": [
                    "preset",
                    "jog positioning",
                    "direction",
                    "focus",
                    "manual iris",
                    "environmental (wipers) on/off",
                    "lock-for-the-camera",
                    "pan",
                    "tilt",
                    "zoom",
                    "text overlay"
                ]
            },
            "cctvImageList": {
                "$reqId": "3.3.5.3.1.5.1.c",
                "description": "List of supported image types for CCTV devices and environmental requests",
                "type": "string",
                "enum": [
                    "JPEG",
                    "TIFF",
                    "MPEG",
                    "NTSC",
                    "PAL",
                    "SECAM",
                    "HDTV",
                    "ATSC",
                    "MJPEG",
                    "Other"
                ]
            },
            "textInsertion": {
                "$reqId": "3.3.5.3.1.5.2.1",
                "description": "Provide titling text on camera images as part of CCTV inventory information",
                "type": "string"
            },
            "cameraType": {
                "$reqId": "3.3.5.3.1.5.2.2",
                "description": "Provide type of CCTV camera in inventory information, including black & white and color options.",
                "type": "string",
                "enum": [
                    "black & white",
                    "color"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInventoryHeader",
            "cctvRequestsSupportedList",
            "cctvImageList"
        ]
    },
    "CCTVStatusRequest": {
        "description": "Include CCTV status request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.3.2.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CCTVStatusRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.3.2.4.a",
                "description": "Generic device information request for CCTV camera with device status",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "cctv camera"
                            },
                            "deviceInformationType": {
                                "const": "device status"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "CCTVStatusResponse": {
        "description": "CCTV status information for owner center to send to external center",
        "type": "object",
        "$reqId": "3.3.5.3.2.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CCTVStatusResponse"
            },
            "deviceStatusHeader": {
                "$reqId": "3.3.5.3.2.5.1.a",
                "description": "Generic device status header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceStatusHeader"
                    },
                    {
                        "properties": {
                            "deviceStatuses": {
                                "items": {
                                    "allOf": [
                                        {
                                            "$ref": "#/$defs/DeviceStatus"
                                        },
                                        {
                                            "properties": {
                                                "deviceType": {
                                                    "const": "cctv camera"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "cctvError": {
                "$reqId": "3.3.5.3.2.5.2.1",
                "description": "Indicate the type of error experienced by the CCTV in the status information",
                "type": "string",
                "enum": [
                    "communications error",
                    "power failure",
                    "device error",
                    "controller error"
                ]
            },
            "cctvFormat": {
                "$reqId": "3.3.5.3.2.5.2.2",
                "description": "Provide the current format of CCTV images as part of the CCTV status information",
                "type": "string",
                "enum": [
                    "JPEG",
                    "TIFF",
                    "MPEG",
                    "NTSC",
                    "PAL",
                    "SECAM",
                    "HDTV",
                    "ATSC",
                    "MJPEG",
                    "other"
                ]
            },
            "cctvPresetPosition": {
                "$reqId": "3.3.5.3.2.5.2.3",
                "description": "Provide the value of the preset position in CCTV status information if it exists",
                "type": "string"
            },
            "cctvPanPosition": {
                "$reqId": "3.3.5.3.2.5.2.4",
                "description": "Provide the current pan position of the CCTV device in 1/100th degree units as part of the CCTV status information.",
                "type": "string"
            },
            "cctvTiltPosition": {
                "$reqId": "3.3.5.3.2.5.2.5",
                "description": "Provide current tilt position of CCTV in 1/100th degree units as part of CCTV status information",
                "type": "string"
            },
            "cctvZoomPosition": {
                "$reqId": "3.3.5.3.2.5.2.6",
                "description": "Provide current zoom position of the CCTV device as part of CCTV status information",
                "type": "string"
            },
            "cctvIrisPosition": {
                "$reqId": "3.3.5.3.2.5.2.7",
                "description": "Provide current iris position of the CCTV device as part of CCTV status information",
                "type": "string"
            },
            "cctvFocusPosition": {
                "$reqId": "3.3.5.3.2.5.2.8",
                "description": "Provide the current focus position of the CCTV device as part of the CCTV status information",
                "type": "string"
            },
            "cameraEnvFeaturesStatus": {
                "$reqId": "3.3.5.3.2.5.2.9",
                "description": "Provide the status of environmental features for each CCTV as part of the CCTV status information",
                "type": "string",
                "enum": [
                    "status: on",
                    "off",
                    "unknown Environmental features: camera power",
                    "heater power",
                    "wiper",
                    "washer",
                    "blower"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceStatusHeader"
        ]
    },
    "CenterConnectionRequest": {
        "description": "Send a center connection information request to an owner center",
        "type": "object",
        "$reqId": "3.3.1.1.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CenterConnectionRequest"
            },
            "externalOrganizationId": {
                "$reqId": "3.3.1.1.4.1",
                "description": "Include requesting organization information in the center connection information request",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "externalOrganizationId"
        ]
    },
    "CenterConnectionResponse": {
        "description": "Send center connection information to external centers",
        "type": "object",
        "$reqId": "3.3.1.1.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CenterConnectionResponse"
            },
            "ownerOrganizationId": {
                "$reqId": "3.3.1.1.5.1.a",
                "description": "Owner organization information details",
                "type": "string"
            },
            "centerName": {
                "$reqId": "3.3.1.1.5.1.b",
                "description": "Name assigned to the center by the owner organization",
                "type": "string"
            },
            "centerId": {
                "$reqId": "3.3.1.1.5.1.c",
                "description": "Unique identifier for the center assigned by the owner organization",
                "type": "string"
            },
            "isActive": {
                "$reqId": "3.3.1.1.5.1.d",
                "description": "Indicate active center connection status",
                "type": "boolean"
            },
            "connectionTypesSupported": {
                "$reqId": "3.3.1.1.5.1.e",
                "description": "List of connection types supported by the center",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "restrictions": {
                "$reqId": "3.3.1.1.5.2.1",
                "description": "Owner center may place restrictions on information dissemination to external centers",
                "$ref": "#/$defs/Restrictions"
            },
            "versionIdentifier": {
                "$reqId": "3.3.1.1.5.2.2",
                "description": "Indicate the version of the ngTMDD data dictionary standard for system compliance",
                "$ref": "#/$defs/VersionIdentifiers"
            },
            "rateOfCommunication": {
                "$reqId": "3.3.1.1.5.2.3",
                "description": "Provide frequency of communication updates as part of the connection",
                "type": "number"
            }
        },
        "required": [
            "messageType",
            "ownerOrganizationId",
            "centerName",
            "centerId",
            "isActive",
            "connectionTypesSupported"
        ]
    },
    "ConfirmationReceipts": {
        "description": "Send a confirmation receipt for response message receipt",
        "type": "object",
        "$reqId": "3.3.1.6.1",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ConfirmationReceipts"
            },
            "organization": {
                "$reqId": "3.3.1.6.1.1.a",
                "description": "Information about the organization that operates the center",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "organizationCenterName": {
                "$reqId": "3.3.1.6.1.1.b",
                "description": "Assigned name of the center by the owner organization",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "organization",
            "organizationCenterName"
        ]
    },
    "CurrentlyActiveSubscriptionsRequest": {
        "description": "Request a list of all active subscriptions, including sending and receiving, from another center.",
        "type": "object",
        "$reqId": "3.3.1.5.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CurrentlyActiveSubscriptionsRequest"
            },
            "organizationId": {
                "$reqId": "3.3.1.5.4.1.a",
                "description": "Information about the requesting organization",
                "type": "string"
            },
            "authentication": {
                "$reqId": "3.3.1.5.4.1.b",
                "description": "Authentication details for secure access",
                "$ref": "#/$defs/AuthHeader"
            },
            "startDate": {
                "$reqId": "3.3.1.5.4.1.c",
                "description": "Start date and time for failed subscription reporting",
                "$ref": "#/$defs/DateTime"
            }
        },
        "required": [
            "messageType",
            "organizationId",
            "authentication",
            "startDate"
        ]
    },
    "CurrentlyActiveSubscriptionsResponse": {
        "description": "Send a list of active subscriptions and failed subscriptions after initiation.",
        "type": "object",
        "$reqId": "3.3.1.5.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "CurrentlyActiveSubscriptionsResponse"
            },
            "centerName": {
                "$reqId": "3.3.1.5.5.1.a",
                "description": "Name of the center assigned by the owner organization",
                "type": "string"
            },
            "organizationId": {
                "$reqId": "3.3.1.5.5.1.b",
                "description": "Unique identifier for the center assigned by the owner organization or regional agreement",
                "type": "string"
            },
            "activeSubscriptionSendingDataList": {
                "$reqId": "3.3.1.5.5.1.c",
                "description": "List of active subscriptions sending data to the requesting center including details such as subscription request dialog, data update dialog, data types, subscription type, subscription parameters, and subscription identifier.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "activeSubscriptionsReceivingDataList": {
                "$reqId": "3.3.1.5.5.1.d",
                "description": "List of active subscriptions receiving data from the requesting center, including subscription request dialog, data update dialog, data types, subscription type, subscription parameter list, and subscription identifier.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "subscriptionUpdateSourceEndpoint": {
                "$reqId": "3.3.1.5.5.2.1",
                "description": "Send the subscription update source endpoint to identify the source of subscription data",
                "type": "string"
            },
            "ownerCenterSubscriptionRequestEndpoint": {
                "$reqId": "3.3.1.5.5.2.2",
                "description": "Send the subscription request endpoint to the receiving center with source identification information",
                "type": "string"
            },
            "subscriptionUpdateTargetEndpoint": {
                "$reqId": "3.3.1.5.5.2.3",
                "description": "Send subscription update target endpoint information to receiving center",
                "type": "string"
            },
            "subscriptionName": {
                "$reqId": "3.3.1.5.5.2.4",
                "description": "Send a subscription name to the receiving center",
                "type": "string"
            },
            "subscriptionRequestReceivedDateTime": {
                "$reqId": "3.3.1.5.5.2.5",
                "description": "Send the date and time of the subscription request to the receiving center",
                "$ref": "#/$defs/DateTime"
            },
            "subscriptionFirstMessageSentDateTime": {
                "$reqId": "3.3.1.5.5.2.6",
                "description": "Send the date and time of the first subscription message to the receiving center",
                "$ref": "#/$defs/DateTime"
            },
            "mostRecentUpdateMessageSendDateTime": {
                "$reqId": "3.3.1.5.5.2.7",
                "description": "Send the date and time of the most recent subscription update to the receiving center.",
                "$ref": "#/$defs/DateTime"
            },
            "mostRecentUpdateMessageSize": {
                "$reqId": "3.3.1.5.5.2.8",
                "description": "Send the size in bytes of the most recent subscription update",
                "type": "number"
            },
            "totalNumberMessagesSent": {
                "$reqId": "3.3.1.5.5.2.9",
                "description": "Send the total number of subscription messages within a specified time interval",
                "type": "number"
            },
            "timeIntervalTotalNumberMessagesSent": {
                "$reqId": "3.3.1.5.5.2.10",
                "description": "Send time interval for total number of subscription messages",
                "type": "number"
            },
            "listErrorsEncountered": {
                "$reqId": "3.3.1.5.5.2.11",
                "description": "Send a list of errors encountered for subscription messages within a specified time interval",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "timeIntervalListErrors": {
                "$reqId": "3.3.1.5.5.2.12",
                "description": "Send the time interval for the list of errors encountered to the receiving center",
                "type": "number"
            },
            "ListCurrentlyFailedSubscriptionsContent": {
                "$ref": "#/$defs/ListCurrentlyFailedSubscriptionsContent"
            }
        },
        "required": [
            "messageType",
            "centerName",
            "organizationId",
            "activeSubscriptionSendingDataList",
            "activeSubscriptionsReceivingDataList"
        ]
    },
    "DMSChangeCancellationRequest": {
        "description": "DMS change cancellation request details from external to owner center",
        "type": "object",
        "$reqId": "3.3.5.4.5.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSChangeCancellationRequest"
            },
            "deviceChangeCancellationRequest": {
                "$reqId": "3.3.5.4.5.2.a",
                "description": "Generic cancel device change request for dynamic message sign",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeCancellationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeCancellationRequest"
        ]
    },
    "DMSChangeCancellationResponse": {
        "description": "Include owner center response to DMS change cancellation request",
        "type": "object",
        "$reqId": "3.3.5.4.5.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSChangeCancellationResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.4.5.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "DMSChangeRequest": {
        "description": "Include requested message in MULTI language in DMS change request",
        "type": "object",
        "$reqId": "3.3.5.4.3.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSChangeRequest"
            },
            "deviceChangeRequestHeader": {
                "$reqId": "3.3.5.4.3.2.a",
                "description": "Generic device change request header information for dynamic message sign",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeRequestHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            }
                        }
                    }
                ]
            },
            "messageCommandType": {
                "$reqId": "3.3.5.4.3.2.b",
                "description": "Types of message commands (custom, library, remove)",
                "type": "string",
                "enum": [
                    "custom message",
                    "library message",
                    "remove message"
                ]
            },
            "messageRequested": {
                "$reqId": "3.3.5.4.3.2.c",
                "description": "Message requested in multiple languages",
                "type": "string"
            },
            "messageNumber": {
                "$reqId": "3.3.5.4.3.2.d",
                "description": "Message number, memory type (permanent, changeable, volatile), and CRC of the requested message.",
                "type": "number"
            },
            "memoryType": {
                "$reqId": "3.3.5.4.3.2.e",
                "type": "string",
                "enum": [
                    "permanent",
                    "changeable",
                    "volatile"
                ]
            },
            "messageCRC": {
                "$reqId": "3.3.5.4.3.2.f",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "deviceChangeRequestHeader",
            "messageCommandType",
            "messageRequested",
            "messageNumber",
            "memoryType",
            "messageCRC"
        ]
    },
    "DMSChangeResponse": {
        "description": "Owner center response to DMS change request must include specific information",
        "type": "object",
        "$reqId": "3.3.5.4.3.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSChangeResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.4.3.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "DMSChangeStatusRequest": {
        "description": "Include required information in the DMS change status request sent from an external center to an owner center.",
        "type": "object",
        "$reqId": "3.3.5.4.4.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSChangeStatusRequest"
            },
            "deviceChangeStatusRequest": {
                "$reqId": "3.3.5.4.4.2.a",
                "description": "Request for generic device change status with device type set to 'dynamic message sign'",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeStatusRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeStatusRequest"
        ]
    },
    "DMSChangeStatusResponse": {
        "description": "Owner center response to DMS change status request must include specific information.",
        "type": "object",
        "$reqId": "3.3.5.4.4.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSChangeStatusResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.4.4.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "DMSControlCommandRequest": {
        "description": "Content of DMS command sent from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.4.11.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSControlCommandRequest"
            },
            "deviceControlCommandHeader": {
                "$reqId": "3.3.5.4.11.2.1.a",
                "description": "Generic device control command header information for dynamic message sign",
                "allOf": [
                    {
                        "$ref": "#/$defs/ExternalDeviceControlRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            }
                        }
                    }
                ]
            },
            "messageCommandType": {
                "$reqId": "3.3.5.4.11.2.1.b",
                "description": "Type of message command (custom, library, remove)",
                "type": "string",
                "enum": [
                    "custom message",
                    "library message",
                    "remove message"
                ]
            },
            "messageRequestedMultiLanguage": {
                "$reqId": "3.3.5.4.11.2.1.c",
                "description": "Message requested in multiple languages",
                "type": "string"
            },
            "messageNumber": {
                "$reqId": "3.3.5.4.11.2.1.d",
                "description": "Message number, memory type (permanent, changeable, volatile), and CRC of the requested message",
                "type": "number"
            },
            "memoryType": {
                "$reqId": "3.3.5.4.11.2.1.e",
                "type": "string",
                "enum": [
                    "permanent",
                    "changeable",
                    "volatile"
                ]
            },
            "messageCrc": {
                "$reqId": "3.3.5.4.11.2.1.f",
                "type": "string"
            },
            "beaconControl": {
                "$reqId": "3.3.5.4.11.2.2.1",
                "description": "Indicate if the beacon is to be enabled or disabled in the DMS control command",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "deviceControlCommandHeader",
            "messageCommandType",
            "messageRequestedMultiLanguage",
            "messageNumber"
        ]
    },
    "DMSControlCommandResponse": {
        "description": "Include a response to a DMS control command from an external center",
        "type": "object",
        "$reqId": "3.3.5.4.11.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSControlCommandResponse"
            },
            "deviceControlCommandResponse": {
                "$reqId": "3.3.5.4.11.3.a",
                "description": "Response information for generic device control commands",
                "$ref": "#/$defs/ExternalDeviceControlCommandResponse"
            }
        },
        "required": [
            "messageType",
            "deviceControlCommandResponse"
        ]
    },
    "DMSFontTableRequest": {
        "description": "Contents of a DMS Font Table request from an external center to an owner center",
        "type": "object",
        "$reqId": "3.3.5.4.8.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSFontTableRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.4.8.2.1.a",
                "description": "Generic device information request for dynamic message sign with device font table type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            },
                            "deviceInformationType": {
                                "const": "device font table"
                            }
                        }
                    }
                ]
            },
            "dMSFontId": {
                "$reqId": "3.3.5.4.8.2.2.1",
                "description": "Provide the font number desired in the DMS font table request for each DMS",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "DMSFontTableResponse": {
        "description": "DMS Font Table information for owner center to send to external center",
        "type": "object",
        "$reqId": "3.3.5.4.8.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSFontTableResponse"
            },
            "deviceInventoryHeader": {
                "$reqId": "3.3.5.4.8.3.1.a",
                "description": "Generic device inventory header information",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "fontNumber ": {
                "$reqId": "3.3.5.4.8.3.1.b",
                "description": "Font identification number for each font",
                "type": "string"
            },
            "defaultFontNumber ": {
                "$reqId": "3.3.5.4.8.3.1.c",
                "description": "Font number for the default font",
                "type": "string"
            },
            "fontHeight": {
                "$reqId": "3.3.5.4.8.3.1.d",
                "description": "Font height in pixels for each font",
                "type": "string"
            },
            "fontCharacterSpacing ": {
                "$reqId": "3.3.5.4.8.3.1.e",
                "description": "Font character spacing in pixels for each font",
                "type": "string"
            },
            "fontLineSpacing": {
                "$reqId": "3.3.5.4.8.3.1.f",
                "description": "Font line spacing in pixels for each font",
                "type": "string"
            },
            "fontVersionId": {
                "$reqId": "3.3.5.4.8.3.1.g",
                "description": "Font version identifier for each font",
                "type": "string"
            },
            "fontState": {
                "$reqId": "3.3.5.4.8.3.1.h",
                "description": "State of each font",
                "type": "string"
            },
            "characterNumber ": {
                "$reqId": "3.3.5.4.8.3.1.i",
                "description": "Character number for each font",
                "type": "string"
            },
            "characterWidth ": {
                "$reqId": "3.3.5.4.8.3.1.j",
                "description": "Character width in pixels for each font",
                "type": "string"
            },
            "characterBitmap": {
                "$reqId": "3.3.5.4.8.3.1.k",
                "description": "Character bitmap for each font",
                "type": "string"
            },
            "fontTableDateTimeChangeInformation": {
                "$reqId": "3.3.5.4.8.3.2.1",
                "description": "Provide the date and time of the last change to the font table as part of the DMS font table information.",
                "$ref": "#/$defs/DateTime"
            }
        },
        "required": [
            "messageType",
            "deviceInventoryHeader",
            "fontNumber ",
            "defaultFontNumber ",
            "fontHeight",
            "fontCharacterSpacing ",
            "fontLineSpacing",
            "fontVersionId",
            "fontState",
            "characterNumber ",
            "characterWidth ",
            "characterBitmap"
        ]
    },
    "DMSGraphicTableRequest": {
        "description": "Include DMS graphic table request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.4.10.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSGraphicTableRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.4.10.2.a",
                "description": "Request for generic device information request with device type set to 'dynamic message sign' and device information type set to 'device graphic table'",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            },
                            "deviceInformationType": {
                                "const": "device graphic table"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "DMSGraphicTableResponse": {
        "description": "DMS Graphic Table information for external center request",
        "type": "object",
        "$reqId": "3.3.5.4.10.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSGraphicTableResponse"
            },
            "ownerOrganization": {
                "$reqId": "3.3.5.4.10.3.1.a",
                "description": "Information about the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "deviceId": {
                "$reqId": "3.3.5.4.10.3.1.b",
                "description": "Unique identifier for each device",
                "type": "string"
            },
            "graphicNumber": {
                "$reqId": "3.3.5.4.10.3.1.c",
                "description": "Unique identifier for each graphic",
                "type": "string"
            },
            "graphicName": {
                "$reqId": "3.3.5.4.10.3.1.d",
                "description": "Name of each graphic",
                "type": "string"
            },
            "graphicHeight": {
                "$reqId": "3.3.5.4.10.3.1.e",
                "description": "Height of each graphic in pixels",
                "type": "string"
            },
            "graphicWidth": {
                "$reqId": "3.3.5.4.10.3.1.f",
                "description": "Width of each graphic in pixels",
                "type": "string"
            },
            "graphicType": {
                "$reqId": "3.3.5.4.10.3.1.g",
                "description": "Type of each graphic",
                "type": "string"
            },
            "graphicId": {
                "$reqId": "3.3.5.4.10.3.1.h",
                "description": "Unique identifier for each graphic",
                "type": "string"
            },
            "graphicSpacing": {
                "$reqId": "3.3.5.4.10.3.1.i",
                "description": "Font line spacing measurement in pixels for each font",
                "type": "string"
            },
            "graphicColor": {
                "$reqId": "3.3.5.4.10.3.1.j",
                "description": "Specify if the graphic has a transparent color and identify the color.",
                "type": "string"
            },
            "graphicState": {
                "$reqId": "3.3.5.4.10.3.1.k",
                "description": "State of each graphic",
                "type": "string"
            },
            "graphicTableDateTimeChangeInformation": {
                "$reqId": "3.3.5.4.10.3.2.1",
                "description": "Provide date and time of last graphics table change as part of DMS graphic table information.",
                "$ref": "#/$defs/DateTime"
            },
            "graphicTableBitmap": {
                "$reqId": "3.3.5.4.10.3.2.2",
                "description": "Provide bitmap for each graphic in the graphics table as part of DMS graphic table information.",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "ownerOrganization",
            "deviceId",
            "graphicNumber",
            "graphicName",
            "graphicHeight",
            "graphicWidth",
            "graphicType",
            "graphicId",
            "graphicSpacing",
            "graphicColor",
            "graphicState"
        ]
    },
    "DMSInventoryRequest": {
        "description": "Include DMS inventory information request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.4.1.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSInventoryRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.4.1.4.a",
                "description": "Generic device information request for dynamic message sign device inventory",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            },
                            "deviceInformationType": {
                                "const": "device inventory"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "DMSInventoryResponse": {
        "description": "DMS inventory information to send from owner center to external center",
        "type": "object",
        "$reqId": "3.3.5.4.1.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSInventoryResponse"
            },
            "deviceInventoryHeader": {
                "$reqId": "3.3.5.4.1.5.1.a",
                "description": "Generic device inventory header information",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "signType": {
                "$reqId": "3.3.5.4.1.5.1.b",
                "description": "Sign type for each device, including various categories such as BOS, CMS, VMSChar, VMSLine, VMSFull, and portable versions.",
                "type": "string",
                "enum": [
                    "BOS",
                    "CMS",
                    "vmsChar",
                    "vmsLine",
                    "vmsFull",
                    "portable BOS",
                    "portable CMS",
                    "portablevmsChar",
                    "portable vmsLine",
                    "portable vmsFull",
                    "other",
                    "portable other"
                ]
            },
            "signTechnology": {
                "$reqId": "3.3.5.4.1.5.2.1",
                "description": "Provide sign technology details for each DMS in the inventory, including supported values such as LED, flip-disk, fiber optic, shuttered, bulb, drum, other, and unknown.",
                "type": "string",
                "enum": [
                    "LED",
                    "flip-disk",
                    "fiber optic",
                    "shuttered",
                    "bulb",
                    "drum",
                    "other",
                    "unknown"
                ]
            },
            "signPixelHeight": {
                "$reqId": "3.3.5.4.1.5.2.2",
                "description": "Provide the pixel height of the DMS face in the inventory information for each DMS.",
                "type": "string"
            },
            "signPixelWidth": {
                "$reqId": "3.3.5.4.1.5.2.3",
                "description": "Provide pixel width of the DMS face in DMS inventory information",
                "type": "string"
            },
            "signHeight": {
                "$reqId": "3.3.5.4.1.5.2.4",
                "description": "Provide the height of the DMS face in millimeters as part of the DMS inventory information",
                "type": "string"
            },
            "signWidth": {
                "$reqId": "3.3.5.4.1.5.2.5",
                "description": "Provide the width of the DMS face in millimeters as part of DMS inventory information",
                "type": "string"
            },
            "characterPixelHeight": {
                "$reqId": "3.3.5.4.1.5.2.6",
                "description": "Provide character pixel height of the DMS in inventory information",
                "type": "string"
            },
            "characterPixelWidth": {
                "$reqId": "3.3.5.4.1.5.2.7",
                "description": "Provide the character pixel width of the DMS in the DMS inventory information",
                "type": "string"
            },
            "dmsBeaconType": {
                "$reqId": "3.3.5.4.1.5.2.8",
                "description": "Provide beacon type supported by the DMS in inventory information",
                "type": "string",
                "enum": [
                    "none",
                    "one beacon",
                    "two beacon sync flash",
                    "two beacon opposed flash",
                    "four beacon sync flash",
                    "four beacon alternate row flash",
                    "four beacon alternate column flash",
                    "four beacon alternate diagonal flash",
                    "four beacon no sync",
                    "one beacon strobe",
                    "two beacon strobe",
                    "four beacon strobe",
                    "other"
                ]
            },
            "verticalBorder": {
                "$reqId": "3.3.5.4.1.5.2.9",
                "description": "Provide the vertical border dimensions in millimeters for each DMS in the inventory",
                "type": "string"
            },
            "horizontalBorder": {
                "$reqId": "3.3.5.4.1.5.2.10",
                "description": "Provide the horizontal border in millimeters around the DMS face as part of the DMS inventory information.",
                "type": "string"
            },
            "signVerticalPixelPitch": {
                "$reqId": "3.3.5.4.1.5.2.11",
                "description": "Provide vertical distance (pixel spacing) between pixel centers in millimeters for DMS inventory.",
                "type": "string"
            },
            "signHorizontalPixelPitch": {
                "$reqId": "3.3.5.4.1.5.2.12",
                "description": "Provide horizontal distance in millimeters between the center of one pixel and the center of the neighboring pixel as part of DMS inventory information.",
                "type": "string"
            },
            "maximumNumberPages": {
                "$reqId": "3.3.5.4.1.5.2.13",
                "description": "Provide the maximum number of pages supported for a single message in DMS inventory information",
                "type": "string"
            },
            "maximumMessageLength": {
                "$reqId": "3.3.5.4.1.5.2.14",
                "description": "Provide the maximum length for a single message in DMS inventory information",
                "type": "string"
            },
            "colorScheme": {
                "$reqId": "3.3.5.4.1.5.2.15",
                "description": "Provide supported color scheme for each DMS in inventory information",
                "type": "string",
                "enum": [
                    "monochrome1bit",
                    "monochrome8bit",
                    "colorClassic",
                    "color24bit"
                ]
            },
            "multiTagsSupported": {
                "$reqId": "3.3.5.4.1.5.2.16",
                "description": "Provide MULTI tag information for DMS inventory",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "deviceInventoryHeader",
            "signType"
        ]
    },
    "DMSMessageAppearanceRequest": {
        "description": "Include DMS message appearance request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.4.6.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSMessageAppearanceRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.4.6.2.a",
                "description": "Request generic device information for dynamic message signs, specifying message appearance and device identifier.",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            },
                            "deviceInformationType": {
                                "const": "message appearance"
                            }
                        }
                    }
                ]
            },
            "messageRequested": {
                "$reqId": "3.3.5.4.6.2.b",
                "description": "Message requested in multiple languages",
                "type": "string"
            },
            "messageNumber": {
                "$reqId": "3.3.5.4.6.2.c",
                "description": "Message number, memory type and CRC of the requested message",
                "type": "number"
            },
            "memoryType": {
                "$reqId": "3.3.5.4.6.2.d",
                "description": "Current status of the message flag",
                "type": "string",
                "enum": [
                    "permanent",
                    "changeable",
                    "volatile"
                ]
            },
            "messageCrc": {
                "$reqId": "3.3.5.4.6.2.e",
                "type": "string"
            },
            "messageFlag": {
                "$reqId": "3.3.5.4.6.2.f",
                "type": "boolean"
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest",
            "messageRequested",
            "messageNumber",
            "messageFlag"
        ]
    },
    "DMSMessageAppearanceResponse": {
        "description": "DMS message appearance information for communication between owner center and external center",
        "type": "object",
        "$reqId": "3.3.5.4.6.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSMessageAppearanceResponse"
            },
            "ownerOrganization": {
                "$reqId": "3.3.5.4.6.3.1.a",
                "description": "Information regarding the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "deviceId": {
                "$reqId": "3.3.5.4.6.3.1.b",
                "description": "Unique identifier for each DMS device",
                "type": "string"
            },
            "dmsSignType": {
                "$reqId": "3.3.5.4.6.3.1.c",
                "description": "Sign type for each DMS device",
                "type": "string"
            },
            "signHeightInPixels": {
                "$reqId": "3.3.5.4.6.3.2.a",
                "description": "Height of the sign in pixels",
                "type": "number"
            },
            "signWidthInPixels": {
                "$reqId": "3.3.5.4.6.3.2.b",
                "description": "Width of the sign specified in pixels",
                "type": "number"
            },
            "signHeight": {
                "$reqId": "3.3.5.4.6.3.2.c",
                "description": "Height of the sign",
                "type": "number"
            },
            "signWidth": {
                "$reqId": "3.3.5.4.6.3.2.d",
                "description": "Weight of the sign",
                "type": "number"
            },
            "characterPixelHeight": {
                "$reqId": "3.3.5.4.6.3.2.e",
                "description": "Height of the character pixels",
                "type": "string"
            },
            "characterPixelWidth": {
                "$reqId": "3.3.5.4.6.3.2.f",
                "description": "Width of a character in pixels",
                "type": "string"
            },
            "signVerticalBorder": {
                "$reqId": "3.3.5.4.6.3.2.g",
                "description": "Vertical boundary for signage",
                "type": "string"
            },
            "signHorizontalBorder": {
                "$reqId": "3.3.5.4.6.3.2.h",
                "description": "Sign indicating horizontal border",
                "type": "string"
            },
            "signVerticalPixelPitch": {
                "$reqId": "3.3.5.4.6.3.2.i",
                "description": "Vertical pixel pitch for signage",
                "type": "string"
            },
            "signHorizontalPixelPitch": {
                "$reqId": "3.3.5.4.6.3.2.j",
                "description": "Measurement of the distance between pixels on a horizontal axis in a sign.",
                "type": "string"
            },
            "maxPages": {
                "$reqId": "3.3.5.4.6.3.2.k",
                "description": "Maximum limit of pages allowed",
                "type": "string"
            },
            "maxMessageLength": {
                "$reqId": "3.3.5.4.6.3.2.l",
                "description": "Maximum allowable length of the message",
                "type": "string"
            },
            "colorScheme": {
                "$reqId": "3.3.5.4.6.3.2.m",
                "description": "Color scheme identification",
                "type": "string"
            },
            "multiTagsSupported": {
                "$reqId": "3.3.5.4.6.3.2.n",
                "description": "Support for MULTI tags",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "ownerOrganization",
            "deviceId",
            "dmsSignType",
            "signHeightInPixels",
            "signWidthInPixels",
            "signHeight",
            "signWidth",
            "characterPixelHeight",
            "characterPixelWidth",
            "signVerticalBorder",
            "signHorizontalBorder",
            "signVerticalPixelPitch",
            "signHorizontalPixelPitch",
            "maxPages",
            "maxMessageLength",
            "colorScheme",
            "multiTagsSupported"
        ]
    },
    "DMSMessageTableInventoryResponse": {
        "description": "DMS Message Table Inventory information for communication between owner center and external center",
        "type": "object",
        "$reqId": "3.3.5.4.7.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSMessageTableInventoryResponse"
            },
            "deviceInventoryHeader": {
                "$reqId": "3.3.5.4.7.5.1.a",
                "description": "Generic device inventory header information",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "messageMemoryType": {
                "$reqId": "3.3.5.4.7.5.1.b",
                "description": "Type of memory used for storing messages",
                "type": "string"
            },
            "messageId": {
                "$reqId": "3.3.5.4.7.5.1.c",
                "description": "Unique identifier for each message",
                "type": "number"
            },
            "messageMultiLanguage": {
                "$reqId": "3.3.5.4.7.5.1.d",
                "description": "Message available in multiple languages for each communication",
                "type": "string"
            },
            "messageOwner": {
                "$reqId": "3.3.5.4.7.5.1.e",
                "description": "Identify the owner for each message",
                "type": "string"
            },
            "messageBeaconFlag": {
                "$reqId": "3.3.5.4.7.5.1.f",
                "description": "Indicate if the message beacon is enabled or disabled for the message",
                "type": "string"
            },
            "messageRunTimePriority": {
                "$reqId": "3.3.5.4.7.5.1.g",
                "description": "Message run-time priority for each message",
                "type": "string"
            },
            "messageStatus": {
                "$reqId": "3.3.5.4.7.5.1.h",
                "description": "Status indicators for message processing (Not used, modifying, validating, valid, error, modifyReq, validateReq, and notUsedReq)",
                "type": "string",
                "enum": [
                    "Not used",
                    "modifying",
                    "validating",
                    "valid",
                    "error",
                    "modifyReq",
                    "validateReq andnotUsedReq"
                ]
            },
            "dmsMessageInventoryDateTimeChangeInformation": {
                "$reqId": "3.3.5.4.7.5.2.1",
                "description": "Provide last changed date and time for DMS message table inventory",
                "$ref": "#/$defs/DateTime"
            },
            "dmsMessageCrc": {
                "$reqId": "3.3.5.4.7.5.2.2",
                "description": "Provide CRC-16 value for DMS message number and memory type in DMS message table inventory",
                "$ref": "#/$defs/DMSMessageCRC"
            }
        },
        "required": [
            "messageType",
            "deviceInventoryHeader",
            "messageMemoryType",
            "messageId",
            "messageMultiLanguage",
            "messageOwner",
            "messageBeaconFlag",
            "messageRunTimePriority",
            "messageStatus"
        ]
    },
    "DMSPriorityQueueRequest": {
        "type": "object",
        "$reqId": "3.3.5.4.9.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSPriorityQueueRequest"
            },
            "devicePriorityQueueRequest": {
                "$reqId": "3.3.5.4.9.2.a",
                "description": "Generic device queue request for dynamic message sign",
                "allOf": [
                    {
                        "$ref": "#/$defs/DevicePriorityQueueRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "devicePriorityQueueRequest"
        ]
    },
    "DMSPriorityQueueResponse": {
        "description": "Include requested message in MULTI language or message number in DMS priority queue response",
        "type": "object",
        "$reqId": "3.3.5.4.9.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSPriorityQueueResponse"
            },
            "devicePriorityQueueHeader": {
                "$reqId": "3.3.5.4.9.3.a",
                "description": "Header information for the generic device priority queue",
                "allOf": [
                    {
                        "$ref": "#/$defs/DevicePriorityQueueResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            }
                        }
                    }
                ]
            },
            "messageRequestedMultiLanguage": {
                "$reqId": "3.3.5.4.9.3.b",
                "description": "Message request in multiple languages",
                "type": "string"
            },
            "messageNumber": {
                "$reqId": "3.3.5.4.9.3.c",
                "description": "Unique identifier for the requested message number",
                "type": "number"
            }
        },
        "required": [
            "messageType",
            "devicePriorityQueueHeader",
            "messageRequestedMultiLanguage",
            "messageNumber"
        ]
    },
    "DMSStatusInformationRequest": {
        "description": "Include DMS status request information from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.4.2.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSStatusInformationRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.4.2.4.a",
                "description": "Generic device information request for dynamic message sign status",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            },
                            "deviceInformationType": {
                                "const": "device status"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "DMSStatusInformationResponse": {
        "description": "Include current message displayed on each DMS device in status information",
        "type": "object",
        "$reqId": "3.3.5.4.2.5.1",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DMSStatusInformationResponse"
            },
            "deviceStatusHeader": {
                "$reqId": "3.3.5.4.2.5.1.a",
                "description": "Generic device status header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceStatusHeader"
                    },
                    {
                        "properties": {
                            "deviceStatuses": {
                                "items": {
                                    "allOf": [
                                        {
                                            "$ref": "#/$defs/DeviceStatus"
                                        },
                                        {
                                            "properties": {
                                                "deviceType": {
                                                    "const": "dynamic message sign"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "dmsMessage": {
                "$reqId": "3.3.5.4.2.5.1.b",
                "description": "Current message displayed on DMS device",
                "type": "string"
            },
            "currentMessageNumberDms": {
                "$reqId": "3.3.5.4.2.5.2.1",
                "description": "Provide the message number currently displayed on the DMS device as part of DMS status information.",
                "type": "number"
            },
            "timeRemaining": {
                "$reqId": "3.3.5.4.2.5.2.2",
                "description": "Provide time remaining for current message display in DMS status information",
                "type": "string"
            },
            "messageSource": {
                "$reqId": "3.3.5.4.2.5.2.3",
                "description": "Provide the message source of the currently displayed message on the DMS as part of the DMS status information",
                "type": "string",
                "enum": [
                    "local",
                    "external",
                    "central",
                    "time-based scheduler",
                    "power recovery",
                    "reset",
                    "commLoss",
                    "powerLoss",
                    "endDuration",
                    "other"
                ]
            },
            "messageBeacon": {
                "$reqId": "3.3.5.4.2.5.2.4",
                "description": "Indicate if the beacon is enabled or disabled for the message displayed on the DMS device",
                "type": "string"
            },
            "dmsOnDisplayImage": {
                "$reqId": "3.3.5.4.2.5.2.5",
                "description": "Provide a URL to an image of the current DMS display",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "deviceStatusHeader",
            "dmsMessage"
        ]
    },
    "DetectorDataRequest": {
        "description": "Contents of a detector data request for an external center to send to an owner center",
        "type": "object",
        "$reqId": "3.3.5.2.3.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DetectorDataRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.2.3.4.1.a",
                "description": "Generic device information request for detector device type and device data information type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "detector"
                            },
                            "deviceInformationType": {
                                "const": "device data"
                            }
                        }
                    }
                ]
            },
            "detectorStationId": {
                "$reqId": "3.3.5.2.3.4.2.1",
                "description": "Send unique identifier of the detector station as part of the detector data request",
                "type": "string"
            },
            "dataTypeRequest": {
                "$reqId": "3.3.5.2.3.4.2.2",
                "description": "Indicate the type of traffic data desired in the detector data request",
                "type": "string",
                "enum": [
                    "actual",
                    "reconstructed",
                    "historical",
                    "predicted",
                    "smoothed",
                    "averaged",
                    "estimated"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "DetectorDataResponse": {
        "description": "Detector data information for transmission from owner center to external center",
        "type": "object",
        "$reqId": "3.3.5.2.3.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DetectorDataResponse"
            },
            "organizationId": {
                "$reqId": "3.3.5.2.3.5.1.a",
                "description": "Unique identifier for the owner organization",
                "type": "string"
            },
            "detectorId": {
                "$reqId": "3.3.5.2.3.5.1.b",
                "description": "Unique identifier for each detector",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "detectorTimestamp": {
                "$reqId": "3.3.5.2.3.5.1.c",
                "description": "Timestamp for the detector data",
                "$ref": "#/$defs/DateTime"
            },
            "detectorStationDetectorData": {
                "$reqId": "3.3.5.2.3.5.2.1",
                "description": "Send unique identifier of the detector station as part of detector data information",
                "type": "string"
            },
            "vehicleCount": {
                "$reqId": "3.3.5.2.3.5.2.2",
                "description": "Provide the number of vehicles detected for each detector in the detector data information",
                "type": "number"
            },
            "averageVehicleOccupancy": {
                "$reqId": "3.3.5.2.3.5.2.3",
                "description": "Provide average vehicle occupancy percentage as part of detector data information for each detector.",
                "type": "number"
            },
            "dataCollectionStart": {
                "$reqId": "3.3.5.2.3.5.2.4",
                "description": "Provide the start date and time of the data collection period for each detector",
                "$ref": "#/$defs/DateTime"
            },
            "dataCollectionEnd": {
                "$reqId": "3.3.5.2.3.5.2.5",
                "description": "Provide end date and time of the data collection period for each detector in the detector data information.",
                "$ref": "#/$defs/DateTime"
            },
            "dataType": {
                "$reqId": "3.3.5.2.3.5.2.6",
                "description": "Indicate the type of traffic data provided for each detector",
                "type": "string",
                "enum": [
                    "actual",
                    "reconstructed",
                    "historical",
                    "predicted",
                    "smoothed",
                    "averaged",
                    "estimated"
                ]
            },
            "averageVehicleSpeed": {
                "$reqId": "3.3.5.2.3.5.2.7",
                "description": "Provide average vehicle speed in kilometers per hour during data collection period for each detector.",
                "type": "string"
            },
            "averageVehicleQueue": {
                "$reqId": "3.3.5.2.3.5.2.8",
                "description": "Provide average number of vehicles in the queue during data collection for each detector",
                "type": "number"
            },
            "vehicleStops": {
                "$reqId": "3.3.5.2.3.5.2.9",
                "description": "Provide the number of stopped vehicles measured during the data collection period as part of the detector data information",
                "type": "number"
            },
            "vehicleCountBin1": {
                "$reqId": "3.3.5.2.3.5.2.10",
                "description": "Provide the number of vehicles detected and classified in Bin 1 during the data collection period as part of the detector data information.",
                "type": "number"
            },
            "vehicleCountBin2": {
                "$reqId": "3.3.5.2.3.5.2.11",
                "description": "Provide the number of vehicles detected and classified in Bin 2 based on vehicle length during the data collection period for each detector.",
                "type": "number"
            },
            "vehicleCountBin3": {
                "$reqId": "3.3.5.2.3.5.2.12",
                "description": "Provide the number of vehicles detected and classified in Bin 3 based on vehicle length during the data collection period as part of detector data.",
                "type": "number"
            },
            "vehicleCountBin4": {
                "$reqId": "3.3.5.2.3.5.2.13",
                "description": "Provide the number of vehicles detected and classified in Bin 4 based on vehicle length during the data collection period as part of the detector data information.",
                "type": "number"
            },
            "vehicleCountBin5": {
                "$reqId": "3.3.5.2.3.5.2.14",
                "description": "Provide the number of vehicles detected and classified in Bin 5 based on vehicle length during the data collection period as part of the detector data information.",
                "type": "number"
            },
            "vehicleCountBin6": {
                "$reqId": "3.3.5.2.3.5.2.15",
                "description": "Provide the number of vehicles detected and classified in Bin 6 based on vehicle length during the data collection period as part of detector data information.",
                "type": "number"
            },
            "vehicleCountBin7": {
                "$reqId": "3.3.5.2.3.5.2.16",
                "description": "Provide the number of vehicles detected and classified in Bin 7 based on vehicle length during the data collection period as part of detector data information.",
                "type": "number"
            },
            "vehicleCountBin8": {
                "$reqId": "3.3.5.2.3.5.2.17",
                "description": "Provide the number of vehicles detected and classified in Bin 8 based on vehicle length during the data collection period as part of detector data information.",
                "type": "number"
            },
            "vehicleCountBin9": {
                "$reqId": "3.3.5.2.3.5.2.18",
                "description": "Provide the number of vehicles detected and classified in Bin 9 based on vehicle length during the data collection period as part of detector data information.",
                "type": "number"
            },
            "vehicleCountBin10": {
                "$reqId": "3.3.5.2.3.5.2.19",
                "description": "Provide the number of vehicles detected and classified in Bin 10 based on vehicle length during the data collection period as part of detector data information.",
                "type": "number"
            },
            "vehicleCountBin11": {
                "$reqId": "3.3.5.2.3.5.2.20",
                "description": "Provide the number of vehicles detected and classified in Bin 11 based on vehicle length during the data collection period as part of detector data information.",
                "type": "number"
            },
            "vehicleCountBin12": {
                "$reqId": "3.3.5.2.3.5.2.21",
                "description": "Provide the number of vehicles detected and classified in Bin 12 based on vehicle length during the data collection period as part of detector data information.",
                "type": "number"
            },
            "vehicleCountBin13": {
                "$reqId": "3.3.5.2.3.5.2.22",
                "description": "Provide the number of vehicles detected and classified in Bin 13 based on vehicle length during the data collection period as part of detector data information.",
                "type": "number"
            },
            "vehicleCountBin14": {
                "$reqId": "3.3.5.2.3.5.2.23",
                "description": "Provide the number of vehicles detected and classified in Bin 14 based on vehicle length during the data collection period as part of detector data information.",
                "type": "number"
            },
            "detectorStatus": {
                "$reqId": "3.3.5.2.3.5.2.24",
                "description": "Provide operational status of the detector in detector data information with supported values.",
                "type": "string",
                "enum": [
                    "on",
                    "off",
                    "out-of-service",
                    "unavailable",
                    "unknown",
                    "marginal",
                    "failed"
                ]
            },
            "vehicleClassCountBin1": {
                "$reqId": "3.3.5.2.3.5.2.25",
                "description": "Provide the number of vehicles detected and classified as Class Group 1 (Motorcycles) during the data collection period for each detector.",
                "type": "number"
            },
            "vehicleClassCountBin2": {
                "$reqId": "3.3.5.2.3.5.2.26",
                "description": "Provide the number of Class Group 2 (Passenger Cars) detected and classified by FHWA in Bin 2 during the data collection period for each detector.",
                "type": "number"
            },
            "vehicleClassCountBin3": {
                "$reqId": "3.3.5.2.3.5.2.27",
                "description": "Provide number of Class Group 3 vehicles detected and classified during the data collection period as part of detector data information.",
                "type": "number"
            },
            "vehicleClassCountBin4": {
                "$reqId": "3.3.5.2.3.5.2.28",
                "description": "Provide number of vehicles classified as Class Group 4 (Buses) in detector data information.",
                "type": "number"
            },
            "vehicleClassCountBin5": {
                "$reqId": "3.3.5.2.3.5.2.29",
                "description": "Provide the number of Class Group 5 vehicles detected and classified in Bin 5 during the data collection period for each detector.",
                "type": "number"
            },
            "vehicleClassCountBin6": {
                "$reqId": "3.3.5.2.3.5.2.30",
                "description": "Provide the number of Class Group 6 vehicles detected and classified during the data collection period for each detector.",
                "type": "number"
            },
            "vehicleClassCountBin7": {
                "$reqId": "3.3.5.2.3.5.2.31",
                "description": "Provide the number of Class Group 7 vehicles detected and classified during the data collection period as part of the detector data information.",
                "type": "number"
            },
            "vehicleClassCountBin8": {
                "$reqId": "3.3.5.2.3.5.2.32",
                "description": "Provide number of Class Group 8 vehicles detected and classified during data collection period",
                "type": "number"
            },
            "vehicleClassCountBin9": {
                "$reqId": "3.3.5.2.3.5.2.33",
                "description": "Provide the number of vehicles detected and classified as Class Group 9 during the data collection period for each detector.",
                "type": "number"
            },
            "vehicleClassCountBin10": {
                "$reqId": "3.3.5.2.3.5.2.34",
                "description": "Provide the number of Class Group 10 vehicles detected during the data collection period as part of detector data information",
                "type": "number"
            },
            "vehicleClassCountBin11": {
                "$reqId": "3.3.5.2.3.5.2.35",
                "description": "Provide the number of Class Group 11 vehicles detected and classified during the data collection period for each detector.",
                "type": "number"
            },
            "vehicleClassCountBin12": {
                "$reqId": "3.3.5.2.3.5.2.36",
                "description": "Provide the number of Class Group 12 vehicles detected and classified during data collection",
                "type": "number"
            },
            "vehicleClassCountBin13": {
                "$reqId": "3.3.5.2.3.5.2.37",
                "description": "Provide the number of vehicles classified as Class Group 13 during the data collection period for each detector",
                "type": "number"
            },
            "vehicleClassCountBin14": {
                "$reqId": "3.3.5.2.3.5.2.38",
                "description": "Provide the number of vehicles detected and classified as Class Group 14 (Unclassified) during the data collection period in detector data information.",
                "type": "number"
            }
        },
        "required": [
            "messageType",
            "organizationId",
            "detectorId",
            "detectorTimestamp"
        ]
    },
    "DetectorInventoryRequest": {
        "description": "Include device identifier of the detector station in the detector inventory information request",
        "type": "object",
        "$reqId": "3.3.5.2.1.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DetectorInventoryRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.2.1.4.a",
                "description": "Generic device information request for detector device inventory",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "detector"
                            },
                            "deviceInformationType": {
                                "const": "device inventory"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "DetectorInventoryResponse": {
        "description": "Detector inventory information for owner center to send to external center",
        "type": "object",
        "$reqId": "3.3.5.2.1.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DetectorInventoryResponse"
            },
            "deviceInventoryHeader": {
                "$reqId": "3.3.5.2.1.5.1.a",
                "description": "Generic device inventory header information for detectors or detector zones",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "detectorType": {
                "$reqId": "3.3.5.2.1.5.1.b",
                "description": "Type of detector or detector zone including options like inductive loop, magnetic, magnetometers, pressure cells, microwave radar, ultrasonic, video image, laser, infrared, road tube, probe, and Roadside Unit.",
                "type": "string",
                "enum": [
                    "inductive loop",
                    "magnetic",
                    "magnetometers",
                    "pressure cells",
                    "microwave radar",
                    "ultrasonic",
                    "video image",
                    "laser",
                    "infrared",
                    "road tube",
                    "probe",
                    "unknown",
                    "other"
                ]
            },
            "detectorStationInventoryInformation": {
                "$reqId": "3.3.5.2.1.5.2.1",
                "description": "Send generic device inventory header information for detector stations as part of detector inventory information",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "laneNumber": {
                "$reqId": "3.3.5.2.1.5.2.2",
                "description": "Provide a list of lane numbers monitored by each detector in the detector inventory information",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "speedTrapFlag": {
                "$reqId": "3.3.5.2.1.5.2.3",
                "description": "Indicate if the detector is a speed trap in the detector inventory information",
                "type": "boolean"
            },
            "vehicleBin1": {
                "$reqId": "3.3.5.2.1.5.2.4",
                "description": "Provide maximum vehicle length in centimeters for Bin 1 classification in detector inventory information.",
                "type": "number"
            },
            "vehicleBin2": {
                "$reqId": "3.3.5.2.1.5.2.5",
                "description": "Provide maximum vehicle length for Bin 2 classification in detector inventory information",
                "type": "number"
            },
            "vehicleBin3": {
                "$reqId": "3.3.5.2.1.5.2.6",
                "description": "Provide maximum vehicle length for Bin 3 classification in detector inventory",
                "type": "number"
            },
            "vehicleBin4": {
                "$reqId": "3.3.5.2.1.5.2.7",
                "description": "Provide maximum vehicle length for classification as Bin 4 in detector inventory information",
                "type": "number"
            },
            "vehicleBin5": {
                "$reqId": "3.3.5.2.1.5.2.8",
                "description": "Provide the maximum vehicle length for Bin 5 classification in detector inventory information",
                "type": "number"
            },
            "vehicleBin6": {
                "$reqId": "3.3.5.2.1.5.2.9",
                "description": "Provide maximum vehicle length in centimeters for Bin 6 classification during data collection.",
                "type": "number"
            },
            "vehicleBin7": {
                "$reqId": "3.3.5.2.1.5.2.10",
                "description": "Provide maximum vehicle length for Bin 6 as part of detector inventory information",
                "type": "number"
            }
        },
        "required": [
            "messageType",
            "deviceInventoryHeader",
            "detectorType"
        ]
    },
    "DetectorMaintenanceHistoryRequest": {
        "description": "Contents for a detector maintenance history request from an external center to an owner center",
        "type": "object",
        "$reqId": "3.3.5.2.4.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DetectorMaintenanceHistoryRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.2.4.2.1.a",
                "description": "Request for generic device information with device type as 'detector' and information type as 'device maintenance history'",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "detector"
                            },
                            "deviceInformationType": {
                                "const": "device maintenance history"
                            }
                        }
                    }
                ]
            },
            "detectorStationId": {
                "$reqId": "3.3.5.2.4.2.2.1",
                "description": "Send unique identifier of the detector station in the maintenance history request",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "DetectorMaintenanceHistoryResponse": {
        "description": "Detector maintenance history information for owner center to send to external center",
        "type": "object",
        "$reqId": "3.3.5.2.4.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DetectorMaintenanceHistoryResponse"
            },
            "organization": {
                "$reqId": "3.3.5.2.4.3.1.a",
                "description": "Information regarding the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "detectorId": {
                "$reqId": "3.3.5.2.4.3.1.b",
                "description": "Unique identifier for each detector or detector zone",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "detectorStation": {
                "$reqId": "3.3.5.2.4.3.2.1",
                "description": "Send unique identifier of the detector station as part of the detector maintenance history information",
                "type": "string"
            },
            "detectorType": {
                "$reqId": "3.3.5.2.4.3.2.2",
                "description": "Provide the type of detector in the maintenance history information for each detector",
                "type": "string",
                "enum": [
                    "inductive loop",
                    "magnetic",
                    "magnetometers",
                    "pressure cells",
                    "microwave radar",
                    "ultrasonic",
                    "video image",
                    "laser",
                    "infrared",
                    "road tube",
                    "probe other",
                    "unknown"
                ]
            },
            "installationDateTime": {
                "$reqId": "3.3.5.2.4.3.2.3",
                "description": "Provide initial installation date and time of the detector in maintenance history",
                "$ref": "#/$defs/DateTime"
            },
            "detectorCalibrationDateTime": {
                "$reqId": "3.3.5.2.4.3.2.4",
                "description": "Provide the date and time of the last detector calibration in maintenance history information.",
                "$ref": "#/$defs/DateTime"
            },
            "operationalDateTime": {
                "$reqId": "3.3.5.2.4.3.2.5",
                "description": "Provide the last date and time the operational status of the detector changed as part of maintenance history information.",
                "$ref": "#/$defs/DateTime"
            },
            "nonOperationalDateTime": {
                "$reqId": "3.3.5.2.4.3.2.6",
                "description": "Provide the last date and time the detector changed from ‘not operational’ to another operational state in the maintenance history.",
                "$ref": "#/$defs/DateTime"
            },
            "historyDateTimeChangeInformation": {
                "$reqId": "3.3.5.2.4.3.2.7",
                "description": "Provide the date and time of the last change to detector history as part of the maintenance history information",
                "$ref": "#/$defs/DateTime"
            }
        },
        "required": [
            "messageType",
            "organization",
            "detectorId"
        ]
    },
    "DetectorStatusRequest": {
        "description": "Include the detector station identifier in the detector status request",
        "type": "object",
        "$reqId": "3.3.5.2.2.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DetectorStatusRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.2.2.4.a",
                "description": "Request device status information for a detector type device",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "detector"
                            },
                            "deviceInformationType": {
                                "const": "device status"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "DetectorStatusResponse": {
        "description": "Detector status information for owner center to send to external center",
        "type": "object",
        "$reqId": "3.3.5.2.2.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DetectorStatusResponse"
            },
            "deviceStatusHeader": {
                "$reqId": "3.3.5.2.2.5.1.a",
                "description": "Generic device status header information for each detector or detector zone",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceStatusHeader"
                    },
                    {
                        "properties": {
                            "deviceStatuses": {
                                "items": {
                                    "allOf": [
                                        {
                                            "$ref": "#/$defs/DeviceStatus"
                                        },
                                        {
                                            "properties": {
                                                "deviceType": {
                                                    "const": "detector station"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "detectorStationStatusInformation": {
                "$reqId": "3.3.5.2.2.5.2.1",
                "description": "Send generic device status header information for detector stations as part of the detector status information.",
                "type": "string"
            },
            "laneNumberDetectorStatus": {
                "$reqId": "3.3.5.2.2.5.2.2",
                "description": "Provide lane number for each detector in status information",
                "type": "string"
            },
            "directionTravel": {
                "$reqId": "3.3.5.2.2.5.2.3",
                "description": "Provide the direction of travel for each monitored detector as part of the detector status information.",
                "$ref": "#/$defs/Directions"
            }
        },
        "required": [
            "messageType",
            "deviceStatusHeader"
        ]
    },
    "DeviceChangeCancellationResponse": {
        "description": "Requirements for the contents of the cancel device control request response are defined in the specified section.",
        "$reqId": "3.3.5.1.2.4.3",
        "type": "object",
        "allOf": [
            {
                "type": "object",
                "properties": {
                    "messageType": {
                        "type": "string",
                        "const": "DeviceChangeCancellationResponse"
                    }
                },
                "required": [
                    "messageType"
                ]
            },
            {
                "$ref": "#/$defs/DeviceChangeResponseHeader"
            }
        ]
    },
    "DeviceChangeStatusResponse": {
        "description": "Requirements for device change status response contents",
        "$reqId": "3.3.5.1.2.3.3",
        "type": "object",
        "allOf": [
            {
                "type": "object",
                "properties": {
                    "messageType": {
                        "type": "string",
                        "const": "DeviceChangeStatusResponse"
                    }
                },
                "required": [
                    "messageType"
                ]
            },
            {
                "$ref": "#/$defs/DeviceChangeResponseHeader"
            }
        ]
    },
    "DmsMessageTableInventoryRequest": {
        "description": "Contents of a DMS Message Table Inventory request from an external center to an owner center",
        "type": "object",
        "$reqId": "3.3.5.4.7.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "DmsMessageTableInventoryRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.4.7.4.1.a",
                "description": "Generic device information request for dynamic message sign with device information type set to device plan.",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "dynamic message sign"
                            },
                            "deviceInformationType": {
                                "const": "device plan"
                            }
                        }
                    }
                ]
            },
            "dmsMessageNumberIdentifier": {
                "$reqId": "3.3.5.4.7.4.2.1",
                "description": "Provide the desired message number as part of the DMS message table inventory request for each DMS",
                "type": "number"
            },
            "dmsMemoryType": {
                "$reqId": "3.3.5.4.7.4.2.2",
                "description": "Indicate memory type for DMS message table in inventory request",
                "type": "string",
                "enum": [
                    "permanent",
                    "changeable",
                    "volatile",
                    "currentBuffer"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "ESSInventoryInformationRequest": {
        "description": "Include ESS inventory information request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.5.1.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ESSInventoryInformationRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.5.1.4.a",
                "description": "Generic device information request for ESS with device inventory type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "environmental sensor station"
                            },
                            "deviceInformationType": {
                                "const": "device inventory"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "ESSInventoryInformationResponse": {
        "description": "ESS inventory information from owner center to external center.",
        "type": "object",
        "$reqId": "3.3.5.5.1.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ESSInventoryInformationResponse"
            },
            "deviceInventoryHeader": {
                "$reqId": "3.3.5.5.1.5.1.a",
                "description": "Header information for environmental sensor station in device inventory",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "deviceInventoryHeaderList": {
                "$reqId": "3.3.5.5.1.5.1.b",
                "description": "Generic device inventory header information for each environmental sensor connected to the environmental sensor station",
                "type": "array",
                "items": {
                    "$ref": "#/$defs/DeviceInventoryResponseHeader"
                }
            },
            "laneNumber": {
                "$reqId": "3.3.5.5.1.5.2.1",
                "description": "Provide the lane number for each environmental sensor in the ESS inventory information",
                "type": "string"
            },
            "deviceElevation": {
                "$reqId": "3.3.5.5.1.5.2.2",
                "description": "Provide the elevation of the environmental sensor in decimeters as part of ESS inventory information.",
                "type": "string"
            },
            "deviceHeight": {
                "$reqId": "3.3.5.5.1.5.2.3",
                "description": "Provide the height of the environmental sensor from the base of the station in decimeters as part of ESS inventory information.",
                "type": "string"
            },
            "deviceType": {
                "$reqId": "3.3.5.5.1.5.2.4",
                "description": "Provide the type of environmental sensor in ESS inventory information",
                "type": "string",
                "enum": [
                    "atmospheric",
                    "wind",
                    "temperature",
                    "precipitation",
                    "visibility",
                    "pavement",
                    "subsurface",
                    "other",
                    "unknown"
                ]
            },
            "deviceOperationType": {
                "$reqId": "3.3.5.5.1.5.2.5",
                "description": "Provide operation type of the environmental sensor station in the ESS inventory information",
                "type": "string",
                "enum": [
                    "staffed",
                    "automatic",
                    "unknown",
                    "other"
                ]
            },
            "deviceMobilityType": {
                "$reqId": "3.3.5.5.1.5.2.6",
                "description": "Provide mobility type of environmental sensor station in ESS inventory",
                "type": "string",
                "enum": [
                    "permanent",
                    "transportable",
                    "mobile",
                    "other"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInventoryHeader",
            "deviceInventoryHeaderList"
        ]
    },
    "ESSMetadataRequest": {
        "description": "Specify the ESS metadata request details from an external center to an owner center",
        "type": "object",
        "$reqId": "3.3.5.5.4.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ESSMetadataRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.5.4.2.a",
                "description": "Request for generic device information for environmental sensor station with device metadata type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "environmental sensor station"
                            },
                            "deviceInformationType": {
                                "const": "device metadata"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "ESSMetadataResponse": {
        "description": "Content of ESS metadata information sent from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.5.4.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ESSMetadataResponse"
            },
            "fileName": {
                "$reqId": "3.3.5.5.4.3.1.a",
                "description": "Name of the file containing observations",
                "type": "string"
            },
            "fileDirectoryPath": {
                "$reqId": "3.3.5.5.4.3.1.b",
                "description": "Logical directory path for the observation file",
                "type": "string"
            },
            "protocolUsed": {
                "$reqId": "3.3.5.5.4.3.1.c",
                "description": "Protocol for retrieving observations",
                "type": "string"
            },
            "networkDnsName": {
                "$reqId": "3.3.5.5.4.3.1.d",
                "description": "Network DNS name and IP address of the collector host server",
                "type": "string"
            },
            "networkAdressPort": {
                "$reqId": "3.3.5.5.4.3.1.e",
                "description": "Logical network address port on the collector host server",
                "type": "string"
            },
            "observationCollectionFrequency": {
                "$reqId": "3.3.5.5.4.3.1.f",
                "description": "Frequency of observation collection",
                "type": "string"
            },
            "observationCollectionOffset": {
                "$reqId": "3.3.5.5.4.3.1.g",
                "description": "Time in minutes after midnight UTC for the first observation collection",
                "type": "string"
            },
            "offsetMinutesUTC": {
                "$reqId": "3.3.5.5.4.3.1.h",
                "description": "Minutes offset from UTC for the agency's collector host server",
                "type": "string"
            },
            "hostTimeZone": {
                "$reqId": "3.3.5.5.4.3.1.i",
                "description": "Standard Time Zone of the agency's collector host location",
                "type": "string"
            },
            "daylightSavings": {
                "$reqId": "3.3.5.5.4.3.1.j",
                "description": "Indicate if Daylight Savings Time is observed on the server",
                "type": "string"
            },
            "requestHeader": {
                "$reqId": "3.3.5.5.4.3.2.1",
                "description": "Requirements for Authorization information in ESS metadata are specified in Section 3.3.1.8.1.",
                "$ref": "#/$defs/AuthHeader"
            },
            "CollectorConfigurationContent": {
                "$ref": "#/$defs/CollectorConfigurationContent"
            },
            "organization": {
                "$reqId": "3.3.5.5.4.3.3",
                "description": "Provide organization information of the owner associated with ESS metadata",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "SensorSpecificInformation": {
                "$ref": "#/$defs/SensorSpecificInformation"
            },
            "SiteSpecificInformation": {
                "$ref": "#/$defs/SiteSpecificInformation"
            },
            "StationSpecificInformation": {
                "$ref": "#/$defs/StationSpecificInformation"
            },
            "ClimateRecordInformation": {
                "$ref": "#/$defs/ClimateRecordInformation"
            },
            "DataCollectorInformation": {
                "$ref": "#/$defs/DataCollectorInformation"
            },
            "ImageInformation": {
                "$ref": "#/$defs/ImageInformation"
            }
        },
        "required": [
            "messageType",
            "fileName",
            "fileDirectoryPath",
            "protocolUsed",
            "networkDnsName",
            "networkAdressPort",
            "observationCollectionFrequency",
            "observationCollectionOffset",
            "offsetMinutesUTC",
            "hostTimeZone",
            "daylightSavings"
        ]
    },
    "ESSObservationDataRequest": {
        "description": "Include ESS observation data request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.5.3.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ESSObservationDataRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.5.3.4.a",
                "description": "Request for generic device information for environmental sensor station with device data type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "environmental sensor station"
                            },
                            "deviceInformationType": {
                                "const": "device data"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "ESSStatusRequest": {
        "description": "Include ESS status request details in communication from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.5.2.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ESSStatusRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.5.2.4.a",
                "description": "Device information request for environmental sensor status",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "environmental sensor station"
                            },
                            "deviceInformationType": {
                                "const": "device status"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "ESSStatusResponse": {
        "description": "Include generic device status header information in the ESS status information sent to external center",
        "type": "object",
        "$reqId": "3.3.5.5.2.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ESSStatusResponse"
            },
            "deviceStatusHeader": {
                "$reqId": "3.3.5.5.2.5.a",
                "description": "Header information for the status of an environmental sensor station device.",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceStatusHeader"
                    },
                    {
                        "properties": {
                            "deviceStatuses": {
                                "items": {
                                    "allOf": [
                                        {
                                            "$ref": "#/$defs/DeviceStatus"
                                        },
                                        {
                                            "properties": {
                                                "deviceType": {
                                                    "const": "environmental sensor station"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "connectedDeviceStatusHeader": {
                "$reqId": "3.3.5.5.2.5.b",
                "description": "Generic device status header information for environmental sensors connected to the environmental sensor station.",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceStatusHeader"
                    },
                    {
                        "properties": {
                            "deviceStatuses": {
                                "items": {
                                    "allOf": [
                                        {
                                            "$ref": "#/$defs/DeviceStatus"
                                        },
                                        {
                                            "properties": {
                                                "deviceType": {
                                                    "const": "environmental sensor station"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceStatusHeader",
            "connectedDeviceStatusHeader"
        ]
    },
    "ESSobservationDataResponse": {
        "description": "Include unique identifiers for the ESS station and each ESS sensor, along with timestamp and observation block data in ESS observation data transmission.",
        "type": "object",
        "$reqId": "3.3.5.5.3.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ESSobservationDataResponse"
            },
            "ownerOrganization": {
                "$reqId": "3.3.5.5.3.5.a",
                "description": "Owner organization information details",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "stationId": {
                "$reqId": "3.3.5.5.3.5.b",
                "description": "Unique identifier for the ESS station",
                "type": "string"
            },
            "essSensorId": {
                "$reqId": "3.3.5.5.3.5.c",
                "description": "Unique identifier for each ESS sensor",
                "type": "string"
            },
            "timestampEssObservationData": {
                "$reqId": "3.3.5.5.3.5.d",
                "description": "Timestamp of the ESS observation data",
                "$ref": "#/$defs/DateTime"
            },
            "observationBlockData": {
                "$reqId": "3.3.5.5.3.5.e",
                "description": "Observation block data including weather, pavement, and subsurface conditions.",
                "type": "string",
                "enum": [
                    "weather",
                    "pavement",
                    "subsurface"
                ]
            }
        },
        "required": [
            "messageType",
            "ownerOrganization",
            "stationId",
            "essSensorId",
            "timestampEssObservationData",
            "observationBlockData"
        ]
    },
    "EventIndexRequest": {
        "description": "Send an event index request to the owner center",
        "type": "object",
        "$reqId": "3.3.3.7.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "EventIndexRequest"
            },
            "organizationId": {
                "$reqId": "3.3.3.7.4.1.a",
                "description": "Unique identifier for the requesting organization",
                "type": "string"
            },
            "messageTypeId": {
                "$reqId": "3.3.3.7.4.1.b",
                "description": "Identifier for event message type",
                "type": "string",
                "enum": [
                    "event information",
                    "event index"
                ]
            },
            "messageTypeVersion": {
                "$reqId": "3.3.3.7.4.1.c",
                "description": "Version of the event message type",
                "type": "string",
                "enum": [
                    "ngTMDD v1",
                    "ngTMDD v1.1"
                ]
            },
            "requestDateTime": {
                "$reqId": "3.3.3.7.4.1.d",
                "description": "Date and time the request was sent",
                "$ref": "#/$defs/DateTime"
            },
            "requestFilterLimit": {
                "$reqId": "3.3.3.7.4.1.e",
                "description": "Request filter limit for specific events and response plans based on defined IDs",
                "$ref": "#/$defs/RequestFilterLimit"
            },
            "requestHeader": {
                "$reqId": "3.3.3.7.4.2.1",
                "description": "Requirements for authorization information in the event index request",
                "$ref": "#/$defs/AuthHeader"
            },
            "operatorId": {
                "$reqId": "3.3.3.7.4.2.2",
                "description": "Provide operator information in the event index request",
                "type": "string"
            },
            "requestingOrganization": {
                "$reqId": "3.3.3.7.4.2.3",
                "description": "Provide organization information in the event index request",
                "$ref": "#/$defs/OrganizationInformation"
            }
        },
        "required": [
            "messageType",
            "organizationId",
            "messageTypeId",
            "messageTypeVersion",
            "requestDateTime",
            "requestFilterLimit"
        ]
    },
    "EventIndexResponse": {
        "description": "Send event index information to an external center",
        "type": "object",
        "$reqId": "3.3.3.7.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "EventIndexResponse"
            },
            "associatedURL": {
                "$reqId": "3.3.3.7.5.1.a",
                "description": "URL associated with the entity",
                "type": "string"
            },
            "eventLastUpdated": {
                "$reqId": "3.3.3.7.5.1.b",
                "description": "Date and time of the last event update",
                "$ref": "#/$defs/DateTime"
            },
            "eventId": {
                "$reqId": "3.3.3.7.5.1.c",
                "description": "Unique identifier for the event",
                "type": "string"
            },
            "eventUpdateNumber": {
                "$reqId": "3.3.3.7.5.1.d",
                "description": "Unique identifier for event updates",
                "type": "number"
            },
            "eventStatus": {
                "$reqId": "3.3.3.7.5.1.e",
                "description": "Status of the event (updated, deleted, ended)",
                "type": "string",
                "enum": [
                    "updated",
                    "delete",
                    "ended"
                ]
            }
        },
        "required": [
            "messageType",
            "associatedURL",
            "eventLastUpdated",
            "eventId",
            "eventUpdateNumber",
            "eventStatus"
        ]
    },
    "EventInformationRequest": {
        "description": "Send an event information request to an owner center",
        "type": "object",
        "$reqId": "3.3.3.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "EventInformationRequest"
            },
            "organizationId": {
                "$reqId": "3.3.3.4.1.a",
                "description": "Unique identifier for the requesting organization",
                "type": "string"
            },
            "eventMsgTypeVer": {
                "$reqId": "3.3.3.4.1.b",
                "description": "Version of the event message type (ngTMDDv1)",
                "type": "string"
            },
            "eventMsgNum": {
                "$reqId": "3.3.3.4.1.c",
                "description": "Unique identifier for the event message",
                "type": "number"
            },
            "reqTimestamp": {
                "$reqId": "3.3.3.4.1.d",
                "description": "Date and time the request was sent",
                "$ref": "#/$defs/DateTime"
            },
            "reqFilterLimit": {
                "$reqId": "3.3.3.4.1.e",
                "description": "Request filter limit for specific events and response plans",
                "$ref": "#/$defs/RequestFilterLimit"
            },
            "requestHeader": {
                "$reqId": "3.3.3.4.2.1",
                "description": "Requirements for authorization information in event index request",
                "$ref": "#/$defs/AuthHeader"
            },
            "operatorId": {
                "$reqId": "3.3.3.4.2.2",
                "description": "Requirements for operator identifier from external center to owner center",
                "type": "string"
            },
            "organization": {
                "$reqId": "3.3.3.4.2.3",
                "description": "Provide organization information as part of the event information request",
                "$ref": "#/$defs/OrganizationInformation"
            }
        },
        "required": [
            "messageType",
            "organizationId",
            "eventMsgTypeVer",
            "eventMsgNum",
            "reqTimestamp",
            "reqFilterLimit"
        ]
    },
    "EventInformationResponse": {
        "description": "Send event information to an external center",
        "type": "object",
        "$reqId": "3.3.3.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "EventInformationResponse"
            },
            "eventMessageHeader": {
                "$reqId": "3.3.3.5.1.a",
                "description": "Header information for event messages",
                "$ref": "#/$defs/EventMessageHeader"
            },
            "eventReference": {
                "$reqId": "3.3.3.5.1.b",
                "description": "Unique identifier for the event associated with the reference",
                "$ref": "#/$defs/EventReference"
            },
            "eventElementDetails": {
                "$reqId": "3.3.3.5.1.c",
                "description": "Requirements for each aspect of event information",
                "type": "array",
                "items": {
                    "$ref": "#/$defs/EventElementDetails"
                }
            },
            "restrictions": {
                "$reqId": "3.3.3.6.1",
                "$ref": "#/$defs/RestrictionTypes"
            },
            "eventIndicator": {
                "$reqId": "3.3.3.6.2",
                "type": "array",
                "items": {
                    "$ref": "#/$defs/EventIndicator"
                }
            },
            "otherReferences": {
                "$reqId": "3.3.3.6.3",
                "type": "array",
                "items": {
                    "$ref": "#/$defs/OtherReferences"
                }
            },
            "eventComments": {
                "$reqId": "3.3.3.6.4",
                "$ref": "#/$defs/EventComments"
            }
        },
        "required": [
            "messageType",
            "eventMessageHeader",
            "eventReference",
            "eventElementDetails"
        ]
    },
    "FleetVehicleInventoryRequest": {
        "description": "Requirements for fleet vehicle inventory request from external center to owner center",
        "$reqId": "3.3.4.5.1.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "FleetVehicleInventoryRequest"
            },
            "trafficNetworkInformationRequest": {
                "allOf": [
                    {
                        "$ref": "#/$defs/TrafficNetworkInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "networkInformationType": {
                                "const": "fleet vehicle inventory"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "trafficNetworkInformationRequest"
        ]
    },
    "FleetVehicleInventoryResponse": {
        "description": "Send fleet vehicle inventory information to an external center",
        "type": "object",
        "$reqId": "3.3.4.5.1.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "FleetVehicleInventoryResponse"
            },
            "ownerOrganization": {
                "$reqId": "3.3.4.5.1.5.1.a",
                "description": "Information about the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "vehicleId": {
                "$reqId": "3.3.4.5.1.5.1.b",
                "description": "Unique identifier for the fleet vehicle",
                "type": "string"
            },
            "vehicleType": {
                "$reqId": "3.3.4.5.1.5.1.c",
                "description": "Classification of vehicle types such as transit, public safety, and maintenance vehicle.",
                "type": "string",
                "enum": [
                    "transit",
                    "public safety",
                    "maintenance vehicle"
                ]
            }
        },
        "required": [
            "messageType",
            "ownerOrganization",
            "vehicleId",
            "vehicleType"
        ]
    },
    "FleetVehicleRequest": {
        "description": "Requirements for a link status request from an external center to an owner center",
        "$reqId": "3.3.4.5.2.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "FleetVehicleRequest"
            },
            "trafficNetworkInformationRequest": {
                "allOf": [
                    {
                        "$ref": "#/$defs/TrafficNetworkInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "networkInformationType": {
                                "const": "fleet vehicle data"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "trafficNetworkInformationRequest"
        ]
    },
    "FleetVehicleResponse": {
        "description": "Send link status information to an external center",
        "type": "object",
        "$reqId": "3.3.4.5.2.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "FleetVehicleResponse"
            },
            "ownerOrganization": {
                "$reqId": "3.3.4.5.2.5.1.a",
                "description": "Information regarding the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "vehicleId": {
                "$reqId": "3.3.4.5.2.5.1.b",
                "description": "Unique identifier for the fleet vehicle",
                "type": "string"
            },
            "vehicleInformation": {
                "$reqId": "3.3.4.5.2.5.1.c",
                "description": "Information on location and speed of fleet vehicles",
                "$ref": "#/$defs/VehicleInformation"
            },
            "vehicleDriver": {
                "$reqId": "3.3.4.5.2.5.2.1",
                "description": "Driver for the fleet vehicle",
                "type": "string"
            },
            "vehicleOccupancy": {
                "$reqId": "3.3.4.5.2.5.2.2",
                "type": "number",
                "description": "Average percent vehicle occupancy, expressed as a percentage value with one decimal place of precision. For example, a value of 23.5 represents 23.5%.",
                "minimum": 0.0,
                "maximum": 100.0
            }
        },
        "required": [
            "messageType",
            "ownerOrganization",
            "vehicleId",
            "vehicleInformation"
        ]
    },
    "GateControlCancellationRequest": {
        "description": "Include gate control cancellation request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.6.5.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "GateControlCancellationRequest"
            },
            "deviceChangeCancellationRequest": {
                "$reqId": "3.3.5.6.5.2.a",
                "description": "Generic cancel device change request for gate device type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeCancellationRequest"
                    },
                    {
                        "properties": {
                            "deviceType": {
                                "const": "gate"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceCancellationChangeRequest"
        ]
    },
    "GateControlCancellationResponse": {
        "description": "Response to gate control cancellation request must be included in owner center's reply.",
        "type": "object",
        "$reqId": "3.3.5.6.5.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "GateControlCancellationResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.6.5.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "gate"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "GateControlCommandRequest": {
        "description": "Include gate command (gate open, gate closed) in the gate control request",
        "type": "object",
        "$reqId": "3.3.5.6.7.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "GateControlCommandRequest"
            },
            "deviceControlCommandHeader": {
                "$reqId": "3.3.5.6.7.2.a",
                "description": "Device control command header information for a gate device",
                "allOf": [
                    {
                        "$ref": "#/$defs/ExternalDeviceControlRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "gate"
                            }
                        }
                    }
                ]
            },
            "gateCommand": {
                "$reqId": "3.3.5.6.7.2.b",
                "description": "Command to open or close the gate",
                "type": "string",
                "enum": [
                    "gate open",
                    "gate closed"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceControlCommandHeader",
            "gateCommand"
        ]
    },
    "GateControlCommandResponse": {
        "description": "Owner center response to gate control command from external center",
        "type": "object",
        "$reqId": "3.3.5.6.7.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "GateControlCommandResponse"
            },
            "deviceControlCommandResponse": {
                "$reqId": "3.3.5.6.7.3.a",
                "description": "Information regarding the response to generic device control commands",
                "$ref": "#/$defs/ExternalDeviceControlCommandResponse"
            }
        },
        "required": [
            "messageType",
            "deviceControlCommandResponse"
        ]
    },
    "GateControlRequest": {
        "description": "Include gate request command in the control request (gate open, gate closed)",
        "type": "object",
        "$reqId": "3.3.5.6.3.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "GateControlRequest"
            },
            "deviceChangeRequestHeader": {
                "$reqId": "3.3.5.6.3.2.a",
                "description": "Generic device change request header information with the device type set to 'gate'.",
                "allOf": [
                    {
                        "$reqId": "3.3.5.3.5.2.a",
                        "description": "Generic cancel request for device change with device type set to 'cctv camera'",
                        "$ref": "#/$defs/DeviceChangeRequestHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "gate"
                            }
                        }
                    }
                ]
            },
            "gateRequestedCommand": {
                "$reqId": "3.3.5.6.3.2.b",
                "description": "Command for gate operations (open or closed)",
                "type": "string",
                "enum": [
                    "gate open",
                    "gate closed"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeRequestHeader",
            "gateRequestedCommand"
        ]
    },
    "GateControlResponse": {
        "description": "Include owner center response to a gate control request from an external center",
        "type": "object",
        "$reqId": "3.3.5.6.3.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "GateControlResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.6.3.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "gate"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "GateControlStatusRequest": {
        "description": "Include gate control status request details from an external center to an owner center",
        "type": "object",
        "$reqId": "3.3.5.6.4.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "GateControlStatusRequest"
            },
            "deviceChangeStatusRequest": {
                "$reqId": "3.3.5.6.4.2.a",
                "description": "Generic device change status request with specified device type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeStatusRequest"
                    },
                    {
                        "properties": {
                            "deviceType": {
                                "const": "gate"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeStatusRequest"
        ]
    },
    "GateControlStatusResponse": {
        "description": "Include response to gate control status request from external center",
        "type": "object",
        "$reqId": "3.3.5.6.4.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "GateControlStatusResponse"
            },
            "deviceControlResponseHeader": {
                "$reqId": "3.3.5.6.4.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "gate"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceControlResponseHeader"
        ]
    },
    "GateInventoryRequest": {
        "description": "Include gate inventory information request details for owner center from external center",
        "type": "object",
        "$reqId": "3.3.5.6.1.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "GateInventoryRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.6.1.4.a",
                "description": "Request for generic device information for a gate, specifying device inventory type.",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "gate"
                            },
                            "deviceInformationType": {
                                "const": "device inventory"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "GateInventoryResponse": {
        "description": "Gate inventory information for owner center to external center",
        "type": "object",
        "$reqId": "3.3.5.6.1.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "GateInventoryResponse"
            },
            "deviceInventoryHeaderInformation": {
                "$reqId": "3.3.5.6.1.5.1.a",
                "description": "Generic device inventory header information",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "numberLanesGateInventory": {
                "$reqId": "3.3.5.6.1.5.2.1",
                "description": "Provide the number of lanes controlled by the gate as part of the gate inventory information",
                "type": "number"
            }
        },
        "required": [
            "messageType",
            "deviceInventoryHeaderInformation"
        ]
    },
    "GateScheduleRequest": {
        "description": "Include gate time base schedule request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.6.6.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "GateScheduleRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.6.6.4.a",
                "description": "Generic device information request for gate device type and device schedule information type.",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "gate"
                            },
                            "deviceInformationType": {
                                "const": "device schedule"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "GateScheduleResponse": {
        "description": "Include gate action information (open/closed) in gate schedule",
        "type": "object",
        "$reqId": "3.3.5.6.6.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "GateScheduleResponse"
            },
            "deviceScheduleInformation": {
                "$reqId": "3.3.5.6.6.5.a",
                "description": "Generic device schedule information",
                "$ref": "#/$defs/DeviceScheduleInformation"
            },
            "gateAction": {
                "$reqId": "3.3.5.6.6.5.b",
                "description": "State of the gate (open or closed)",
                "type": "string",
                "enum": [
                    "gate open",
                    "gate closed"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceScheduleInformation",
            "gateAction"
        ]
    },
    "GateStatusRequest": {
        "description": "Include gate status request details in communication from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.6.2.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "GateStatusRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.6.2.4.a",
                "description": "Generic device information request for gate status",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "gate"
                            },
                            "deviceInformationType": {
                                "const": "device status"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "GateStatusResponse": {
        "description": "Include gate status of each device (opened, closed, partially open/closed) in the information sent to external center",
        "type": "object",
        "$reqId": "3.3.5.6.2.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "GateStatusResponse"
            },
            "deviceStatusHeader": {
                "$reqId": "3.3.5.6.2.5.a",
                "description": "Generic device status header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceStatusHeader"
                    },
                    {
                        "properties": {
                            "deviceStatuses": {
                                "items": {
                                    "allOf": [
                                        {
                                            "$ref": "#/$defs/DeviceStatus"
                                        },
                                        {
                                            "properties": {
                                                "deviceType": {
                                                    "const": "gate"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "gateStatus": {
                "$reqId": "3.3.5.6.2.5.b",
                "description": "Indicate the status of each gate device (opened, closed, partially open/closed)",
                "type": "string",
                "enum": [
                    "gate opened",
                    "gate closed",
                    "gate partially open/closed"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceStatusHeader",
            "gateStatus"
        ]
    },
    "IntersectionStatusRequest": {
        "description": "Include intersection status request details from an external center to an owner center",
        "type": "object",
        "$reqId": "3.3.5.9.3.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "IntersectionStatusRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.9.3.4.a",
                "description": "Generic device information request for signal controller status",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal controller"
                            },
                            "deviceInformationType": {
                                "const": "device status"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "IntersectionStatusResponse": {
        "description": "Include intersection status information from owner center to external center",
        "type": "object",
        "$reqId": "3.3.5.9.3.5.1",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "IntersectionStatusResponse"
            },
            "deviceStatusHeader": {
                "$reqId": "3.3.5.9.3.5.1.a",
                "description": "Generic device status header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceStatusHeader"
                    },
                    {
                        "properties": {
                            "deviceStatuses": {
                                "items": {
                                    "allOf": [
                                        {
                                            "$ref": "#/$defs/DeviceStatus"
                                        },
                                        {
                                            "properties": {
                                                "deviceType": {
                                                    "const": "signal controller"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "signalControlSource": {
                "$reqId": "3.3.5.9.3.5.1.b",
                "description": "Signal control source for the signal controller",
                "type": "string",
                "enum": [
                    "Unknown",
                    "other",
                    "central-time-of-day (intersection)",
                    "central-operator-commanded (intersection)",
                    "central-time-of-day (section)",
                    "central-operator-commanded (section)",
                    "local",
                    "local-time-of-day",
                    "local-manual",
                    "local-backup- loss-of-central",
                    "central-adaptive"
                ]
            },
            "plannedSignalTimingMode": {
                "$reqId": "3.3.5.9.3.5.1.c",
                "description": "Planned signal timing mode of the signal controller including various modes such as local, central, and coordinated options.",
                "type": "string",
                "enum": [
                    "unknown",
                    "other",
                    "local",
                    "local-manual",
                    "local-time-of-day",
                    "local-traffic-responsive",
                    "central-time-of-day",
                    "central-traffic-responsive",
                    "central-hold-force-omit",
                    "central-holiday-schedule",
                    "central-standby",
                    "coordinated-critical-\nintersection-control",
                    "coordinated-adaptive",
                    "coordinated-transit-priority",
                    "flash-programmed"
                ]
            },
            "currentSignalTimingMode": {
                "$reqId": "3.3.5.9.3.5.1.d",
                "description": "Current signal timing mode of the signal controller",
                "type": "string",
                "enum": [
                    "unknown",
                    "other",
                    "free",
                    "fixed-time",
                    "actuated",
                    "semi-actuated",
                    "critical intersection control",
                    "traffic responsive",
                    "adaptive",
                    "flash-programmed",
                    "conflict-flash",
                    "free due to fault",
                    "flash-automatic",
                    "flash-preempt",
                    "flash-local-manual",
                    "flash-fault",
                    "flash-mmu/cmu",
                    "flash-reasons-unknown",
                    "flash-startup",
                    "special function",
                    "coordinated alarm",
                    "transition",
                    "preempt",
                    "signal-priority",
                    "standby"
                ]
            },
            "sectionIdentifierIntersectionStatus": {
                "$reqId": "3.3.5.9.3.5.2.1",
                "description": "Provide unique identifier of the section assigned to the intersection in status information; if none, value shall be NULL.",
                "type": "string"
            },
            "plannedSignalTimingModeDescription": {
                "$reqId": "3.3.5.9.3.5.2.2",
                "description": "Provide a textual description of the planned signal timing mode as part of intersection status information",
                "type": "string"
            },
            "timingPatternIdentifierCurrent": {
                "$reqId": "3.3.5.9.3.5.2.3",
                "description": "Provide the signal timing pattern number in intersection status information",
                "type": "number"
            },
            "timingPatternDescription": {
                "$reqId": "3.3.5.9.3.5.2.4",
                "description": "Provide current signal timing pattern description as part of intersection status information",
                "type": "string"
            },
            "actuationMode": {
                "$reqId": "3.3.5.9.3.5.2.5",
                "description": "Indicate the current actuation mode of the planned signal timing mode in intersection status information",
                "type": "string",
                "enum": [
                    "fixed-time",
                    "semi-actuated",
                    "fully-actuated",
                    "unknown",
                    "other"
                ]
            },
            "phaseRecalls": {
                "$reqId": "3.3.5.9.3.5.2.6",
                "description": "Indicate operational characteristics of each phase in intersection status information",
                "type": "string",
                "enum": [
                    "minimumVehicleRecall",
                    "maximumVehicleRecall",
                    "pedestrianRecall",
                    "minimumVehicleAndPedestrianRecall",
                    "maximumVehicleAndPedestrianRecall",
                    "softRecall",
                    "softAndPedestrianRecall",
                    "phaseOmitted",
                    "other",
                    "none"
                ]
            },
            "cycleLengthPlanned": {
                "$reqId": "3.3.5.9.3.5.2.7",
                "description": "Provide the planned cycle length of the current signal timing pattern in seconds as part of intersection status information.",
                "type": "number"
            },
            "cycleLengthCurrent": {
                "$reqId": "3.3.5.9.3.5.2.8",
                "description": "Provide the actual cycle length of the traffic signal controller in seconds as part of intersection status information.",
                "type": "number"
            },
            "cycleLengthPrevious": {
                "$reqId": "3.3.5.9.3.5.2.9",
                "description": "Provide actual cycle length in seconds for the previous cycle of the traffic signal controller as part of intersection status information.",
                "type": "number"
            },
            "fieldManagementStationCycleLengthActual": {
                "$reqId": "3.3.5.9.3.5.2.10",
                "description": "Provide actual cycle length in seconds for the current cycle of the field management station as part of intersection status information.",
                "type": "number"
            },
            "localControllerCycleCounter": {
                "$reqId": "3.3.5.9.3.5.2.11",
                "description": "Provide local cycle timer information for the current cycle of the traffic signal controller in seconds as part of intersection status information.",
                "type": "number"
            },
            "fieldManagementStationCycleCounter": {
                "$reqId": "3.3.5.9.3.5.2.12",
                "description": "Provide field management station cycle timer information for the current cycle of the local controller in seconds as part of intersection status information.",
                "type": "number"
            },
            "offsetReference": {
                "$reqId": "3.3.5.9.3.5.2.13",
                "description": "Indicate the reference point of the coordinated phase for the signal timing offset in intersection status information.",
                "type": "string",
                "enum": [
                    "start of green",
                    "end of green",
                    "end of yellow",
                    "start of pedestrian clearance"
                ]
            },
            "offsetPlanned": {
                "$reqId": "3.3.5.9.3.5.2.14",
                "description": "Provide planned offset of current signal timing pattern in seconds as part of intersection status information",
                "type": "number"
            },
            "offsetActual": {
                "$reqId": "3.3.5.9.3.5.2.15",
                "description": "Provide the actual offset for the current cycle in seconds as part of intersection status information.",
                "type": "number"
            },
            "offsetPrevious": {
                "$reqId": "3.3.5.9.3.5.2.16",
                "description": "Provide the actual offset for the previous cycle in seconds as part of intersection status information.",
                "type": "number"
            },
            "controllerTimestamp": {
                "$reqId": "3.3.5.9.3.5.2.17",
                "description": "Provide current date and time on traffic signal controller as part of intersection status information",
                "type": "number"
            },
            "coordinatedPhases": {
                "$reqId": "3.3.5.9.3.5.2.18",
                "description": "Provide identifiers for current coordinated phases in intersection status information.",
                "type": "string"
            },
            "phaseSplits": {
                "$reqId": "3.3.5.9.3.5.2.19",
                "description": "Indicate the current phase split time in tenths of a second as part of the intersection status information for each phase.",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "ringStatus": {
                "$reqId": "3.3.5.9.3.5.2.20",
                "description": "Indicate current status of each ring in intersection status information",
                "type": "string",
                "enum": [
                    "minimum green",
                    "extension",
                    "maximum green",
                    "green rest",
                    "yellow change",
                    "red clearance",
                    "red rest",
                    "undefined",
                    "gap out",
                    "max out",
                    "force off"
                ]
            },
            "activePhaseSequence": {
                "$reqId": "3.3.5.9.3.5.2.21",
                "description": "Provide phase identifiers of currently active phases in sequential order for each ring in the intersection status information.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "phaseStatusGreens": {
                "$reqId": "3.3.5.9.3.5.2.22",
                "description": "Indicate which phases are green in intersection status information",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "phaseStatusYellows": {
                "$reqId": "3.3.5.9.3.5.2.23",
                "description": "Indicate which phases are currently yellow in the intersection status information",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "phaseStatusReds": {
                "$reqId": "3.3.5.9.3.5.2.24",
                "description": "Indicate which phases are currently red in the intersection status information",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "phaseStatusWalks": {
                "$reqId": "3.3.5.9.3.5.2.25",
                "description": "Indicate current walk phases in intersection status information",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "phaseStatusPedestrianClearance": {
                "$reqId": "3.3.5.9.3.5.2.26",
                "description": "Indicate which phases are currently flashing-don't-walk in intersection status information.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "phaseStatusDontWalks": {
                "$reqId": "3.3.5.9.3.5.2.27",
                "description": "Indicate steady-don't-walk phases in intersection status information",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "overlapStatusGreens": {
                "$reqId": "3.3.5.9.3.5.2.28",
                "description": "Indicate which overlaps are currently green in intersection status information",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "overlapStatusYellows": {
                "$reqId": "3.3.5.9.3.5.2.29",
                "description": "Indicate which overlaps are currently yellow in intersection status information",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "overlapStatusReds": {
                "$reqId": "3.3.5.9.3.5.2.30",
                "description": "Indicate which overlaps are currently red in the intersection status information for each signal.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "specialFunctions": {
                "$reqId": "3.3.5.9.3.5.2.31",
                "description": "Indicate active special function numbers as part of intersection status information for each signal.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "signalPriority": {
                "$reqId": "3.3.5.9.3.5.2.32",
                "description": "Provide a text description of preemption or signal priority for each intersection in the status information.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "required": [
            "messageType",
            "deviceStatusHeader",
            "signalControlSource",
            "plannedSignalTimingMode",
            "currentSignalTimingMode"
        ]
    },
    "LCSChangeCancellationRequest": {
        "description": "Include details of the cancel LCS change request from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.7.5.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LCSChangeCancellationRequest"
            },
            "deviceChangeCancellationRequest": {
                "$reqId": "3.3.5.7.5.2.a",
                "description": "Generic cancel device change request for lane control signal",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeCancellationRequest"
                    },
                    {
                        "properties": {
                            "deviceType": {
                                "const": "lane control signal"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeCancellationRequest"
        ]
    },
    "LCSChangeCancellationResponse": {
        "description": "Include response details to LCS change cancellation request from external center",
        "type": "object",
        "$reqId": "3.3.5.7.5.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LCSChangeCancellationResponse"
            },
            "deviceChangeResponse": {
                "$reqId": "3.3.5.7.5.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "lane control signal"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponse"
        ]
    },
    "LCSChangeRequest": {
        "description": "Include lane control signal indication requested in LCS change request",
        "type": "object",
        "$reqId": "3.3.5.7.3.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LCSChangeRequest"
            },
            "deviceChangeStatusRequest": {
                "$reqId": "3.3.5.7.3.2.a",
                "description": "Header information for device change request for lane control signal",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeStatusRequest"
                    },
                    {
                        "properties": {
                            "deviceType": {
                                "const": "lane control signal"
                            }
                        }
                    }
                ]
            },
            "laneControlSignal": {
                "$reqId": "3.3.5.7.3.2.b",
                "description": "Indicates lane control signal status (open, closed, other)",
                "type": "string",
                "enum": [
                    "lane open",
                    "lane closed",
                    "other"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeStatusRequest",
            "laneControlSignal"
        ]
    },
    "LCSChangeResponse": {
        "description": "Response to LCS change request shall include specified information from the owner center",
        "type": "object",
        "$reqId": "3.3.5.7.3.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LCSChangeResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.7.3.3.a",
                "description": "Header information for generic device change response",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "lane control signal"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "LCSChangeStatusRequest": {
        "description": "Information required for LCS change status request from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.7.4.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LCSChangeStatusRequest"
            },
            "deviceChangeStatusRequest": {
                "$reqId": "3.3.5.7.4.2.a",
                "description": "Generic device change status request for lane control signal",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeStatusRequest"
                    },
                    {
                        "properties": {
                            "deviceType": {
                                "const": "lane control signal"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeStatusRequest"
        ]
    },
    "LCSChangeStatusResponse": {
        "description": "Include response to LCS change status request from external center",
        "type": "object",
        "$reqId": "3.3.5.7.4.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LCSChangeStatusResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.7.4.3.a",
                "description": "Header information for generic device change response",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "lane control signal"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "LCSControlCommandRequest": {
        "description": "Include lane control command in the LCS control command sent to owner center.",
        "type": "object",
        "$reqId": "3.3.5.7.7.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LCSControlCommandRequest"
            },
            "deviceControlCommandHeader": {
                "$reqId": "3.3.5.7.7.2.a",
                "description": "Generic device control command header information for lane control signal",
                "allOf": [
                    {
                        "$ref": "#/$defs/ExternalDeviceControlRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "lane control signal"
                            }
                        }
                    }
                ]
            },
            "laneControlCommand": {
                "$reqId": "3.3.5.7.7.2.b",
                "description": "Commands for lane control (open, closed, other)",
                "type": "string",
                "enum": [
                    "lane open",
                    "lane closed",
                    "other"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceControlCommandHeader",
            "laneControlCommand"
        ]
    },
    "LCSControlCommandResponse": {
        "description": "Owner center response to an LCS control command from an external center",
        "type": "object",
        "$reqId": "3.3.5.7.7.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LCSControlCommandResponse"
            },
            "deviceControlCommandResponse": {
                "$reqId": "3.3.5.7.7.3.a",
                "description": "Response information for generic device control commands",
                "$ref": "#/$defs/ExternalDeviceControlCommandResponse"
            }
        },
        "required": [
            "messageType",
            "deviceControlCommandResponse"
        ]
    },
    "LCSInventoryInformationRequest": {
        "description": "Include LCS inventory information request details in communication from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.7.1.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LCSInventoryInformationRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.7.1.4.a",
                "description": "Generic device information request for lane control signal device inventory",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "lane control signal"
                            },
                            "deviceInformationType": {
                                "const": "device inventory"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "LCSInventoryInformationResponse": {
        "description": "LCS inventory information to send to an external center",
        "type": "object",
        "$reqId": "3.3.5.7.1.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LCSInventoryInformationResponse"
            },
            "deviceInventoryHeader": {
                "$reqId": "3.3.5.7.1.5.1.a",
                "description": "Generic device inventory header information",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "deviceId": {
                "$reqId": "3.3.5.7.1.5.1.b",
                "description": "Unique identifier for the link controlled by each device",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "controlledLaneNumber": {
                "$reqId": "3.3.5.7.1.5.1.c",
                "description": "Lane number controlled by the device",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "lanesNumber": {
                "$reqId": "3.3.5.7.1.5.2.1",
                "description": "Provide the number of lanes on the link as part of the LCS inventory information for each LCS.",
                "type": "array",
                "items": {
                    "type": "number"
                }
            }
        },
        "required": [
            "messageType",
            "deviceInventoryHeader",
            "deviceId",
            "controlledLaneNumber"
        ]
    },
    "LCSScheduleRequest": {
        "description": "Include LCS time base schedule request details in communication from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.7.6.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LCSScheduleRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.7.6.4.a",
                "description": "Generic device schedule information for lane control signals",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "lane control signal"
                            },
                            "deviceInformationType": {
                                "const": "device schedule"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "LCSScheduleResponse": {
        "description": "Include lane control signal indication in LCS schedule information",
        "type": "object",
        "$reqId": "3.3.5.7.6.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LCSScheduleResponse"
            },
            "deviceScheduleInformation": {
                "$reqId": "3.3.5.7.6.5.a",
                "description": "Generic device schedule information",
                "$ref": "#/$defs/DeviceScheduleInformation"
            },
            "laneControlSignalIndication": {
                "$reqId": "3.3.5.7.6.5.b",
                "description": "Indication of lane control signal status (open, closed, or other)",
                "type": "string",
                "enum": [
                    "lane open",
                    "lane closed",
                    "other"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceScheduleInformation",
            "laneControlSignalIndication"
        ]
    },
    "LCSStatusRequest": {
        "description": "Include LCS status request details in external center to owner center communication",
        "type": "object",
        "$reqId": "3.3.5.7.2.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LCSStatusRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.7.2.4.a",
                "description": "Generic device information request for lane control signal status",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "lane control signal"
                            },
                            "deviceInformationType": {
                                "const": "device status"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "LCSStatusResponse": {
        "description": "Include lane status and link direction in LCS status information",
        "type": "object",
        "$reqId": "3.3.5.7.2.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LCSStatusResponse"
            },
            "deviceStatusHeader": {
                "$reqId": "3.3.5.7.2.5.a",
                "description": "Generic device status header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceStatusHeader"
                    },
                    {
                        "properties": {
                            "deviceStatuses": {
                                "items": {
                                    "allOf": [
                                        {
                                            "$ref": "#/$defs/DeviceStatus"
                                        },
                                        {
                                            "properties": {
                                                "deviceType": {
                                                    "const": "lane control signal"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "lanesStatus": {
                "$reqId": "3.3.5.7.2.5.b",
                "description": "Status of the lane (open, closed, opening, closing, unknown, turning lane)",
                "type": "string",
                "enum": [
                    "open",
                    "closed",
                    "opening",
                    "closing",
                    "unknown",
                    "turning lane"
                ]
            },
            "linkDirection": {
                "$reqId": "3.3.5.7.2.5.c",
                "description": "Define link direction options (e.g., northbound, eastbound, both directions, etc.)",
                "type": "string",
                "enum": [
                    "northbound",
                    "northeast bound",
                    "eastbound",
                    "southeast bound",
                    "southbound",
                    "southwest bound",
                    "westbound",
                    "northwest bound",
                    "not directional",
                    "positive direction",
                    "negativedirection",
                    "both directions",
                    "other"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceStatusHeader",
            "lanesStatus",
            "linkDirection"
        ]
    },
    "LinkInventoryRequest": {
        "description": "Requirements for link inventory request are detailed in Section 3.3.4.1.1.",
        "$reqId": "3.3.4.3.1.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LinkInventoryRequest"
            },
            "trafficNetworkInformationRequest": {
                "allOf": [
                    {
                        "$ref": "#/$defs/TrafficNetworkInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "networkInformationType": {
                                "const": "link inventory"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "trafficNetworkInformationRequest"
        ]
    },
    "LinkInventoryResponse": {
        "description": "Send link inventory information to an external center",
        "type": "object",
        "$reqId": "3.3.4.3.1.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LinkInventoryResponse"
            },
            "ownerOrganization": {
                "$reqId": "3.3.4.3.1.5.1.a",
                "description": "Information about the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "rodwayNetworkId": {
                "$reqId": "3.3.4.3.1.5.1.b",
                "description": "Unique identifier for the roadway network",
                "type": "string"
            },
            "links": {
                "$reqId": "3.3.4.3.1.5.1.c",
                "description": "Unique identifier for each link",
                "type": "array",
                "items": {
                    "$ref": "#/$defs/Link"
                }
            },
            "restrictions": {
                "$reqId": "3.3.4.3.1.5.2.1",
                "description": "Owner center restrictions on information dissemination in link inventory",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "ownerOrganization",
            "rodwayNetworkId",
            "links"
        ]
    },
    "LinkStatusRequest": {
        "description": "Requirements for a link status request from an external center",
        "$reqId": "3.3.4.3.2.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LinkStatusRequest"
            },
            "trafficNetworkInformationRequest": {
                "allOf": [
                    {
                        "$ref": "#/$defs/TrafficNetworkInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "networkInformationType": {
                                "const": "link status"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "trafficNetworkInformationRequest"
        ]
    },
    "LinkStatusResponse": {
        "description": "Send link status information to an external center",
        "type": "object",
        "$reqId": "3.3.4.3.2.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "LinkStatusResponse"
            },
            "ownerOrganization": {
                "$reqId": "3.3.4.3.2.5.1.a",
                "description": "Information regarding the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "roadwayNetworkId": {
                "$reqId": "3.3.4.3.2.5.1.b",
                "description": "Unique identifier for the roadway network",
                "type": "string"
            },
            "linkStatus": {
                "$reqId": "3.3.4.3.2.5.1.c",
                "description": "Unique identifier for each requested link",
                "type": "array",
                "items": {
                    "$ref": "#/$defs/LinkStatus"
                }
            },
            "restrictions": {
                "$reqId": "3.3.4.3.2.5.2.1",
                "description": "Requirements for the owner center to restrict information dissemination in link status",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "ownerOrganization",
            "roadwayNetworkId",
            "linkStatus"
        ]
    },
    "MeteringPlanRequest": {
        "description": "Include metering plan inventory request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.8.7.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "MeteringPlanRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.8.7.4.a",
                "description": "Generic device information request for ramp meter with device information type set to device plan",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "ramp meter"
                            },
                            "deviceInformationType": {
                                "const": "device plan"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "MeteringPlanResponse": {
        "description": "Metering plan inventory information to send from owner center to external center",
        "type": "object",
        "$reqId": "3.3.5.8.7.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "MeteringPlanResponse"
            },
            "deviceInventoryHeader": {
                "$reqId": "3.3.5.8.7.5.1.a",
                "description": "Generic device inventory header information",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "meterPlan": {
                "$reqId": "3.3.5.8.7.5.1.b",
                "description": "Unique identifier for the metering plan",
                "type": "number"
            },
            "meterLevel": {
                "$reqId": "3.3.5.8.7.5.1.c",
                "description": "Level of measurement for metering",
                "type": "number"
            },
            "meterRate": {
                "$reqId": "3.3.5.8.7.5.1.d",
                "description": "Rate of vehicles metered per hour",
                "type": "number"
            },
            "flowRateThreshold": {
                "$reqId": "3.3.5.8.7.5.1.e",
                "description": "Threshold for flow rate measured in vehicles per hour",
                "type": "number"
            },
            "occupancyThreshold": {
                "$reqId": "3.3.5.8.7.5.1.f",
                "description": "Occupancy threshold represented in tenths of percent",
                "type": "number"
            },
            "speedThreshold": {
                "$reqId": "3.3.5.8.7.5.1.g",
                "description": "Speed threshold in kilometers per hour",
                "type": "number"
            },
            "meteringPlanDateTimeChangeInformation": {
                "$reqId": "3.3.5.8.7.5.2.1",
                "description": "Provide the date and time of the last change to the metering plan as part of the metering plan information",
                "$ref": "#/$defs/DateTime"
            }
        },
        "required": [
            "messageType",
            "deviceInventoryHeader",
            "meterPlan",
            "meterLevel",
            "meterRate",
            "flowRateThreshold",
            "occupancyThreshold",
            "speedThreshold"
        ]
    },
    "NodeInventoryInformationResponse": {
        "description": "Send node inventory information to an external center",
        "type": "object",
        "$reqId": "3.3.4.2.1.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "NodeInventoryInformationResponse"
            },
            "ownerOrganization": {
                "$reqId": "3.3.4.2.1.5.1.a",
                "description": "Information regarding the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "roadwayNetworkId": {
                "$reqId": "3.3.4.2.1.5.1.b",
                "description": "Unique identifier for the roadway network",
                "type": "string"
            },
            "nodes": {
                "$reqId": "3.3.4.2.1.5.1.c",
                "description": "Unique identifier for each node",
                "type": "array",
                "items": {
                    "$ref": "#/$defs/Node"
                }
            },
            "restrictions": {
                "$reqId": "3.3.4.2.1.5.2.1",
                "description": "Owner center restrictions on information dissemination in node inventory are outlined in Section 3.3.1.9.1.",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "ownerOrganization",
            "roadwayNetworkId",
            "nodes"
        ]
    },
    "NodeInventoryRequest": {
        "description": "Requirements for a node inventory request from an external center to an owner center",
        "$reqId": "3.3.4.2.1.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "NodeInventoryRequest"
            },
            "trafficNetworkInformationRequest": {
                "allOf": [
                    {
                        "$ref": "#/$defs/TrafficNetworkInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "networkInformationType": {
                                "const": "node inventory"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "trafficNetworkInformationRequest"
        ]
    },
    "NodeStatusRequest": {
        "description": "Requirements for node status request from external center to owner center",
        "$reqId": "3.3.4.2.2.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "NodeStatusRequest"
            },
            "trafficNetworkInformationRequest": {
                "allOf": [
                    {
                        "$ref": "#/$defs/TrafficNetworkInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "networkInformationType": {
                                "const": "node status"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "trafficNetworkInformationRequest"
        ]
    },
    "NodeStatusResponse": {
        "description": "Send node status information to an external center",
        "type": "object",
        "$reqId": "3.3.4.2.2.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "NodeStatusResponse"
            },
            "ownerOrganization": {
                "$reqId": "3.3.4.2.2.5.1.a",
                "description": "Information about the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "roadwayNetworkId": {
                "$reqId": "3.3.4.2.2.5.1.b",
                "description": "Unique identifier for the roadway network",
                "type": "string"
            },
            "nodesStatus": {
                "$reqId": "3.3.4.2.2.5.1.c",
                "description": "Unique identifier for each requested node",
                "type": "array",
                "items": {
                    "$ref": "#/$defs/NodeStatus"
                }
            },
            "restrictions": {
                "$reqId": "3.3.4.2.2.5.2.1",
                "description": "Requirements for owner center restrictions on information dissemination in node status",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "roadwayNetworkId",
            "nodesStatus"
        ]
    },
    "OrganizationInformationRequest": {
        "description": "Send an organization information request to an owner center",
        "type": "object",
        "$reqId": "3.3.2.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "OrganizationInformationRequest"
            },
            "organizationId": {
                "$reqId": "3.3.2.4.1.a",
                "description": "Unique identifier for the requesting organization",
                "type": "string"
            },
            "organizationInformationType": {
                "$reqId": "3.3.2.4.1.b",
                "description": "Type of organization information (e.g., organization, center)",
                "$ref": "#/$defs/OrganizationTypes"
            },
            "authInformation": {
                "$reqId": "3.3.2.4.2.1",
                "description": "Requirements for authentication from external center to owner center in organization information request",
                "$ref": "#/$defs/AuthHeader"
            },
            "ownerOrganizationId": {
                "$reqId": "3.3.2.4.2.2",
                "description": "Provide unique identifier of the organization in the information request",
                "type": "string"
            },
            "ownerCenterId": {
                "$reqId": "3.3.2.4.2.3",
                "description": "Provide unique identifier for each center in the organization information request",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "organizationId",
            "organizationInformationType"
        ]
    },
    "OrganizationInformationResponse": {
        "description": "Send organization information to an external center",
        "$reqId": "3.3.2.5",
                "type": "object",
        "allOf": [
            {
                "type": "object",
                "properties": {
                    "messageType": {
                        "type": "string",
                        "const": "OrganizationInformationResponse"
                    }
                },
                "required": [
                    "messageType"
                ]
            },
            {
                "$ref": "#/$defs/OrganizationInformation"
            }
        ]
    },
    "ProcessingDocMetaDataInfoRequest": {
        "description": "Send processing documentation metadata information request to owner center",
        "type": "object",
        "$reqId": "3.3.6.2.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ProcessingDocMetaDataInfoRequest"
            },
            "usernameRequestingOperator": {
                "$reqId": "3.3.6.2.2.1.a",
                "description": "User name of the requesting operator",
                "type": "string"
            },
            "authentication": {
                "$reqId": "3.3.6.2.2.1.b",
                "description": "Password of the requesting operator",
                "type": "string"
            },
            "organizationInfo": {
                "$reqId": "3.3.6.2.2.1.c",
                "description": "Requesting organization information",
                "$ref": "#/$defs/OrganizationInformation"
            }
        },
        "required": [
            "messageType",
            "usernameRequestingOperator",
            "authentication",
            "organizationInfo"
        ]
    },
    "ProcessingDocMetaDataInfoResponse": {
        "description": "Send processing documentation metadata information to external centers",
        "type": "object",
        "$reqId": "3.3.6.2.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ProcessingDocMetaDataInfoResponse"
            },
            "organizationInfo": {
                "$reqId": "3.3.6.2.3.1.a",
                "description": "Information regarding the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "lastUpdateDate": {
                "$reqId": "3.3.6.2.3.1.b",
                "description": "Date the metadata was created or last updated",
                "$ref": "#/$defs/DateTime"
            },
            "processingMetadataName": {
                "$reqId": "3.3.6.2.3.1.c",
                "description": "Name assigned to the metadata standard by the owner organization",
                "type": "string"
            },
            "processingMetadataVersion": {
                "$reqId": "3.3.6.2.3.1.d",
                "description": "Unique identifier for the version of the metadata",
                "type": "string"
            },
            "restrictionsArchiveMetadata": {
                "$reqId": "3.3.6.2.3.2.1",
                "description": "Requirements for owner center restrictions on information dissemination in processing documentation metadata",
                "$ref": "#/$defs/Restrictions"
            },
            "publicationDateTime": {
                "$reqId": "3.3.6.2.3.2.2",
                "description": "Provide the publication date and time of the processing documentation metadata",
                "$ref": "#/$defs/DateTime"
            },
            "processingMethod": {
                "$reqId": "3.3.6.2.3.2.3",
                "description": "Provide the name of the processing method used in processing documentation metadata",
                "type": "string"
            },
            "processingMethodDescription": {
                "$reqId": "3.3.6.2.3.2.4",
                "description": "Provide a description of the processing method used in processing documentation metadata",
                "type": "string"
            },
            "applicationRules": {
                "$reqId": "3.3.6.2.3.2.5",
                "description": "Provide rules for method application to original source data in processing documentation metadata.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "enumeration": {
                "$reqId": "3.3.6.2.3.2.6",
                "description": "Provide an enumeration of processing method results in processing documentation metadata",
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "required": [
            "messageType",
            "organizationInfo",
            "lastUpdateDate",
            "processingMetadataName",
            "processingMetadataVersion"
        ]
    },
    "RSUDataRequest": {
        "description": "Contents of a RSU data request for an external center to send to an owner center",
        "type": "object",
        "$reqId": "3.3.5.10.3.1",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RSUDataRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.10.3.4.1.a",
                "description": "Generic device information request for RSU device type and device data information type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "roadside unit"
                            },
                            "deviceInformationType": {
                                "const": "device data"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "RSUDataResponse": {
        "description": "RSU data information for transmission from owner center to external center",
        "type": "object",
        "$reqId": "3.3.5.10.3.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RSUDataResponse"
            },
            "organizationId": {
                "$reqId": "3.3.5.10.3.5.1.a",
                "description": "Unique identifier for the owner organization",
                "type": "string"
            },
            "messages": {
                "type": "array",
                "items": {
                    "ref": "#/$defs/RSUMessage"
                }
            }
        },
        "required": [
            "messageType",
            "organizationId",
            "messages"
        ]
    },
    "RSUInventoryRequest": {
        "description": "Include roadside unit (RSU) inventory information request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.10.1.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RSUInventoryRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.10.1.4.a",
                "description": "Generic device information request for roadside unit device inventory",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "roadside unit"
                            },
                            "deviceInformationType": {
                                "const": "device inventory"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "RSUInventoryResponse": {
        "description": "Roadside unit (RSU) inventory information to send from owner center to external center",
        "type": "object",
        "$reqId": "3.3.5.10.1.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RSUInventoryResponse"
            },
            "deviceInventoryHeader": {
                "$reqId": "3.3.5.10.1.5.1.a",
                "description": "Generic device inventory header information",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            }
        },
        "required": [
            "messageType",
            "deviceInventoryHeader"
        ]
    },
    "RSUStatusRequest": {
        "description": "Include RSU status request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.10.2.1",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RSUStatusRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.10.2.4.a",
                "description": "Generic device information request for CCTV camera with device status",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "roadside unit"
                            },
                            "deviceInformationType": {
                                "const": "device status"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "RSUStatusResponse": {
        "description": "RSU status information for owner center to send to external center",
        "type": "object",
        "$reqId": "3.3.5.10.2.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RSUStatusResponse"
            },
            "deviceStatusHeader": {
                "$reqId": "3.3.5.10.2.5.1.a",
                "description": "Generic device status header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceStatusHeader"
                    },
                    {
                        "properties": {
                            "deviceStatuses": {
                                "items": {
                                    "allOf": [
                                        {
                                            "$ref": "#/$defs/DeviceStatus"
                                        },
                                        {
                                            "properties": {
                                                "deviceType": {
                                                    "const": "roadside unit"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "statusMessage": {
                "$reqId": "3.3.5.10.2.5.2.1",
                "description": "The status of the enrollment certificates for an RSU.",
                "type": "string",
                "enum": [
                    "unknown",
                    "not enrolled",
                    "enrolled",
                    "other"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceStatusHeader"
        ]
    },
    "RampMeterChangeCancellationRequest": {
        "description": "Include ramp meter change cancellation request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.8.5.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterChangeCancellationRequest"
            },
            "deviceChangeCancellationRequest": {
                "$reqId": "3.3.5.8.5.2.a",
                "description": "Generic cancel device change request for ramp meter",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeCancellationRequest"
                    },
                    {
                        "properties": {
                            "deviceType": {
                                "const": "ramp meter"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeCancellationRequest"
        ]
    },
    "RampMeterChangeCancellationResponse": {
        "description": "Include response to ramp meter change cancellation request from external center",
        "type": "object",
        "$reqId": "3.3.5.8.5.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterChangeCancellationResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.8.5.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "ramp meter"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "RampMeterChangeRequest": {
        "description": "Contents for a ramp meter change request from an external center to an owner center",
        "type": "object",
        "$reqId": "3.3.5.8.3.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterChangeRequest"
            },
            "deviceChangeRequestHeader": {
                "$reqId": "3.3.5.8.3.2.1.a",
                "description": "Generic device change request header information with device type set to 'ramp meter'",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeRequestHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "ramp meter"
                            }
                        }
                    }
                ]
            },
            "meteredLaneId": {
                "$reqId": "3.3.5.8.3.2.1.b",
                "description": "Unique identifier for metered lanes",
                "type": "string"
            },
            "operationalModeRequested": {
                "$reqId": "3.3.5.8.3.2.1.c",
                "description": "Operational mode requested options including dark, restInGreen, fixedRate, trafficResponsive, emergencyGreen, holdMeter, holdnonMeter, holdRestInGreen.",
                "ref": "#/$defs/DeviceOperationalModes"
            },
            "requestedPlanRampMeterChange": {
                "$reqId": "3.3.5.8.3.2.2",
                "description": "Provide metering plan number for ramp meter change request if operational mode is trafficResponsive",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "requestedRateRampMeterChange": {
                "$reqId": "3.3.5.8.3.2.3",
                "description": "Indicate requested metering rate in ramp meter change request for each metered lane",
                "type": "array",
                "items": {
                    "type": "number"
                }
            }
        },
        "required": [
            "messageType",
            "deviceChangeRequestHeader",
            "meteredLaneId",
            "operationalModeRequested"
        ]
    },
    "RampMeterChangeResponse": {
        "description": "Response to ramp meter change request shall be included by the owner center",
        "type": "object",
        "$reqId": "3.3.5.8.3.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterChangeResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.8.3.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "ramp meter"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "RampMeterChangeStatusRequest": {
        "description": "Include ramp meter change status request from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.8.4.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterChangeStatusRequest"
            },
            "deviceChangeStatusRequest": {
                "$reqId": "3.3.5.8.4.2.a",
                "description": "Generic device change status request for ramp meter device type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeStatusRequest"
                    },
                    {
                        "properties": {
                            "deviceType": {
                                "const": "ramp meter"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeStatusRequest"
        ]
    },
    "RampMeterChangeStatusResponse": {
        "description": "Include requirements to cancel a ramp meter change request in the owner center response",
        "type": "object",
        "$reqId": "3.3.5.8.4.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterChangeStatusResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.8.4.3.a",
                "description": "Generic device change response header information for ramp meter",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "ramp meter"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "RampMeterControlCommandRequest": {
        "description": "Content of the ramp meter control command",
        "type": "object",
        "$reqId": "3.3.5.8.9.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterControlCommandRequest"
            },
            "deviceControlRequestHeader": {
                "$reqId": "3.3.5.8.9.2.1.a",
                "description": "Header information for generic device control command with device type set to 'ramp meter'",
                "allOf": [
                    {
                        "$ref": "#/$defs/ExternalDeviceControlRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "ramp meter"
                            }
                        }
                    }
                ]
            },
            "meteredLaneIdentifier": {
                "$reqId": "3.3.5.8.9.2.1.b",
                "description": "Unique identifier for metered lanes",
                "type": "string"
            },
            "operationalModeRequested": {
                "$reqId": "3.3.5.8.9.2.1.c",
                "description": "Specify the requested operational mode (e.g., dark, restInGreen, fixedRate, trafficResponsive, emergencyGreen, holdMeter, holdNonMeter, holdRestInGreen).",
                "$ref": "#/$defs/DeviceOperationalModes"
            },
            "commandRampMeterControlPlan": {
                "$reqId": "3.3.5.8.9.2.2",
                "description": "Provide the metering plan number as part of the ramp meter control command for each metered lane if operational mode is trafficResponsive.",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "commandRampMeterControlRate": {
                "$reqId": "3.3.5.8.9.2.3",
                "description": "Indicate requested metering rate in vehicles per hour for ramp meter control request",
                "type": "array",
                "items": {
                    "type": "number"
                }
            }
        },
        "required": [
            "messageType",
            "deviceControlRequestHeader",
            "meteredLaneIdentifier",
            "operationalModeRequested"
        ]
    },
    "RampMeterControlCommandResponse": {
        "description": "Include generic device control command response information in ramp meter control command response",
        "$reqId": "3.3.5.8.9.3",
        "type": "object",
        "allOf": [
            {
                "type": "object",
                "properties": {
                    "messageType": {
                        "type": "string",
                        "const": "RampMeterControlCommandResponse"
                    }
                },
                "required": [
                    "messageType"
                ]
            },
            {
                "$ref": "#/$defs/ExternalDeviceControlCommandResponse"
            }
        ]
    },
    "RampMeterInventoryRequest": {
        "description": "Include ramp meter inventory request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.8.1.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterInventoryRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.8.1.4.a",
                "description": "Generic device information request for ramp meter with device inventory type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "ramp meter"
                            },
                            "deviceInformationType": {
                                "const": "device inventory"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "RampMeterInventoryResponse": {
        "description": "Ramp meter inventory information for external center",
        "type": "object",
        "$reqId": "3.3.5.8.1.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterInventoryResponse"
            },
            "deviceInventoryHeader": {
                "$reqId": "3.3.5.8.1.5.1.a",
                "description": "Header information for generic device inventory",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "deviceInventoryHeaderList": {
                "$reqId": "3.3.5.8.1.5.1.b",
                "description": "Generic device inventory header information for each metered lane",
                "type": "array",
                "items": {
                    "$ref": "#/$defs/DeviceInventoryResponseHeader"
                }
            },
            "meteredLaneId": {
                "$reqId": "3.3.5.8.1.5.1.c",
                "description": "Unique identifier for each metered lane node",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "laneDirection": {
                "$reqId": "3.3.5.8.1.5.1.d",
                "description": "Direction of travel on the link for each metered lane",
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "northbound",
                        "northeast bound",
                        "eastbound",
                        "southeast bound",
                        "southbound",
                        "southwest bound",
                        "westbound",
                        "northwest bound",
                        "not directional",
                        "positive direction",
                        "negative direction",
                        "both directions",
                        "other"
                    ]
                }
            },
            "roadwayEntranceName": {
                "$reqId": "3.3.5.8.1.5.1.e",
                "description": "Name of the roadway intersected by entrance ramps for each metered lane",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "laneNumberRampMeters": {
                "$reqId": "3.3.5.8.1.5.2.1",
                "description": "Provide the lane number for each metered lane in the ramp meter inventory information",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "laneTypeRampMeters": {
                "$reqId": "3.3.5.8.1.5.2.2",
                "description": "Provide lane type for each lane controlled by ramp meter in ramp meter inventory information",
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "general traffic",
                        "HOV lane",
                        "bus lane",
                        "right turn bypass",
                        "other"
                    ]
                }
            },
            "associatedDetectorsIdentifiers": {
                "$reqId": "3.3.5.8.1.5.2.3",
                "description": "Provide identifiers of detectors associated with ramp meter in inventory information for each metered lane.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "absoluteMinimumMeteringRate": {
                "$reqId": "3.3.5.8.1.5.2.4",
                "description": "Indicate the absolute minimum metering rate in vehicles per hour for each metered lane in the ramp meter inventory",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "absoluteMaximumMeteringRate": {
                "$reqId": "3.3.5.8.1.5.2.5",
                "description": "Indicate the absolute maximum metering rate in vehicles per hour for ramp meter inventory",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "systemMinimumMeteringRate": {
                "$reqId": "3.3.5.8.1.5.2.6",
                "description": "Indicate the system metering rate in vehicles per hour as part of the ramp meter inventory for each metered lane.",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "systemMaximumMeteringRate": {
                "$reqId": "3.3.5.8.1.5.2.7",
                "description": "Indicate system maximum metering rate in vehicles per hour for ramp meter inventory",
                "type": "array",
                "items": {
                    "type": "number"
                }
            }
        },
        "required": [
            "messageType",
            "deviceInventoryHeader",
            "deviceInventoryHeaderList",
            "meteredLaneId",
            "laneDirection",
            "roadwayEntranceName"
        ]
    },
    "RampMeterPriorityQueueRequest": {
        "description": "Include ramp request details in the communication from external center to owner center.",
        "type": "object",
        "$reqId": "3.3.5.8.8.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterPriorityQueueRequest"
            },
            "deviceQueueRequest": {
                "$reqId": "3.3.5.8.8.2.a",
                "description": "Generic device queue request for rampmeter",
                "$ref": "#/$defs/DevicePriorityQueueRequest"
            }
        },
        "required": [
            "messageType",
            "deviceQueueRequest"
        ]
    },
    "RampMeterPriorityQueueResponse": {
        "description": "Ramp meter priority queue for owner center to send to external center",
        "type": "object",
        "$reqId": "3.3.5.8.8.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterPriorityQueueResponse"
            },
            "devicePriorityQueueHeader": {
                "$reqId": "3.3.5.8.8.3.1.a",
                "description": "Header information for the generic device priority queue",
                "allOf": [
                    {
                        "$ref": "#/$defs/DevicePriorityQueueResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "ramp meter"
                            }
                        }
                    }
                ]
            },
            "operationalModeRequested": {
                "$reqId": "3.3.5.8.8.3.1.b",
                "description": "Requested operational mode for traffic signal (dark, restInGreen, fixedRate, trafficResponsive, emergencyGreen, holdMeter, holdnonMeter, holdRestInGreen).",
                "$ref": "#/$defs/DeviceOperationalModes"
            },
            "meteredLaneIdentifier": {
                "$reqId": "3.3.5.8.8.3.2.1",
                "description": "Provide the identifier of the metered lane for each change request in the ramp meter priority queue response.",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "requestedPlanRampMeterQueue": {
                "$reqId": "3.3.5.8.8.3.2.2",
                "description": "Provide metering plan number for each change request in the ramp meter priority queue response",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "requestedRateRampMeterQueue": {
                "$reqId": "3.3.5.8.8.3.2.3",
                "description": "Provide metering rate in vehicles per hour for each change request in the ramp meter priority queue response",
                "type": "array",
                "items": {
                    "type": "number"
                }
            }
        },
        "required": [
            "messageType",
            "devicePriorityQueueHeader",
            "operationalModeRequested"
        ]
    },
    "RampMeterScheduleRequest": {
        "description": "Include ramp meter time base schedule request details",
        "type": "object",
        "$reqId": "3.3.5.8.6.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterScheduleRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.8.6.4.a",
                "description": "Request for generic device schedule information with the device type set to 'ramp meter' and device information type set to 'device schedule' ",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "ramp meter"
                            },
                            "deviceInformationType": {
                                "const": "device schedule"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "RampMeterScheduleResponse": {
        "description": "Information on the ramp meter time base schedule sent from owner center to external center",
        "type": "object",
        "$reqId": "3.3.5.8.6.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterScheduleResponse"
            },
            "deviceScheduleInformation": {
                "$reqId": "3.3.5.8.6.5.1.a",
                "description": "Generic device schedule information",
                "$ref": "#/$defs/DeviceScheduleInformation"
            },
            "meteredLaneIdentifier": {
                "$reqId": "3.3.5.8.6.5.1.b",
                "description": "Unique identifier for the metered lane",
                "type": "string"
            },
            "rampMeterTBCAction": {
                "$reqId": "3.3.5.8.6.5.1.c",
                "description": "Action entry for executing ramp meter TBC",
                "type": "string"
            },
            "meteredLaneActionControl": {
                "$reqId": "3.3.5.8.6.5.2.1",
                "description": "Indicate the action for a metered lane in the ramp meter schedule information",
                "type": "string",
                "enum": [
                    "dark",
                    "restInGreen",
                    "fixedRate",
                    "trafficResponsive",
                    "emergencyGreen",
                    "skip"
                ]
            },
            "timebasePlanControl": {
                "$reqId": "3.3.5.8.6.5.2.2",
                "description": "Provide the metering plan number for each metered lane action number, required for traffic-responsive timebase action control in ramp meter schedule.",
                "$ref": "#/$defs/MeteredLaneActionControl"
            },
            "timebaseRateControl": {
                "$reqId": "3.3.5.8.6.5.2.3",
                "description": "Provide the metering rate in vehicles per hour when timebase action control is 'fixedRate'.",
                "$ref": "#/$defs/MeteredLaneActionControl"
            },
            "timebaseVehiclesPerGreenControl": {
                "$reqId": "3.3.5.8.6.5.2.4",
                "description": "Provide the number of vehicles allowed to pass during green and yellow intervals for each metered lane action number in ramp meter schedule information.",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "timebaseControlMinimumMeteringRate": {
                "$reqId": "3.3.5.8.6.5.2.5",
                "description": "Provide operational minimum metering rate for each metered lane action number in ramp meter schedule information",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "timebaseControlMaximumMeteringRate": {
                "$reqId": "3.3.5.8.6.5.2.6",
                "description": "Provide operational maximum metering rate for each metered lane action number in the ramp meter schedule",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "timebaseControlLaneUsageMode": {
                "$reqId": "3.3.5.8.6.5.2.7",
                "description": "Provide mainline station traffic parameters for each mainline lane action number in ramp meter schedule information.",
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "notUsed",
                        "schemeF (mainline flow rate)",
                        "schemeO (mainline occupancy)",
                        "schemeFO (mainline flow rate and occupancy)",
                        "schemeS (mainline speed)",
                        "schemeFS (mainline flow rate and speed)",
                        "schemeOS (mainline occupancy and speed)",
                        "schemeFOS (mainline low rate",
                        "occupancy and speed)"
                    ]
                }
            }
        },
        "required": [
            "messageType",
            "deviceScheduleInformation",
            "meteredLaneIdentifier",
            "rampMeterTBCAction"
        ]
    },
    "RampMeterStatusRequest": {
        "description": "Include CCTV status request details in communication from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.8.2.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterStatusRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.8.2.4.a",
                "description": "Request for generic device information with device type set to 'ramp meter' and information type set to 'device status'.",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "ramp meter"
                            },
                            "deviceInformationType": {
                                "const": "device status"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "RampMeterStatusResponse": {
        "description": "Ramp meter status information for owner center to external center",
        "type": "object",
        "$reqId": "3.3.5.8.2.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RampMeterStatusResponse"
            },
            "deviceStatusHeader": {
                "$reqId": "3.3.5.8.2.5.1.b",
                "description": "Generic device status header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceStatusHeader"
                    },
                    {
                        "properties": {
                            "deviceStatuses": {
                                "items": {
                                    "allOf": [
                                        {
                                            "$ref": "#/$defs/DeviceStatus"
                                        },
                                        {
                                            "properties": {
                                                "deviceType": {
                                                    "const": "ramp meter"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "rampMeterOperationalMode": {
                "$reqId": "3.3.5.8.2.5.1.d",
                "description": "Current operational mode of each ramp meter",
                "$ref": "#/$defs/DeviceOperationalModes"
            },
            "requestedMeteringCommandSource": {
                "$reqId": "3.3.5.8.2.5.2.1",
                "description": "Indicate the command source requesting control of the metered lane in ramp meter status information",
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "manual",
                        "communications",
                        "interconnect",
                        "timebaseControl",
                        "default"
                    ]
                }
            },
            "implementedMeteringCommandSource": {
                "$reqId": "3.3.5.8.2.5.2.2",
                "description": "Indicate the command source controlling the metered lane in ramp meter status information",
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "manual",
                        "communications",
                        "interconnect",
                        "timebaseControl",
                        "default"
                    ]
                }
            },
            "implementedPlan": {
                "$reqId": "3.3.5.8.2.5.2.3",
                "description": "Indicate the metering plan number for ramp meter status information",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "implementedRate": {
                "$reqId": "3.3.5.8.2.5.2.4",
                "description": "Indicate the current base metering rate in vehicles per hour as part of ramp meter status information for each metered lane",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "implementedVehiclesPerGreen": {
                "$reqId": "3.3.5.8.2.5.2.5",
                "description": "Indicate the number of vehicles allowed to pass during green and yellow intervals in ramp meter status information",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "requestedAction": {
                "$reqId": "3.3.5.8.2.5.2.6",
                "description": "Indicate the requested action for the metered lane in ramp meter status information",
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "dark",
                        "restInGreen",
                        "fixedRate",
                        "trafficResponsive",
                        "emergencyGreen"
                    ]
                }
            },
            "requestedPlanRampMeterStatus": {
                "$reqId": "3.3.5.8.2.5.2.7",
                "description": "Indicate the metering plan number requested for ramp meter status information for each metered lane",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "requestedRateRampMeterStatus": {
                "$reqId": "3.3.5.8.2.5.2.8",
                "description": "Indicate the requested metering rate in vehicles per hour for ramp meter status information",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "requestedVehiclesPerGreen": {
                "$reqId": "3.3.5.8.2.5.2.9",
                "description": "Indicate the number of vehicles allowed to pass during green and yellow intervals in ramp meter status information",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "operationalMinimumMeteringRate": {
                "$reqId": "3.3.5.8.2.5.2.10",
                "description": "Provide operational minimum metering rate in vehicles per hour for ramp meter status information by lane.",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "operationalMaximumMeteringRate": {
                "$reqId": "3.3.5.8.2.5.2.11",
                "description": "Provide operational maximum metering rate for each metered lane in vehicles per hour",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "demandDetectorStatus": {
                "$reqId": "3.3.5.8.2.5.2.12",
                "description": "Indicate the status of the demand detector as part of the ramp meter status information for each metered lane",
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "recalled",
                        "working",
                        "otherError",
                        "erraticCount",
                        "maxPresence",
                        "noActivity",
                        "errorAtSensor"
                    ]
                }
            },
            "passageDetectorStatus": {
                "$reqId": "3.3.5.8.2.5.2.13",
                "description": "Indicate the status of the passage detector as part of ramp meter status information for each metered lane",
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "recalled",
                        "working",
                        "otherError",
                        "erraticCount",
                        "maxPresence",
                        "noActivity",
                        "errorAtSensor"
                    ]
                }
            },
            "queueDetectorStatus": {
                "$reqId": "3.3.5.8.2.5.2.14",
                "description": "Indicate the status of the queue detector in ramp meter status information for each metered lane",
                "type": "array",
                "items": {
                    "type": "string",
                    "enum": [
                        "recalled",
                        "working",
                        "otherError",
                        "erraticCount",
                        "maxPresence",
                        "noActivity",
                        "errorAtSensor"
                    ]
                }
            },
            "cycleCount": {
                "$reqId": "3.3.5.8.2.5.2.15",
                "description": "Indicate the count of green intervals in the most recent calculation interval for ramp meter status information",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "passengerVehicleCount": {
                "$reqId": "3.3.5.8.2.5.2.16",
                "description": "Indicate the number of actuations of the passage detector in ramp meter status information for each metered lane",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "queueDetectedFlag": {
                "$reqId": "3.3.5.8.2.5.2.17",
                "description": "Indicate if a queue has been detected beyond the queue detector on the ramp in ramp meter status information",
                "type": "array",
                "items": {
                    "type": "boolean"
                }
            },
            "violationVehicleCount": {
                "$reqId": "3.3.5.8.2.5.2.18",
                "description": "Indicate number of vehicle violations of passage detector in ramp meter status information",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "mainlineFlowRate": {
                "$reqId": "3.3.5.8.2.5.2.19",
                "description": "Provide average mainline flow rate in vehicles per hour as part of ramp meter status information",
                "type": "number"
            },
            "mainlineVehicleOccupancy": {
                "$reqId": "3.3.5.8.2.5.2.20",
                "description": "Provide average percent vehicle occupancy in ramp meter status information",
                "type": "number"
            },
            "mainlineVehicleSpeed": {
                "$reqId": "3.3.5.8.2.5.2.21",
                "description": "Provide average vehicle speed in kilometers per hour in ramp meter status information",
                "type": "number"
            }
        },
        "required": [
            "messageType",
            "deviceStatusHeader",
            "rampMeterOperationalMode"
        ]
    },
    "ResponsePlanApprovalRequest": {
        "description": "Details required for response plan approval request",
        "type": "object",
        "$reqId": "3.3.3.8.7.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ResponsePlanApprovalRequest"
            },
            "responsePlanHeader": {
                "$reqId": "3.3.3.8.7.4.a",
                "description": "Header for the response plan",
                "$ref": "#/$defs/ResponsePlanHeader"
            },
            "responsePlanRequestFilter": {
                "$reqId": "3.3.3.8.7.4.b",
                "description": "Filter for response plan request",
                "$ref": "#/$defs/ResponsePlanFilter"
            },
            "requestHeader": {
                "$reqId": "3.3.3.8.7.4.c",
                "description": "Information related to authorization details",
                "$ref": "#/$defs/AuthHeader"
            }
        },
        "required": [
            "messageType",
            "responsePlanHeader"
        ]
    },
    "ResponsePlanApprovalResponse": {
        "description": "Send response plan approval response to external center",
        "type": "object",
        "$reqId": "3.3.3.8.7.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ResponsePlanApprovalResponse"
            },
            "responsePlanHeader": {
                "$reqId": "3.3.3.8.7.5.1.a",
                "description": "Header for the response plan",
                "$ref": "#/$defs/ResponsePlanHeader"
            },
            "responsePlanApprovalDecision": {
                "$reqId": "3.3.3.8.7.5.1.b",
                "description": "Approval decision for a response plan",
                "$ref": "#/$defs/ResponsePlanApprovalDecision"
            }
        },
        "required": [
            "messageType",
            "responsePlanHeader",
            "responsePlanApprovalDecision"
        ]
    },
    "ResponsePlanCancellationRequest": {
        "description": "Send a request to cancel a response plan to the owner center",
        "type": "object",
        "$reqId": "3.3.3.8.8.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ResponsePlanCancellationRequest"
            },
            "responsePlanHeader": {
                "$reqId": "3.3.3.8.8.2.1.a",
                "description": "Header for the response plan",
                "$ref": "#/$defs/ResponsePlanHeader"
            },
            "eventId": {
                "$reqId": "3.3.3.8.8.2.1.b",
                "description": "Unique identifier for the event",
                "type": "string"
            },
            "requestHeader": {
                "$reqId": "3.3.3.8.8.2.1.c",
                "description": "Information regarding authorization for external centers",
                "$ref": "#/$defs/AuthHeader"
            },
            "responsePlans": {
                "$reqId": "3.3.3.8.8.2.2.1",
                "description": "Include a list of response plans to be terminated in the cancellation request",
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "required": [
            "messageType",
            "responsePlanHeader",
            "eventId",
            "requestHeader"
        ]
    },
    "ResponsePlanCancellationResponse": {
        "description": "Respond to external center's request for response plan cancellation",
        "type": "object",
        "$reqId": "3.3.3.8.8.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ResponsePlanCancellationResponse"
            },
            "responsePlanHeader": {
                "$reqId": "3.3.3.8.8.3.1.a",
                "description": "Header information for the response plan",
                "$ref": "#/$defs/ResponsePlanHeader"
            },
            "eventId": {
                "$reqId": "3.3.3.8.8.3.1.b",
                "description": "Unique identifier for the event",
                "type": "string"
            },
            "responsePlanId": {
                "$reqId": "3.3.3.8.8.3.1.c",
                "description": "Identifier for the response plan being terminated",
                "type": "string"
            },
            "requestStatus": {
                "$reqId": "3.3.3.8.8.3.1.d",
                "description": "Status of the request regarding cancellation agreement",
                "type": "string"
            },
            "statusUpdate": {
                "$reqId": "3.3.3.8.8.3.2.1",
                "description": "Send the time of the last request status update as part of the response plan cancellation",
                "$ref": "#/$defs/DateTime"
            },
            "cancellationPlanDetails": {
                "$reqId": "3.3.3.8.8.3.2.2",
                "description": "Send cancellation plan with sequence of actions to end response activities",
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "required": [
            "messageType",
            "responsePlanHeader",
            "eventId",
            "responsePlanId",
            "requestStatus"
        ]
    },
    "ResponsePlanRequest": {
        "description": "Send a response plan information request to an owner center",
        "type": "object",
        "$reqId": "3.3.3.8.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ResponsePlanRequest"
            },
            "ownerOrganization": {
                "$reqId": "3.3.3.8.4.1.a",
                "description": "Information about the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "externalOrganization": {
                "$reqId": "3.3.3.8.4.1.b",
                "description": "Details about the external organization involved",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "requestId": {
                "$reqId": "3.3.3.8.4.1.c",
                "description": "Unique identifier for the request",
                "type": "string"
            },
            "requestHeader": {
                "$reqId": "3.3.3.8.4.2.1",
                "description": "Requirements for authorization information in the response plan request",
                "$ref": "#/$defs/AuthHeader"
            },
            "requestTime": {
                "$reqId": "3.3.3.8.4.2.2",
                "description": "Include the time of the response plan request in the information request",
                "$ref": "#/$defs/DateTime"
            },
            "corridorId": {
                "$reqId": "3.3.3.8.4.2.3",
                "description": "Include an identifier of the affected transportation corridor in the response plan information request",
                "type": "string"
            },
            "ResponsePlanFilter": {
                "$reqId": "3.3.3.8.4.2.4",
                "$ref": "#/$defs/ResponsePlanFilter"
            }
        },
        "required": [
            "messageType",
            "ownerOrganization",
            "externalOrganization",
            "requestId"
        ]
    },
    "ResponsePlanResponse": {
        "description": "Contents of the Response Plan are detailed below",
        "type": "object",
        "$reqId": "3.3.3.8.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ResponsePlanResponse"
            },
            "responsePlanHeader": {
                "$reqId": "3.3.3.8.5.1.a",
                "description": "Header information for the response plan",
                "$ref": "#/$defs/ResponsePlanHeader"
            },
            "evaluationCycle": {
                "$reqId": "3.3.3.8.5.1.b",
                "description": "Information regarding the evaluation cycle",
                "$ref": "#/$defs/EvaluationCycle"
            },
            "responsePlanDetails": {
                "$reqId": "3.3.3.8.5.1.c",
                "description": "Details of the response plan",
                "$ref": "#/$defs/ResponsePlanDetails"
            }
        },
        "required": [
            "messageType",
            "responsePlanHeader"
        ]
    },
    "ResponsePlanStatusRequest": {
        "description": "Send a response plan status information request to an owner center",
        "type": "object",
        "$reqId": "3.3.3.8.6.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ResponsePlanStatusRequest"
            },
            "ownerOrganizationId": {
                "$reqId": "3.3.3.8.6.4.1.a",
                "description": "Information about the owner organization",
                "type": "string"
            },
            "externalOrganizationId": {
                "$reqId": "3.3.3.8.6.4.1.b",
                "description": "Information about external organizations",
                "type": "string"
            },
            "requestId": {
                "$reqId": "3.3.3.8.6.4.1.c",
                "description": "Unique identifier for the request",
                "type": "string"
            },
            "requestHeader": {
                "$reqId": "3.3.3.8.6.4.2.1",
                "description": "Requirements for authorization information in response plan status request",
                "$ref": "#/$defs/AuthHeader"
            },
            "requestTime": {
                "$reqId": "3.3.3.8.6.4.2.2",
                "description": "Include the time of the response plan request in the information request",
                "$ref": "#/$defs/DateTime"
            }
        },
        "required": [
            "messageType",
            "ownerOrganizationId",
            "externalOrganizationId",
            "requestId"
        ]
    },
    "ResponsePlanStatusResponse": {
        "description": "Send response plan status to an external center",
        "type": "object",
        "$reqId": "3.3.3.8.6.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "ResponsePlanStatusResponse"
            },
            "responsePlanHeader": {
                "$reqId": "3.3.3.8.6.5.1.a",
                "description": "Header for a response plan",
                "$ref": "#/$defs/ResponsePlanHeader"
            },
            "status": {
                "$reqId": "3.3.3.8.6.5.1.b",
                "description": "Response plan status options include generated, submitted-for-approval, being implemented, implemented, completed, or rejected.",
                "type": "string",
                "enum": [
                    "generated",
                    "submitted-for-approval",
                    "being-implemented",
                    "implemented",
                    "completed",
                    "rejected"
                ]
            },
            "statusLastUpdated": {
                "$reqId": "3.3.3.8.6.5.1.c",
                "description": "Timestamp of the last status update",
                "$ref": "#/$defs/DateTime"
            }
        },
        "required": [
            "messageType",
            "responsePlanHeader",
            "status",
            "statusLastUpdated"
        ]
    },
    "RouteInventoryRequest": {
        "description": "Requirements for route inventory request from external center to owner center",
        "$reqId": "3.3.4.4.1.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RouteInventoryRequest"
            },
            "trafficNetworkInformationRequest": {
                "allOf": [
                    {
                        "$ref": "#/$defs/TrafficNetworkInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "networkInformationType": {
                                "const": "route inventory"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "trafficNetworkInformationRequest"
        ]
    },
    "RouteInventoryResponse": {
        "description": "Send route inventory information to an external center",
        "type": "object",
        "$reqId": "3.3.4.4.1.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RouteInventoryResponse"
            },
            "ownerOrganization": {
                "$reqId": "3.3.4.4.1.5.1.a",
                "description": "Information regarding the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "roadwayNetworkId": {
                "$reqId": "3.3.4.4.1.5.1.b",
                "description": "Unique identifier for the roadway network",
                "type": "string"
            },
            "routes": {
                "$reqId": "3.3.4.4.1.5.1.c",
                "description": "Unique identifier for each route",
                "type": "array",
                "items": {
                    "$ref": "#/$defs/Route"
                }
            },
            "restrictions": {
                "$reqId": "3.3.4.4.1.5.2.1",
                "description": "Owner center restrictions on route inventory information dissemination",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "ownerOrganization",
            "roadwayNetworkId",
            "routes"
        ]
    },
    "RouteStatusRequest": {
        "description": "Requirements for route status request from external center to owner center",
        "$reqId": "3.3.4.4.2.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RouteStatusRequest"
            },
            "trafficNetworkInformationRequest": {
                "allOf": [
                    {
                        "$ref": "#/$defs/TrafficNetworkInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "networkInformationType": {
                                "const": "route status"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "trafficNetworkInformationRequest"
        ]
    },
    "RouteStatusResponse": {
        "description": "Send route status information to an external center",
        "type": "object",
        "$reqId": "3.3.4.4.2.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "RouteStatusResponse"
            },
            "ownerOrganization": {
                "$reqId": "3.3.4.4.2.5.1.a",
                "description": "Information about the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "roadwayNetworkId": {
                "$reqId": "3.3.4.4.2.5.1.b",
                "description": "Unique identifier for the roadway network",
                "type": "string"
            },
            "routesStatus": {
                "$reqId": "3.3.4.4.2.5.1.c",
                "description": "Unique identifier for the route",
                "type": "array",
                "items": {
                    "$ref": "#/$defs/RouteStatus"
                }
            },
            "restrictions": {
                "$reqId": "3.3.4.4.2.5.2.1",
                "description": "Owner center restrictions on route status information dissemination",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "ownerOrganization",
            "roadwayNetworkId",
            "routesStatus"
        ]
    },
    "SectionChangePriorityQueueRequest": {
        "description": "Include details of signal section priority queue request in communication from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.9.15.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SectionChangePriorityQueueRequest"
            },
            "deviceQueueRequest": {
                "$reqId": "3.3.5.9.15.2.a",
                "description": "Generic device queue request for signal section device type",
                "$ref": "#/$defs/DevicePriorityQueueRequest"
            }
        },
        "required": [
            "messageType",
            "deviceQueueRequest"
        ]
    },
    "SectionChangePriorityQueueResponse": {
        "description": "Include the type of change requested for each section in the section change priority queue response.",
        "type": "object",
        "$reqId": "3.3.5.9.15.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SectionChangePriorityQueueResponse"
            },
            "devicePriorityQueueHeader": {
                "$reqId": "3.3.5.9.15.3.a",
                "description": "Response header information for generic device priority queue",
                "allOf": [
                    {
                        "$ref": "#/$defs/DevicePriorityQueueResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal section"
                            }
                        }
                    }
                ]
            },
            "changeType": {
                "$reqId": "3.3.5.9.15.3.b",
                "description": "Type of change requested for each section (e.g., change signal timing mode, change signal timing pattern)",
                "type": "string",
                "enum": [
                    "change section timing mode",
                    "change section timing pattern"
                ]
            },
            "sectionTimingModeRequestedChange": {
                "$reqId": "3.3.5.9.15.3.c",
                "description": "Request change in section timing mode for signal controllers",
                "type": "string",
                "enum": [
                    "free",
                    "fixed-time",
                    "actuated",
                    "semi-actuated",
                    "critical intersection control",
                    "traffic responsive",
                    "adaptive",
                    "flash-programmed"
                ]
            },
            "sectionTimingPattern": {
                "$reqId": "3.3.5.9.15.3.d",
                "description": "Requested section signal timing pattern for change type",
                "$ref": "#/$defs/SectionTimingPattern"
            }
        },
        "required": [
            "messageType",
            "devicePriorityQueueHeader",
            "changeType"
        ],
        "allOf": [
            {
                "if": {
                    "properties": {
                        "changeType": {
                            "const": "change section timing mode"
                        }
                    }
                },
                "then": {
                    "required": [
                        "sectionTimingModeRequestedChange"
                    ]
                }
            },
            {
                "if": {
                    "properties": {
                        "changeType": {
                            "const": "change section timing pattern"
                        }
                    }
                },
                "then": {
                    "required": [
                        "sectionTimingPattern"
                    ]
                }
            }
        ]
    },
    "SectionChangeStatusRequest": {
        "description": "Include signal section change status request from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.9.11.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SectionChangeStatusRequest"
            },
            "deviceChangeStatusRequest": {
                "$reqId": "3.3.5.9.11.2.a",
                "description": "Generic change device status request for signal section device type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeStatusRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal section"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeStatusRequest"
        ]
    },
    "SectionChangeStatusResponse": {
        "description": "Response to signal section change status request from owner center shall include necessary information.",
        "type": "object",
        "$reqId": "3.3.5.9.11.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SectionChangeStatusResponse"
            },
            "deviceControlResponseHeader": {
                "$reqId": "3.3.5.9.11.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal section"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceControlResponseHeader"
        ]
    },
    "SectionStatusInformationRequest": {
        "description": "Include section status request details in communication from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.9.9.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SectionStatusInformationRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.9.9.4.a",
                "description": "Request for signal section device status information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal section"
                            },
                            "deviceInformationType": {
                                "const": "device status"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "SectionStatusInformationResponse": {
        "description": "Section status information to be sent from owner center to external center.",
        "type": "object",
        "$reqId": "3.3.5.9.9.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SectionStatusInformationResponse"
            },
            "organizationInformation": {
                "$reqId": "3.3.5.9.9.5.1.a",
                "description": "Information about the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "sectionId": {
                "$reqId": "3.3.5.9.9.5.1.b",
                "description": "Unique identifier for the section",
                "type": "string"
            },
            "sectionControllerId": {
                "$reqId": "3.3.5.9.9.5.1.c",
                "description": "Unique identifiers for each signal controller in the section",
                "type": "string"
            },
            "sectionTimingMode": {
                "$reqId": "3.3.5.9.9.5.1.d",
                "description": "Section timing mode of the section for signal controllers",
                "type": "string",
                "enum": [
                    "unknown",
                    "free",
                    "fixed-time",
                    "time base coordination",
                    "actuated",
                    "semi-actuated",
                    "critical intersection control",
                    "traffic responsive",
                    "adaptive",
                    "flash-programmed"
                ]
            },
            "sectionTimingPatterns": {
                "$reqId": "3.3.5.9.9.5.1.e",
                "description": "Unique identifier for the section timing pattern, which is a list of signal timing patterns for each assigned signal controller.",
                "type": "array",
                "items": {
                    "$ref": "#/$defs/SectionTimingPattern"
                }
            },
            "sectionName": {
                "$reqId": "3.3.5.9.9.5.2.1",
                "description": "Provide section name as assigned by owner organization in section status information",
                "type": "string"
            },
            "descriptionSectionTimingPatternSectionStatus": {
                "$reqId": "3.3.5.9.9.5.2.2",
                "description": "Provide description of the current signal timing pattern as part of section status information.",
                "type": "string"
            },
            "sectionCycleLengthSectionStatus": {
                "$reqId": "3.3.5.9.9.5.2.3",
                "description": "Provide the cycle length of the current section timing pattern as part of the section status information.",
                "type": "number"
            },
            "operatorIdentifierSectionStatus": {
                "$reqId": "3.3.5.9.9.5.2.4",
                "description": "Requirements for the operator identifier in section status information",
                "type": "string"
            },
            "eventIdentifierSectionStatus": {
                "$reqId": "3.3.5.9.9.5.2.5",
                "description": "Provide unique identifier of the event associated with the section status information",
                "type": "string"
            },
            "eventResponsePlanSectionStatus": {
                "$reqId": "3.3.5.9.9.5.2.6",
                "description": "Provide event response plan number as part of section status information",
                "type": "number"
            },
            "sectionStatusDateTimeChangeInformation": {
                "$reqId": "3.3.5.9.9.5.2.7",
                "description": "Provide date and time of the last change to section status in the section status information",
                "$ref": "#/$defs/DateTime"
            }
        },
        "required": [
            "messageType",
            "organizationInformation",
            "sectionId",
            "sectionControllerId",
            "sectionTimingMode",
            "sectionTimingPatterns"
        ]
    },
    "SectionTimingPatternInformationRequest": {
        "description": "Include signal section timing plan inventory request details from external center to owner center.",
        "type": "object",
        "$reqId": "3.3.5.9.16.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SectionTimingPatternInformationRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.9.16.4.a",
                "description": "Generic device information request for signal section device plan",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal section"
                            },
                            "deviceInformationType": {
                                "const": "device plan"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "SectionTimingPatternInformationResponse": {
        "description": "Include signal section timing pattern inventory information for each signal controller assigned to the section in communications from an owner center to an external center",
        "type": "object",
        "$reqId": "3.3.5.9.16.5.1",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SectionTimingPatternInformationResponse"
            },
            "organizationInformation": {
                "$reqId": "3.3.5.9.16.5.1.a",
                "description": "Information about the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "sectionId": {
                "$reqId": "3.3.5.9.16.5.1.b",
                "description": "Unique identifier for the section",
                "type": "string"
            },
            "sectionTimingPatternId": {
                "$reqId": "3.3.5.9.16.5.1.c",
                "description": "Identifier for the section timing pattern which lists individual signal timings.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "sectionCycleLength": {
                "$reqId": "3.3.5.9.16.5.1.d",
                "description": "Cycle length in seconds for each signal controller assigned to the section",
                "type": "number"
            },
            "sectionControllerId": {
                "$reqId": "3.3.5.9.16.5.1.e",
                "description": "Unique identifiers for each signal controller assigned to the section",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "cycleLength": {
                "$reqId": "3.3.5.9.16.5.1.f",
                "description": "Cycle length in seconds for each signal controller assigned to the section",
                "type": "number"
            },
            "offsetTime": {
                "$reqId": "3.3.5.9.16.5.1.g",
                "description": "Offset time (seconds) for each signal controller assigned to the section",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "timingPatternId": {
                "$reqId": "3.3.5.9.16.5.1.h",
                "description": "Unique identifier for the signal timing pattern for each signal controller",
                "type": "string"
            },
            "phaseId": {
                "$reqId": "3.3.5.9.16.5.1.i",
                "description": "Identifier for each phase in use for signal controllers",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "cordinatedPhasesList": {
                "$reqId": "3.3.5.9.16.5.1.j",
                "description": "List of coordinates phases for each signal controller assigned to the section",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "splitMode": {
                "$reqId": "3.3.5.9.16.5.1.k",
                "description": "Specify split-mode options for each phase in use for each signal controller assigned to the section",
                "type": "string",
                "enum": [
                    "other",
                    "none",
                    "minimum vehicle recall",
                    "maximum vehicle recall",
                    "pedestrian recall",
                    "maximum vehicle and pedestrian recall",
                    "phase omitted"
                ]
            },
            "splitTime": {
                "$reqId": "3.3.5.9.16.5.1.l",
                "description": "Split time in tenths-of-a-second for each phase of the signal controller",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "descriptionSectionTimingPattern": {
                "$reqId": "3.3.5.9.16.5.2.1",
                "description": "Provide the description of the section timing pattern for each signal timing pattern in the signal section timing pattern information",
                "type": "string"
            },
            "sectionTimingPatternInventoryDateTimeChangeInfo": {
                "$reqId": "3.3.5.9.16.5.2.2",
                "description": "Provide the date and time of the last change to the section timing pattern inventory as part of the signal section timing pattern information.",
                "$ref": "#/$defs/DateTime"
            }
        },
        "required": [
            "messageType",
            "organizationInformation",
            "sectionId",
            "sectionTimingPatternId",
            "sectionCycleLength",
            "sectionControllerId",
            "cycleLength",
            "offsetTime",
            "timingPatternId",
            "phaseId",
            "cordinatedPhasesList",
            "splitMode",
            "splitTime"
        ]
    },
    "SectionTimingPatternScheduleRequest": {
        "description": "Include components for the signal section plan inventory request in communication from external center to owner center.",
        "type": "object",
        "$reqId": "3.3.5.9.13.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SectionTimingPatternScheduleRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.9.13.4.a",
                "description": "Request for generic device information with section status type and device plan information type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal section"
                            },
                            "deviceInformationType": {
                                "const": "device plan"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "SectionTimingPatternScheduleResponse": {
        "description": "Include section timing pattern schedule information from owner center to external center",
        "type": "object",
        "$reqId": "3.3.5.9.13.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SectionTimingPatternScheduleResponse"
            },
            "organizationInformation": {
                "$reqId": "3.3.5.9.13.5.a",
                "description": "Information regarding the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "sectionId": {
                "$reqId": "3.3.5.9.13.5.b",
                "description": "Unique identifier for each section",
                "type": "string"
            },
            "timeBaseScheduleNumber": {
                "$reqId": "3.3.5.9.13.5.c",
                "description": "Unique identifier for the time base schedule",
                "type": "number"
            },
            "timeBaseScheduleMonth": {
                "$reqId": "3.3.5.9.13.5.d",
                "description": "Time base schedule month",
                "type": "number"
            },
            "timeBaseScheduleDay": {
                "$reqId": "3.3.5.9.13.5.e",
                "description": "Schedule for the day of the week",
                "type": "number"
            },
            "timeBaseScheduleDate": {
                "$reqId": "3.3.5.9.13.5.f",
                "description": "Schedule date for the time base",
                "$ref": "#/$defs/DateTime"
            },
            "timeBaseScheduleDayPattern": {
                "$reqId": "3.3.5.9.13.5.g",
                "description": "Schedule pattern for the time base",
                "type": "number"
            },
            "timeBaseScheduleDayHour": {
                "$reqId": "3.3.5.9.13.5.h",
                "description": "Time base schedule for daily hour pattern",
                "type": "number"
            },
            "timeBaseScheduleDayMinute": {
                "$reqId": "3.3.5.9.13.5.i",
                "description": "Minute-based schedule day pattern",
                "type": "number"
            },
            "timeBaseScheduleLastChange": {
                "$reqId": "3.3.5.9.13.5.j",
                "description": "Date and time of the last change to the time base schedule",
                "$ref": "#/$defs/DateTime"
            },
            "specialFunctionIdentifier": {
                "$reqId": "3.3.5.9.13.5.k",
                "description": "List of unique identifiers for each signal controller assigned to the section",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "timeBaseScheduleDayPatternMode": {
                "$reqId": "3.3.5.9.13.5.l",
                "description": "Time base schedule day pattern timing modes for traffic control",
                "type": "string",
                "enum": [
                    "unknown",
                    "other",
                    "free",
                    "fixed-time",
                    "actuated",
                    "semi-actuated",
                    "critical intersection control",
                    "traffic responsive",
                    "adaptive",
                    "flash-programmed"
                ]
            },
            "sectionTimingPatternId": {
                "$reqId": "3.3.5.9.13.5.m",
                "description": "Identifier for the section timing pattern in the time base schedule day pattern",
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "required": [
            "messageType",
            "organizationInformation",
            "sectionId",
            "timeBaseScheduleNumber",
            "timeBaseScheduleMonth",
            "timeBaseScheduleDay",
            "timeBaseScheduleDate",
            "timeBaseScheduleDayPattern",
            "timeBaseScheduleDayHour",
            "timeBaseScheduleDayMinute",
            "timeBaseScheduleLastChange",
            "specialFunctionIdentifier",
            "timeBaseScheduleDayPatternMode",
            "sectionTimingPatternId"
        ]
    },
    "SignalChangePriorityQueueRequest": {
        "description": "Include signal controller priority queue request details in communication from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.9.14.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalChangePriorityQueueRequest"
            },
            "deviceQueueRequest": {
                "$reqId": "3.3.5.9.14.2.a",
                "description": "Generic device queue request for signal controller",
                "$ref": "#/$defs/DevicePriorityQueueRequest"
            }
        },
        "required": [
            "messageType",
            "deviceQueueRequest"
        ]
    },
    "SignalChangePriorityQueueResponse": {
        "description": "Include traffic signal priority queue response information from owner center to external center",
        "type": "object",
        "$reqId": "3.3.5.9.14.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalChangePriorityQueueResponse"
            },
            "devicePriorityQueueHeader": {
                "$reqId": "3.3.5.9.14.3.a",
                "description": "Generic device priority queue response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DevicePriorityQueueResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal controller"
                            }
                        }
                    }
                ]
            },
            "changeRequestType": {
                "$reqId": "3.3.5.9.14.3.b",
                "description": "Type of change request for each signal device",
                "type": "string",
                "enum": [
                    "change signal timing mode",
                    "change signal timing pattern",
                    "make offset adjustment"
                ]
            },
            "requestTimingMode": {
                "$reqId": "3.3.5.9.14.3.c",
                "description": "Requested change in signal timing mode if the change type is 'change signal timing mode'",
                "type": "string",
                "enum": [
                    "free",
                    "fixed-time",
                    "actuated",
                    "semi-actuated",
                    "critical intersection control",
                    "traffic responsive",
                    "adaptive",
                    "flash-programmed"
                ]
            },
            "sectionTimingPattern": {
                "$reqId": "3.3.5.9.14.3.d",
                "description": "Requested section signal timing pattern if change type is ‘change signal timing pattern’",
                "$ref": "#/$defs/SectionTimingPattern"
            },
            "offset": {
                "$reqId": "3.3.5.9.14.3.e",
                "description": "Requested offset in seconds for 'make offset adjustment' change type",
                "type": "number"
            }
        },
        "required": [
            "messageType",
            "devicePriorityQueueHeader",
            "changeRequestType"
        ],
        "allOf": [
            {
                "if": {
                    "properties": {
                        "changeRequestType": {
                            "const": "change signal timing mode"
                        }
                    }
                },
                "then": {
                    "required": [
                        "requestTimingMode"
                    ]
                }
            },
            {
                "if": {
                    "properties": {
                        "changeRequestType": {
                            "const": "change signal Qtiming pattern"
                        }
                    }
                },
                "then": {
                    "required": [
                        "sectionTimingPattern"
                    ]
                }
            },
            {
                "if": {
                    "properties": {
                        "changeRequestType": {
                            "const": "make offset adjustment"
                        }
                    }
                },
                "then": {
                    "required": [
                        "offset"
                    ]
                }
            }
        ]
    },
    "SignalChangeRequest": {
        "description": "Include signal change request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.9.4.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalChangeRequest"
            },
            "deviceInformationRequestHeader": {
                "$reqId": "3.3.5.9.4.2.a",
                "description": "Generic device change request header information for signal controller device type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeRequestHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal controller"
                            }
                        }
                    }
                ]
            },
            "changeRequestType": {
                "$reqId": "3.3.5.9.4.2.b",
                "description": "Type of change request for each signal device",
                "type": "string",
                "enum": [
                    "change signal timing mode",
                    "change signal timing pattern",
                    "make offset adjustment"
                ]
            },
            "requestTimingMode": {
                "$reqId": "3.3.5.9.4.2.c",
                "description": "Requested change to signal timing mode",
                "type": "string",
                "enum": [
                    "free",
                    "fixed-time",
                    "actuated",
                    "semi-actuated",
                    "critical intersection control",
                    "traffic responsive",
                    "adaptive",
                    "flash-programmed"
                ]
            },
            "sectionTimingPatternId": {
                "$reqId": "3.3.5.9.4.2.d",
                "description": "Requested section signal timing pattern for change type \"change signal timing pattern\"",
                "type": "number"
            },
            "offsetAdjustment": {
                "$reqId": "3.3.5.9.4.2.e",
                "description": "Requested offset in seconds for 'make offset adjustment' change type",
                "type": "number"
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequestHeader",
            "changeRequestType",
            "requestTimingMode",
            "sectionTimingPatternId",
            "offsetAdjustment"
        ]
    },
    "SignalChangeResponse": {
        "description": "Response to signal controller change request from authorized external center",
        "type": "object",
        "$reqId": "3.3.5.9.4.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalChangeResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.9.4.3.1.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal controller"
                            }
                        }
                    }
                ]
            },
            "sectionIdentifierSignalChange": {
                "$reqId": "3.3.5.9.4.3.2.1",
                "description": "Provide unique identifier of the section assigned to the traffic signal controller in the signal change response",
                "type": "string"
            },
            "signalTimingModeCurrent": {
                "$reqId": "3.3.5.9.4.3.2.2",
                "description": "Provide the current signal timing mode in the signal control response",
                "type": "string",
                "enum": [
                    "unknown",
                    "other",
                    "local",
                    "local-manual",
                    "local-time-of-day",
                    "local-traffic-responsive",
                    "central-time-of-day",
                    "central-traffic-responsive",
                    "central-hold-force-omit",
                    "central-holiday-schedule",
                    "central-standby",
                    "coordinated-coordinated-intersection-control",
                    "coordinated-adaptive",
                    "coordinated-transit-priority",
                    "flash-programmed"
                ]
            },
            "signalTimingPatternIdentifierCurrent": {
                "$reqId": "3.3.5.9.4.3.2.3",
                "description": "Provide the current signal timing pattern as part of the signal control response",
                "type": "string"
            },
            "signalOffsetCurrent": {
                "$reqId": "3.3.5.9.4.3.2.4",
                "description": "Indicate the offset in seconds as part of the signal control response",
                "type": "number"
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "SignalControllerCancellationRequest": {
        "description": "Include signal controller change cancellation request details in communication from external center to owner center.",
        "type": "object",
        "$reqId": "3.3.5.9.6.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalControllerCancellationRequest"
            },
            "deviceChangeCancellationRequest": {
                "$reqId": "3.3.5.9.6.2.a",
                "description": "Cancel device change request for signal controller",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeCancellationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal controller"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeCancellationRequest"
        ]
    },
    "SignalControllerCancellationResponse": {
        "description": "Response to signal controller change cancellation request from external center",
        "type": "object",
        "$reqId": "3.3.5.9.6.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalControllerCancellationResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.9.6.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal controller"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "SignalControllerChangeStatusRequest": {
        "description": "Include signal controller change status request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.9.5.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalControllerChangeStatusRequest"
            },
            "deviceChangeStatusRequest": {
                "$reqId": "3.3.5.9.5.2.a",
                "description": "Change device status request for signal controller",
                "allOf": [
                    {
                        "$reqId": "3.3.5.9.5.2.a",
                        "description": "Change device status request for signal controller",
                        "$ref": "#/$defs/DeviceChangeStatusRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal controller"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeStatusRequest"
        ]
    },
    "SignalControllerChangeStatusResponse": {
        "description": "Response to DMS change status request must be included by the owner center.",
        "type": "object",
        "$reqId": "3.3.5.9.5.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalControllerChangeStatusResponse"
            },
            "deviceControlResponseHeader": {
                "$reqId": "3.3.5.9.5.3.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal controller"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceControlResponseHeader"
        ]
    },
    "SignalInventoryRequest": {
        "description": "Include signal controller inventory information in the request from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.9.1.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalInventoryRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.9.1.4.a",
                "description": "Request device information for a signal controller with device inventory type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal controller"
                            },
                            "deviceInformationType": {
                                "const": "device inventory"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "SignalInventoryResponse": {
        "description": "Signal inventory information to be sent from an owner center to an external center",
        "type": "object",
        "$reqId": "3.3.5.9.1.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalInventoryResponse"
            },
            "deviceInventoryHeader": {
                "$reqId": "3.3.5.9.1.5.1.a",
                "description": "Generic device inventory header information",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "intersectionName": {
                "$reqId": "3.3.5.9.1.5.1.b",
                "description": "Identifier for the intersection",
                "type": "string"
            },
            "fieldManagementStation": {
                "$reqId": "3.3.5.9.1.5.2.1",
                "description": "Provide the unique identifier of the field management station in signal inventory information",
                "type": "string"
            },
            "linkIdentifiers": {
                "$reqId": "3.3.5.9.1.5.2.2",
                "description": "Provide unique identifier of each link at the intersection in the signal inventory information",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "directionTraffic": {
                "$reqId": "3.3.5.9.1.5.2.3",
                "description": "Provide traffic direction information for each link at the intersection in the signal inventory",
                "type": "string",
                "enum": [
                    "northbound",
                    "northeast bound",
                    "eastbound",
                    "southeast bound",
                    "southbound",
                    "southwest bound",
                    "westbound",
                    "northwest bound",
                    "not directional",
                    "positive direction",
                    "negative direction",
                    "both directions",
                    "other"
                ]
            },
            "movementIdentifier": {
                "$reqId": "3.3.5.9.1.5.2.4",
                "description": "Identifier for each vehicle or pedestrian movement at the intersection in signal inventory information",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "vehicleMovementApproachLink": {
                "$reqId": "3.3.5.9.1.5.2.5",
                "description": "Provide the unique identifier of the approach link for each vehicle movement in the signal inventory information.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "pedestrianMovementApproachLink": {
                "$reqId": "3.3.5.9.1.5.2.6",
                "description": "Provide the unique identifier of the approach link crossed by each pedestrian movement in the signal inventory information.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "departingLink": {
                "$reqId": "3.3.5.9.1.5.2.7",
                "description": "Provide unique identifier of the link for each vehicle movement in signal inventory information.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "crossingPoint": {
                "$reqId": "3.3.5.9.1.5.2.8",
                "description": "Indicate the crossing point for turning movements in signal inventory information",
                "$ref": "#/$defs/GeoLocation"
            },
            "turningMovementApproachVector": {
                "$reqId": "3.3.5.9.1.5.2.9",
                "description": "Provide the angle of the link into the intersection measured in hundredths of a degree for each movement as part of signal inventory information.",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "turningMovementType": {
                "$reqId": "3.3.5.9.1.5.2.10",
                "description": "Indicate the type of turning movement for each signal controller in the signal inventory information",
                "type": "string",
                "enum": [
                    "maneuver straight allowed",
                    "maneuver left allowed",
                    "maneuver right allowed",
                    "maneuver u turn allowed"
                ]
            },
            "turningMovementLanes": {
                "$reqId": "3.3.5.9.1.5.2.11",
                "description": "Indicate lane number(s) and type of turning movement for vehicle movement in signal inventory information.",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "turningMovementDescription": {
                "$reqId": "3.3.5.9.1.5.2.12",
                "description": "Provide a textual description of each movement as part of the signal inventory information for each signal controller",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "enabledPhases": {
                "$reqId": "3.3.5.9.1.5.2.13",
                "description": "Provide an identifier for each phase enabled at the intersection in the signal inventory information",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "concurrentPhases": {
                "$reqId": "3.3.5.9.1.5.2.14",
                "description": "Provide phase identifiers for concurrent phases in signal inventory information",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "activeMovements": {
                "$reqId": "3.3.5.9.1.5.2.15",
                "description": "Provide movement identifiers for active vehicle or pedestrian movements for each signal phase in the signal inventory information.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "overlapphaseAssignment": {
                "$reqId": "3.3.5.9.1.5.2.16",
                "description": "Provide an identifier for each overlap in use at the intersection and the included phases as part of the signal inventory information.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "ringphaseAssignment": {
                "$reqId": "3.3.5.9.1.5.2.17",
                "description": "Provide an identifier for each ring at the intersection and a list of phases assigned to that ring as part of signal inventory information for each signal controller.",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "specialFunctionInformation": {
                "$reqId": "3.3.5.9.1.5.2.18",
                "description": "Provide an identifier and textual description for each special function output in the signal inventory information",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "timeReference": {
                "$reqId": "3.3.5.9.1.5.2.19",
                "description": "Provide time reference for signal inventory information",
                "type": "string",
                "enum": [
                    "WWV",
                    "GPS",
                    "Power Linesync",
                    "NTP Server",
                    "other",
                    "unknown"
                ]
            },
            "syncReferenceTime": {
                "$reqId": "3.3.5.9.1.5.2.20",
                "description": "Provide the time reference in minutes past midnight for traffic signal controller sync",
                "type": "array",
                "items": {
                    "type": "number"
                }
            },
            "supportedTimingModes": {
                "$reqId": "3.3.5.9.1.5.2.21",
                "description": "Provide the different timing modes for intersection signal inventory",
                "type": "string",
                "enum": [
                    "fixed-time",
                    "actuated",
                    "critical intersection control",
                    "traffic responsive",
                    "adaptive"
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInventoryHeader",
            "intersectionName"
        ]
    },
    "SignalSectionCancellationRequest": {
        "description": "Include details in the signal section change cancellation request from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.9.12.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalSectionCancellationRequest"
            },
            "deviceChangeCancellationRequest": {
                "$reqId": "3.3.5.9.12.2.a",
                "description": "Generic cancel device change request for signal section device type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeCancellationRequest"
                    },
                    {
                        "properties": {
                            "deviceType": {
                                "const": "signal section"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeCancellationRequest"
        ]
    },
    "SignalSectionCancellationResponse": {
        "description": "Response to signal section change cancellation request from external center",
        "type": "object",
        "$reqId": "3.3.5.9.12.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalSectionCancellationResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.9.12.3.a",
                "description": "Generic response header information for device change",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal section"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "SignalSectionChangeRequest": {
        "description": "Include signal section change request details in communication from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.9.10.1.1",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalSectionChangeRequest"
            },
            "deviceControlRequestHeader": {
                "$reqId": "3.3.5.9.10.1.1.a",
                "description": "Generic device control request header information for signal section",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeRequestHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal section"
                            }
                        }
                    }
                ]
            },
            "changeRequestType": {
                "$reqId": "3.3.5.9.10.1.1.b",
                "description": "Type of change request for the section (timing mode or timing pattern)",
                "type": "string",
                "enum": [
                    "change section timing mode",
                    "change section timing pattern"
                ]
            },
            "requestTimingMode": {
                "$reqId": "3.3.5.9.10.1.1.c",
                "description": "Requested change in signal timing mode options",
                "type": "string",
                "enum": [
                    "free",
                    "fixed-time",
                    "actuated",
                    "semi-actuated",
                    "critical intersection control",
                    "traffic responsive",
                    "adaptive",
                    "flash-programmed"
                ]
            },
            "sectionTimingPattern": {
                "$reqId": "3.3.5.9.10.1.1.d",
                "description": "Requested section signal timing pattern for changes to signal timing pattern",
                "$ref": "#/$defs/SectionTimingPattern"
            }
        },
        "required": [
            "messageType",
            "deviceControlRequestHeader",
            "changeRequestType",
            "requestTimingMode",
            "sectionTimingPattern"
        ]
    },
    "SignalSectionChangeResponse": {
        "description": "Response to signal section controller change request shall be included",
        "type": "object",
        "$reqId": "3.3.5.9.10.2.1",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalSectionChangeResponse"
            },
            "deviceChangeResponseHeader": {
                "$reqId": "3.3.5.9.10.2.1.a",
                "description": "Generic device change response header information",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceChangeResponseHeader"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal section"
                            }
                        }
                    }
                ]
            },
            "sectionTimingModeCurrent": {
                "$reqId": "3.3.5.9.10.2.2.1",
                "description": "Provide section timing mode currently in effect in the signal section change response",
                "type": "string",
                "enum": [
                    "local",
                    "local-manual",
                    "local-time-of-day",
                    "local-traffic-responsive",
                    "central-time-of-day",
                    "central-traffic-responsive",
                    "central-hold-force-omit",
                    "central-holiday-schedule",
                    "central-standby",
                    "coordinated-coordinated-intersection-control",
                    "coordinated-adaptive",
                    "coordinated-transit-priority",
                    "flash-programmed",
                    "other",
                    "unknown"
                ]
            },
            "sectionTimingPattern": {
                "$reqId": "3.3.5.9.10.2.2.2",
                "description": "Provide the current signal timing pattern in the signal section control response.",
                "$ref": "#/$defs/SectionTimingPattern"
            }
        },
        "required": [
            "messageType",
            "deviceChangeResponseHeader"
        ]
    },
    "SignalSectionInventoryRequest": {
        "description": "Include signal section inventory information request details from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.9.2.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalSectionInventoryRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.9.2.4.a",
                "description": "Generic device information request for signal section with device inventory type",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal section"
                            },
                            "deviceInformationType": {
                                "const": "device inventory"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "SignalSectionInventoryResponse": {
        "description": "Include generic device inventory header and intersection name for each signal controller in signal section inventory information",
        "type": "object",
        "$reqId": "3.3.5.9.2.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalSectionInventoryResponse"
            },
            "sectionId": {
                "$reqId": "3.3.5.9.2.5.a",
                "description": "Unique identifier for the section",
                "type": "string"
            },
            "deviceInventoryHeader": {
                "$reqId": "3.3.5.9.2.5.b",
                "description": "Generic device inventory header information for each signal controller",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "intersectionName": {
                "$reqId": "3.3.5.9.2.5.c",
                "description": "Intersection name for each signal controller",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "sectionId",
            "deviceInventoryHeader",
            "intersectionName"
        ]
    },
    "SignalTimingPatternRequest": {
        "description": "Content for signal timing pattern request from external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.9.8.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalTimingPatternRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.9.8.4.1.a",
                "description": "Request for generic device information with device type set to 'signal controller' and information type set to 'device plan'.",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal controller"
                            },
                            "deviceInformationType": {
                                "const": "device plan"
                            }
                        }
                    }
                ]
            },
            "signalTimingPatternIdentifier": {
                "$reqId": "3.3.5.9.8.4.2.1",
                "description": "Provide signal timing pattern numbers as part of the signal timing pattern inventory request",
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "SignalTimingPatternResponse": {
        "description": "Signal timing pattern plan inventory information for external center",
        "type": "object",
        "$reqId": "3.3.5.9.8.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalTimingPatternResponse"
            },
            "deviceInventoryHeader": {
                "$reqId": "3.3.5.9.8.5.1.a",
                "description": "Generic device inventory header information",
                "$ref": "#/$defs/DeviceInventoryResponseHeader"
            },
            "timingPatternId": {
                "$reqId": "3.3.5.9.8.5.1.b",
                "description": "Identifier for the signal timing pattern",
                "type": "string"
            },
            "cycleLength": {
                "$reqId": "3.3.5.9.8.5.1.c",
                "description": "Cycle length in seconds for the signal timing pattern",
                "type": "number"
            },
            "offsetTime": {
                "$reqId": "3.3.5.9.8.5.1.d",
                "description": "Offset time in seconds for the signal timing pattern",
                "type": "number"
            },
            "phaseIds": {
                "$reqId": "3.3.5.9.8.5.1.e",
                "description": "Unique identifier for each phase in the signal timing pattern",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "phaseIndication": {
                "$reqId": "3.3.5.9.8.5.1.f",
                "description": "Indication of coordinated phase(s) in signal timing pattern",
                "type": "number"
            },
            "spiltMode": {
                "$reqId": "3.3.5.9.8.5.1.g",
                "description": "Specify split-mode for each phase in the signal timing pattern",
                "type": "string",
                "enum": [
                    "other",
                    "none",
                    "minimum vehicle recall",
                    "maximum vehicle recall",
                    "pedestrian recall",
                    "maximum vehicle and pedestrian recall",
                    "phase omitted"
                ]
            },
            "phaseSplit": {
                "$reqId": "3.3.5.9.8.5.1.h",
                "description": "Phase split timing for each signal pattern in tenths of a second",
                "type": "number"
            },
            "descriptionSignalTimingPattern": {
                "$reqId": "3.3.5.9.8.5.2.1",
                "description": "Provide description of signal timing patterns as part of timing pattern information.",
                "type": "string"
            },
            "maximumGreenDuration": {
                "$reqId": "3.3.5.9.8.5.2.2",
                "description": "Indicate maximum duration of green time for vehicle movement in signal timing pattern",
                "type": "number"
            },
            "minimumGreenDuration": {
                "$reqId": "3.3.5.9.8.5.2.3",
                "description": "Indicate minimum duration of green time for vehicle movement in signal timing pattern",
                "type": "number"
            },
            "vehicleYellowDuration": {
                "$reqId": "3.3.5.9.8.5.2.4",
                "description": "Indicate vehicle clearance duration in tenths of a second for each signal timing pattern",
                "type": "number"
            },
            "vehicleRedClearanceDuration": {
                "$reqId": "3.3.5.9.8.5.2.5",
                "description": "Indicate secondary vehicle clearance duration in tenths of a second for each signal timing pattern",
                "type": "number"
            },
            "minimumWalkDuration": {
                "$reqId": "3.3.5.9.8.5.2.6",
                "description": "Indicate the minimum walk time duration for pedestrian movement for each signal timing pattern",
                "type": "number"
            },
            "pedestrianClearanceDuration": {
                "$reqId": "3.3.5.9.8.5.2.7",
                "description": "Indicate pedestrian clearance duration for each signal timing pattern",
                "type": "number"
            },
            "steadyDontWalkDuration": {
                "$reqId": "3.3.5.9.8.5.2.8",
                "description": "Indicate secondary pedestrian clearance duration in tenths of a second for pedestrian movement in signal timing patterns",
                "type": "number"
            },
            "phaseSequenceInformation": {
                "$reqId": "3.3.5.9.8.5.2.9",
                "description": "Indicate the phase sequence for each signal timing pattern for each signal",
                "type": "number"
            },
            "signalTimingPatternDateTimeChangeInformation": {
                "$reqId": "3.3.5.9.8.5.2.10",
                "description": "Provide the date and time of the last signal timing pattern change as part of the signal timing information",
                "$ref": "#/$defs/DateTime"
            }
        },
        "required": [
            "messageType",
            "deviceInventoryHeader",
            "timingPatternId",
            "cycleLength",
            "offsetTime",
            "phaseIds",
            "phaseIndication",
            "spiltMode",
            "phaseSplit"
        ]
    },
    "SignalTimingPatternScheduleRequest": {
        "description": "Include signal timing pattern time base schedule request details",
        "type": "object",
        "$reqId": "3.3.5.9.7.4",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalTimingPatternScheduleRequest"
            },
            "deviceInformationRequest": {
                "$reqId": "3.3.5.9.7.4.a",
                "description": "Generic device schedule information for signal controller",
                "allOf": [
                    {
                        "$ref": "#/$defs/DeviceInformationRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal controller"
                            },
                            "deviceInformationType": {
                                "const": "device schedule"
                            }
                        }
                    }
                ]
            }
        },
        "required": [
            "messageType",
            "deviceInformationRequest"
        ]
    },
    "SignalTimingPatternScheduleResponse": {
        "description": "Signal timing pattern schedule information sent from owner center to external center",
        "type": "object",
        "$reqId": "3.3.5.9.7.5",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SignalTimingPatternScheduleResponse"
            },
            "deviceControlScheduleInformation": {
                "$reqId": "3.3.5.9.7.5.a",
                "description": "Generic device schedule information",
                "$ref": "#/$defs/DeviceScheduleInformation"
            },
            "timeBaseScheduleDay": {
                "$reqId": "3.3.5.9.7.5.b",
                "description": "Time base schedule day pattern timing modes for traffic control",
                "type": "string",
                "enum": [
                    "unknown",
                    "other",
                    "free",
                    "fixed-time",
                    "actuated",
                    "semi-actuated",
                    "critical intersection control",
                    "traffic responsive",
                    "adaptive",
                    "flash-programmed"
                ]
            },
            "timingPatternId": {
                "$reqId": "3.3.5.9.7.5.c",
                "description": "Identifier for the signal timing pattern in the time base schedule day pattern",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "deviceControlScheduleInformation",
            "timeBaseScheduleDay",
            "timingPatternId"
        ]
    },
    "SubscriptionInformationRequest": {
        "description": "Send a subscription information request to an owner center",
        "type": "object",
        "$reqId": "3.3.1.4.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SubscriptionInformationRequest"
            },
            "externalOrganizationId": {
                "$reqId": "3.3.1.4.2.1",
                "description": "Include requesting organization information in the subscription information request from external center to owner center",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "externalOrganizationId"
        ]
    },
    "SubscriptionInformationResponse": {
        "description": "Send subscription information to external centers",
        "type": "object",
        "$reqId": "3.3.1.4.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "SubscriptionInformationResponse"
            },
            "ownerOrganizationId": {
                "$reqId": "3.3.1.4.3.1.a",
                "description": "Information regarding the owner organization",
                "type": "string"
            },
            "centerName": {
                "$reqId": "3.3.1.4.3.1.b",
                "description": "Center name assigned by the owner organization",
                "type": "string"
            },
            "dialogName": {
                "$reqId": "3.3.1.4.3.1.c",
                "description": "Name of the dialog",
                "$ref": "#/$defs/DialogNames"
            },
            "subscriptionTypes": {
                "$reqId": "3.3.1.4.3.1.d",
                "description": "Supported subscription types including one-time, periodic, and on-change.",
                "$ref": "#/$defs/SubscriptionTypes"
            },
            "supportedDataTypes": {
                "$reqId": "3.3.1.4.3.1.e",
                "description": "Support single device dialog for data interchange in generic subscriptions",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "inventoryDialogFull": {
                "$reqId": "3.3.1.4.3.2.a",
                "description": "Inventory dialog for full inventory list support within subscriptions",
                "type": "string"
            },
            "inventoryDialogIncremental": {
                "$reqId": "3.3.1.4.3.2.b",
                "description": "Support an inventory dialog with CRUD actions in incremental inventory list for subscriptions; if not supported, full inventory list must be used.",
                "type": "string"
            },
            "periodicity": {
                "$reqId": "3.3.1.4.3.2.c",
                "description": "Supported periodic subscription and polling intervals for field elements",
                "type": "string"
            },
            "changeTriggerFields": {
                "$reqId": "3.3.1.4.3.2.d",
                "description": "Change trigger fields for on-change subscriptions",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "devicesSupported": {
                "$reqId": "3.3.1.4.3.2.e",
                "description": "Limitations on the number of supported devices",
                "type": "number"
            }
        },
        "required": [
            "messageType",
            "ownerOrganizationId",
            "centerName",
            "dialogName",
            "subscriptionTypes",
            "supportedDataTypes",
            "inventoryDialogFull",
            "inventoryDialogIncremental",
            "periodicity",
            "changeTriggerFields",
            "devicesSupported"
        ]
    },
    "TrafficMonitoringDataInventoryRequest": {
        "description": "Send a traffic monitoring data inventory request to an owner center",
        "type": "object",
        "$reqId": "3.3.6.1.1.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "TrafficMonitoringDataInventoryRequest"
            },
            "requestingOrganizationInformation": {
                "$reqId": "3.3.6.1.1.2.1.a",
                "description": "Requesting organization information",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "ownerOrganizationInformation": {
                "$reqId": "3.3.6.1.1.2.1.b",
                "description": "Owner organization information for traffic monitoring data inventory request",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "authorization": {
                "$reqId": "3.3.6.1.1.2.2.1",
                "description": "Requirements for authorization information in traffic monitoring data inventory request",
                "$ref": "#/$defs/AuthHeader"
            },
            "operatorId": {
                "$reqId": "3.3.6.1.1.2.2.2",
                "description": "Requirements for operator identifier in traffic monitoring data inventory request",
                "type": "string"
            },
            "dataSetType": {
                "$reqId": "3.3.6.1.1.2.2.3",
                "description": "Send the type of data set of interest in the traffic monitoring data inventory request",
                "type": "string",
                "enum": [
                    "traffic-monitoring-data"
                ]
            },
            "dataCollectionPeriod": {
                "$reqId": "3.3.6.1.1.2.2.4",
                "description": "Send data collection period of interest in the traffic monitoring data inventory request",
                "type": "number"
            },
            "geoLocation": {
                "$reqId": "3.3.6.1.1.2.2.5",
                "description": "Send geographic location of interest in traffic monitoring data inventory request",
                "$ref": "#/$defs/GeoLocation"
            }
        },
        "required": [
            "messageType",
            "requestingOrganizationInformation",
            "ownerOrganizationInformation"
        ]
    },
    "TrafficMonitoringDataInventoryResponse": {
        "description": "Send traffic monitoring data inventory to external centers",
        "type": "object",
        "$reqId": "3.3.6.1.1.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "TrafficMonitoringDataInventoryResponse"
            },
            "organization": {
                "$reqId": "3.3.6.1.1.3.1.a",
                "description": "Information about the owner organization",
                "$ref": "#/$defs/OrganizationInformation"
            },
            "dataSetType": {
                "$reqId": "3.3.6.1.1.3.1.b",
                "description": "Type of data set",
                "type": "string"
            },
            "dataSetDescription": {
                "$reqId": "3.3.6.1.1.3.1.c",
                "description": "Description of the data set",
                "type": "string"
            },
            "dataCollectionTimePeriod": {
                "$reqId": "3.3.6.1.1.3.1.d",
                "description": "Period during which data is collected",
                "type": "number"
            },
            "dataSetPublicationDateTime": {
                "$reqId": "3.3.6.1.1.3.1.e",
                "description": "Date and time when the publication was released",
                "$ref": "#/$defs/DateTime"
            },
            "restrictionsTrafficMonitoringData": {
                "$reqId": "3.3.6.1.1.3.2.1",
                "description": "Requirements for placing restrictions on dissemination of traffic monitoring data",
                "$ref": "#/$defs/Restrictions"
            },
            "purposeDataSet": {
                "$reqId": "3.3.6.1.1.3.2.2",
                "description": "Provide a description of the purpose of the data set in the traffic monitoring data inventory",
                "type": "string"
            },
            "titleDataSet": {
                "$reqId": "3.3.6.1.1.3.2.3",
                "description": "Provide the title of the data set assigned by the owner center as part of the traffic monitoring data inventory.",
                "type": "string"
            },
            "versionDataSet": {
                "$reqId": "3.3.6.1.1.3.2.4",
                "description": "Provide the version of the data set as part of the traffic monitoring data inventory",
                "type": "string"
            },
            "publicationInformationDataSet": {
                "$reqId": "3.3.6.1.1.3.2.5",
                "description": "Provide publication information of the data set as part of the traffic monitoring data inventory",
                "type": "string"
            },
            "progressDataSet": {
                "$reqId": "3.3.6.1.1.3.2.6",
                "description": "Indicate the progress of the data set in the traffic monitoring data inventory",
                "type": "string",
                "enum": [
                    "complete",
                    "work in progress",
                    "planned"
                ]
            },
            "maintenanceDataSet": {
                "$reqId": "3.3.6.1.1.3.2.7",
                "description": "Indicate maintenance and update frequency of the traffic monitoring data set",
                "type": "string",
                "enum": [
                    "continually",
                    "daily",
                    "weekly",
                    "monthly",
                    "annually",
                    "unknown",
                    "as needed",
                    "irregular",
                    "none planned",
                    "free text"
                ]
            },
            "dataSetURL": {
                "$reqId": "3.3.6.1.1.3.2.8",
                "description": "Provide URL information for accessing the traffic monitoring data set",
                "type": "string"
            },
            "dataSetURLReferenceMedium": {
                "$reqId": "3.3.6.1.1.3.2.9",
                "description": "Provide file type or medium for URL reference information",
                "type": "string"
            },
            "roadwayNetworkId": {
                "$reqId": "3.3.6.1.1.3.2.10",
                "description": "Provide roadway network identifier information as part of traffic monitoring data inventory",
                "type": "string"
            },
            "linkId": {
                "$reqId": "3.3.6.1.1.3.2.11",
                "type": "string"
            },
            "routeDesignator": {
                "$reqId": "3.3.6.1.1.3.2.12",
                "description": "Provide route designator information for traffic monitoring data inventory",
                "type": "string"
            },
            "linearReference": {
                "$reqId": "3.3.6.1.1.3.2.13",
                "description": "Provide linear reference location and version information for traffic monitoring data inventory",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "organizationInfo",
            "dataSetType",
            "dataSetDescription",
            "dataCollectionTimePeriod",
            "dataSetPublicationDateTime"
        ]
    },
    "TrafficSignalControllerCommandRequest": {
        "description": "Signal control command requirements for external center to owner center",
        "type": "object",
        "$reqId": "3.3.5.9.17.2",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "TrafficSignalControllerCommandRequest"
            },
            "deviceControlRequestHeader": {
                "$reqId": "3.3.5.9.17.2.a",
                "description": "Generic device control command header information for signal controller device type",
                "allOf": [
                    {
                        "$ref": "#/$defs/ExternalDeviceControlRequest"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "deviceType": {
                                "const": "signal controller"
                            }
                        }
                    }
                ]
            },
            "controlCommandType": {
                "$reqId": "3.3.5.9.17.2.b",
                "description": "Type of control command for signal management",
                "type": "string",
                "enum": [
                    "change signal timing mode",
                    "change signal timing pattern"
                ]
            },
            "signalTimingModeChange": {
                "$reqId": "3.3.5.9.17.2.c",
                "description": "Change in signal timing mode",
                "type": "string",
                "enum": [
                    "free",
                    "fixed-time",
                    "actuated",
                    "semi-actuated",
                    "criticalintersection control",
                    "traffic responsive",
                    "adaptive",
                    "flash-programmed"
                ]
            },
            "changeSignalTiming": {
                "$reqId": "3.3.5.9.17.2.d",
                "description": "Change to the signal timing pattern if the change type is 'change signal timing pattern'",
                "type": "string"
            }
        },
        "required": [
            "messageType",
            "deviceControlRequestHeader",
            "controlCommandType",
            "signalTimingModeChange",
            "changeSignalTiming"
        ]
    },
    "TrafficSignalControllerCommandResponse": {
        "description": "Response to signal controller control command from an external center",
        "type": "object",
        "$reqId": "3.3.5.9.17.3",
        "properties": {
            "messageType": {
                "type": "string",
                "const": "TrafficSignalControllerCommandResponse"
            },
            "deviceControlResponse": {
                "$reqId": "3.3.5.9.17.3.a",
                "description": "Response information for generic device control commands",
                "$ref": "#/$defs/ExternalDeviceControlCommandResponse"
            }
        },
        "required": [
            "messageType",
            "deviceControlResponse"
        ]
    }
}